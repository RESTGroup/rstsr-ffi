//! Base of current FFI.
//!
//! Declaration of types, enums, cargo feature controls, etc.
//!
//! This file is generated automatically.

pub use crate::blis_types::*;

/* automatically generated by rust-bindgen 0.71.1 */

pub const __blis_arch_type_name: &[u8; 15] = b"BLIS_ARCH_TYPE\0";
pub const __blis_model_type_name: &[u8; 16] = b"BLIS_MODEL_TYPE\0";
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const BLIS_OS_LINUX: u32 = 1;
pub const BLIS_NT_MAX_PRIME: u32 = 11;
pub const TRUE: u32 = 1;
pub const FALSE: u32 = 0;
pub const BLIS_NUM_FP_TYPES: u32 = 4;
pub const BLIS_SIZEOF_S: u32 = 4;
pub const BLIS_SIZEOF_D: u32 = 8;
pub const BLIS_SIZEOF_C: u32 = 8;
pub const BLIS_SIZEOF_Z: u32 = 16;
pub const BLIS_DATATYPE_SHIFT: u32 = 0;
pub const BLIS_DOMAIN_SHIFT: u32 = 0;
pub const BLIS_PRECISION_SHIFT: u32 = 1;
pub const BLIS_CONJTRANS_SHIFT: u32 = 3;
pub const BLIS_TRANS_SHIFT: u32 = 3;
pub const BLIS_CONJ_SHIFT: u32 = 4;
pub const BLIS_UPLO_SHIFT: u32 = 5;
pub const BLIS_UPPER_SHIFT: u32 = 5;
pub const BLIS_DIAG_SHIFT: u32 = 6;
pub const BLIS_LOWER_SHIFT: u32 = 7;
pub const BLIS_UNIT_DIAG_SHIFT: u32 = 8;
pub const BLIS_INVERT_DIAG_SHIFT: u32 = 9;
pub const BLIS_TARGET_DT_SHIFT: u32 = 10;
pub const BLIS_TARGET_DOMAIN_SHIFT: u32 = 10;
pub const BLIS_TARGET_PREC_SHIFT: u32 = 11;
pub const BLIS_EXEC_DT_SHIFT: u32 = 13;
pub const BLIS_EXEC_DOMAIN_SHIFT: u32 = 13;
pub const BLIS_EXEC_PREC_SHIFT: u32 = 14;
pub const BLIS_PACK_SCHEMA_SHIFT: u32 = 16;
pub const BLIS_PACK_RC_SHIFT: u32 = 16;
pub const BLIS_PACK_PANEL_SHIFT: u32 = 17;
pub const BLIS_PACK_FORMAT_SHIFT: u32 = 18;
pub const BLIS_PACK_SHIFT: u32 = 22;
pub const BLIS_PACK_REV_IF_UPPER_SHIFT: u32 = 23;
pub const BLIS_PACK_REV_IF_LOWER_SHIFT: u32 = 24;
pub const BLIS_PACK_BUFFER_SHIFT: u32 = 25;
pub const BLIS_STRUC_SHIFT: u32 = 27;
pub const BLIS_COMP_DT_SHIFT: u32 = 29;
pub const BLIS_COMP_DOMAIN_SHIFT: u32 = 29;
pub const BLIS_COMP_PREC_SHIFT: u32 = 30;
pub const BLIS_SCALAR_DT_SHIFT: u32 = 0;
pub const BLIS_SCALAR_DOMAIN_SHIFT: u32 = 0;
pub const BLIS_SCALAR_PREC_SHIFT: u32 = 1;
pub const BLIS_DATATYPE_BITS: u32 = 7;
pub const BLIS_DOMAIN_BIT: u32 = 1;
pub const BLIS_PRECISION_BIT: u32 = 2;
pub const BLIS_CONJTRANS_BITS: u32 = 24;
pub const BLIS_TRANS_BIT: u32 = 8;
pub const BLIS_CONJ_BIT: u32 = 16;
pub const BLIS_UPLO_BITS: u32 = 224;
pub const BLIS_UPPER_BIT: u32 = 32;
pub const BLIS_DIAG_BIT: u32 = 64;
pub const BLIS_LOWER_BIT: u32 = 128;
pub const BLIS_UNIT_DIAG_BIT: u32 = 256;
pub const BLIS_INVERT_DIAG_BIT: u32 = 512;
pub const BLIS_TARGET_DT_BITS: u32 = 7168;
pub const BLIS_TARGET_DOMAIN_BIT: u32 = 1024;
pub const BLIS_TARGET_PREC_BIT: u32 = 2048;
pub const BLIS_EXEC_DT_BITS: u32 = 57344;
pub const BLIS_EXEC_DOMAIN_BIT: u32 = 8192;
pub const BLIS_EXEC_PREC_BIT: u32 = 16384;
pub const BLIS_PACK_SCHEMA_BITS: u32 = 8323072;
pub const BLIS_PACK_RC_BIT: u32 = 65536;
pub const BLIS_PACK_PANEL_BIT: u32 = 131072;
pub const BLIS_PACK_FORMAT_BITS: u32 = 3932160;
pub const BLIS_PACK_BIT: u32 = 4194304;
pub const BLIS_PACK_REV_IF_UPPER_BIT: u32 = 8388608;
pub const BLIS_PACK_REV_IF_LOWER_BIT: u32 = 16777216;
pub const BLIS_PACK_BUFFER_BITS: u32 = 100663296;
pub const BLIS_STRUC_BITS: u32 = 402653184;
pub const BLIS_COMP_DT_BITS: u32 = 3758096384;
pub const BLIS_COMP_DOMAIN_BIT: u32 = 536870912;
pub const BLIS_COMP_PREC_BIT: u32 = 1073741824;
pub const BLIS_SCALAR_DT_BITS: u32 = 7;
pub const BLIS_SCALAR_DOMAIN_BIT: u32 = 1;
pub const BLIS_SCALAR_PREC_BIT: u32 = 2;
pub const BLIS_BITVAL_REAL: u32 = 0;
pub const BLIS_BITVAL_COMPLEX: u32 = 1;
pub const BLIS_BITVAL_SINGLE_PREC: u32 = 0;
pub const BLIS_BITVAL_DOUBLE_PREC: u32 = 2;
pub const BLIS_BITVAL_FLOAT_TYPE: u32 = 0;
pub const BLIS_BITVAL_SCOMPLEX_TYPE: u32 = 1;
pub const BLIS_BITVAL_DOUBLE_TYPE: u32 = 2;
pub const BLIS_BITVAL_DCOMPLEX_TYPE: u32 = 3;
pub const BLIS_BITVAL_INT_TYPE: u32 = 4;
pub const BLIS_BITVAL_CONST_TYPE: u32 = 5;
pub const BLIS_BITVAL_NO_TRANS: u32 = 0;
pub const BLIS_BITVAL_TRANS: u32 = 8;
pub const BLIS_BITVAL_NO_CONJ: u32 = 0;
pub const BLIS_BITVAL_CONJ: u32 = 16;
pub const BLIS_BITVAL_CONJ_TRANS: u32 = 24;
pub const BLIS_BITVAL_ZEROS: u32 = 0;
pub const BLIS_BITVAL_UPPER: u32 = 96;
pub const BLIS_BITVAL_LOWER: u32 = 192;
pub const BLIS_BITVAL_DENSE: u32 = 224;
pub const BLIS_BITVAL_NONUNIT_DIAG: u32 = 0;
pub const BLIS_BITVAL_UNIT_DIAG: u32 = 256;
pub const BLIS_BITVAL_INVERT_DIAG: u32 = 512;
pub const BLIS_BITVAL_NOT_PACKED: u32 = 0;
pub const BLIS_BITVAL_1E: u32 = 262144;
pub const BLIS_BITVAL_1R: u32 = 524288;
pub const BLIS_BITVAL_PACKED_UNSPEC: u32 = 4194304;
pub const BLIS_BITVAL_PACKED_ROWS: u32 = 4194304;
pub const BLIS_BITVAL_PACKED_COLUMNS: u32 = 4259840;
pub const BLIS_BITVAL_PACKED_ROW_PANELS: u32 = 4325376;
pub const BLIS_BITVAL_PACKED_COL_PANELS: u32 = 4390912;
pub const BLIS_BITVAL_PACKED_ROW_PANELS_1E: u32 = 4587520;
pub const BLIS_BITVAL_PACKED_COL_PANELS_1E: u32 = 4653056;
pub const BLIS_BITVAL_PACKED_ROW_PANELS_1R: u32 = 4849664;
pub const BLIS_BITVAL_PACKED_COL_PANELS_1R: u32 = 4915200;
pub const BLIS_BITVAL_PACK_FWD_IF_UPPER: u32 = 0;
pub const BLIS_BITVAL_PACK_REV_IF_UPPER: u32 = 8388608;
pub const BLIS_BITVAL_PACK_FWD_IF_LOWER: u32 = 0;
pub const BLIS_BITVAL_PACK_REV_IF_LOWER: u32 = 16777216;
pub const BLIS_BITVAL_BUFFER_FOR_A_BLOCK: u32 = 0;
pub const BLIS_BITVAL_BUFFER_FOR_B_PANEL: u32 = 33554432;
pub const BLIS_BITVAL_BUFFER_FOR_C_PANEL: u32 = 67108864;
pub const BLIS_BITVAL_BUFFER_FOR_GEN_USE: u32 = 100663296;
pub const BLIS_BITVAL_GENERAL: u32 = 0;
pub const BLIS_BITVAL_HERMITIAN: u32 = 134217728;
pub const BLIS_BITVAL_SYMMETRIC: u32 = 268435456;
pub const BLIS_BITVAL_TRIANGULAR: u32 = 402653184;
pub const BLIS_NUM_PACK_SCHEMA_TYPES: u32 = 3;
pub const BLIS_NUM_MACH_PARAMS: u32 = 11;
pub const BLIS_NUM_LEVEL1V_KERS: u32 = 15;
pub const BLIS_NUM_LEVEL1F_KERS: u32 = 5;
pub const BLIS_NUM_PACKM_KERS: u32 = 33;
pub const BLIS_NUM_UNPACKM_KERS: u32 = 32;
pub const BLIS_NUM_LEVEL3_UKRS: u32 = 6;
pub const BLIS_NUM_UKR_IMPL_TYPES: u32 = 4;
pub const BLIS_NUM_3OP_RC_COMBOS: u32 = 9;
pub const BLIS_NUM_LOOPS: u32 = 6;
pub const BLIS_NUM_LEVEL3_OPS: u32 = 12;
pub const BLIS_NUM_BLKSZS: u32 = 11;
pub const BLIS_NUM_THRESH: u32 = 3;
pub const BLIS_PTHREAD_ONCE_INIT: u32 = 0;
pub const BLIS_FUNC_PREFIX_STR: &[u8; 4] = b"bli\0";
pub const BLIS_THREAD_MAX_IR: u32 = 1;
pub const BLIS_THREAD_MAX_JR: u32 = 1;
pub const BLIS_SMALL_MATRIX_THRES: u32 = 700;
pub const BLIS_SMALL_M_RECT_MATRIX_THRES: u32 = 160;
pub const BLIS_SMALL_K_RECT_MATRIX_THRES: u32 = 128;
pub const BLIS_SMALL_MATRIX_A_THRES_M_SYRK: u32 = 96;
pub const BLIS_SMALL_MATRIX_A_THRES_N_SYRK: u32 = 128;
pub const AOCL_BLIS_MULTIINSTANCE: u32 = 0;
pub const BLIS_THREAD_RATIO_M: u32 = 1;
pub const BLIS_THREAD_RATIO_N: u32 = 1;
pub const BLIS_PAGE_SIZE: u32 = 4096;
pub const BLIS_SIMD_NUM_REGISTERS: u32 = 32;
pub const BLIS_SIMD_SIZE: u32 = 64;
pub const BLIS_SIMD_ALIGN_SIZE: u32 = 64;
pub const BLIS_STACK_BUF_MAX_SIZE: u32 = 4096;
pub const BLIS_STACK_BUF_ALIGN_SIZE: u32 = 64;
pub const BLIS_HEAP_ADDR_ALIGN_SIZE: u32 = 64;
pub const BLIS_HEAP_STRIDE_ALIGN_SIZE: u32 = 64;
pub const BLIS_POOL_ADDR_ALIGN_SIZE_A: u32 = 4096;
pub const BLIS_POOL_ADDR_ALIGN_SIZE_B: u32 = 4096;
pub const BLIS_POOL_ADDR_ALIGN_SIZE_C: u32 = 4096;
pub const BLIS_POOL_ADDR_ALIGN_SIZE_GEN: u32 = 4096;
pub const BLIS_POOL_ADDR_OFFSET_SIZE_A: u32 = 0;
pub const BLIS_POOL_ADDR_OFFSET_SIZE_B: u32 = 0;
pub const BLIS_POOL_ADDR_OFFSET_SIZE_C: u32 = 0;
pub const BLIS_POOL_ADDR_OFFSET_SIZE_GEN: u32 = 0;
pub const BLIS_DOUBLE_TO_UINT64_ONE_ABS: u64 = 4607182418800017408;
pub const BLIS_DOUBLE_TO_UINT64_MINUS_ONE: i64 = -4616189618054758400;
pub const TRUE_: u32 = 1;
pub const FALSE_: u32 = 0;
pub const AOCL_PROGRESS_FREQUENCY: f64 = 1000000000.0;
pub const AOCL_MAX_POST_OPS: u32 = 8;
pub const AOCL_MAX_PRE_OPS: u32 = 1;
pub const AOCL_OPERATION_TYPE_LEN: u32 = 9;
pub const AOCL_UTIL_OPERATION_TYPE_LEN: u32 = 3;
pub const AOCL_ELTWISE_OPS_OPERATION_TYPE_LEN: u32 = 2;
pub const LPGEMM_BF16_MR: u32 = 6;
pub const LPGEMM_BF16_NR: u32 = 64;
pub const BLIS_MAX_BLAS_FUNC_STR_LENGTH: u32 = 8;
pub const AOCL_DTL_TRACE_ENABLE: u32 = 0;
pub const AOCL_DTL_DUMP_ENABLE: u32 = 0;
pub const AOCL_DTL_LOG_ENABLE: u32 = 0;
pub const AOCL_DTL_LEVEL_ALL: u32 = 15;
pub const AOCL_DTL_LEVEL_TRACE_9: u32 = 14;
pub const AOCL_DTL_LEVEL_TRACE_8: u32 = 13;
pub const AOCL_DTL_LEVEL_TRACE_7: u32 = 12;
pub const AOCL_DTL_LEVEL_TRACE_6: u32 = 11;
pub const AOCL_DTL_LEVEL_TRACE_5: u32 = 10;
pub const AOCL_DTL_LEVEL_TRACE_4: u32 = 9;
pub const AOCL_DTL_LEVEL_TRACE_3: u32 = 8;
pub const AOCL_DTL_LEVEL_TRACE_2: u32 = 7;
pub const AOCL_DTL_LEVEL_TRACE_1: u32 = 6;
pub const AOCL_DTL_LEVEL_VERBOSE: u32 = 5;
pub const AOCL_DTL_LEVEL_INFO: u32 = 4;
pub const AOCL_DTL_LEVEL_MINOR: u32 = 3;
pub const AOCL_DTL_LEVEL_MAJOR: u32 = 2;
pub const AOCL_DTL_LEVEL_CRITICAL: u32 = 1;
pub const AOCL_DTL_TRACE_FILE: &[u8; 18] = b"aocldtl_trace.txt\0";
pub const AOCL_DTL_AUTO_TRACE_FILE: &[u8; 27] = b"aocldtl_auto_trace.rawfile\0";
pub const AOCL_DTL_LOG_FILE: &[u8; 16] = b"aocldtl_log.txt\0";
pub const AOCL_CHAR_DATA_TYPE: u32 = 1;
pub const AOCL_UINT16_DATA_TYPE: u32 = 2;
pub const AOCL_STRING_DATA_TYPE: u32 = 3;
pub const AOCL_UINT32_DATA_TYPE: u32 = 4;
pub const AOCL_LOG_HEX_VALUE: u8 = 120u8;
pub const AOCL_LOG_DECIMAL_VALUE: u8 = 100u8;
pub const AOCL_FAL_SUCCESS: u32 = 0;
pub const AOCL_FAL_CLOSE_ERROR: i32 = -1;
pub const AOCL_FAL_READ_ERROR: i32 = -2;
pub const AOCL_FAL_WRITE_ERROR: i32 = -3;
pub const AOCL_FAL_EOF_ERROR: i32 = -6;
pub const AOCL_FAL_FERROR: i32 = -7;
pub const TRACE_TYPE_FENTRY: u32 = 1;
pub const TRACE_TYPE_FEXIT: u32 = 2;
pub const TRACE_TYPE_LOG: u32 = 3;
pub const TRACE_TYPE_RAW: u32 = 4;
pub type __off_t = c_long;
pub type __off64_t = c_long;
pub type __pid_t = c_int;
pub type FILE = _IO_FILE;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_codecvt {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_wide_data {
    _unused: [u8; 0],
}
pub type _IO_lock_t = c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_FILE {
    pub _flags: c_int,
    pub _IO_read_ptr: *mut c_char,
    pub _IO_read_end: *mut c_char,
    pub _IO_read_base: *mut c_char,
    pub _IO_write_base: *mut c_char,
    pub _IO_write_ptr: *mut c_char,
    pub _IO_write_end: *mut c_char,
    pub _IO_buf_base: *mut c_char,
    pub _IO_buf_end: *mut c_char,
    pub _IO_save_base: *mut c_char,
    pub _IO_backup_base: *mut c_char,
    pub _IO_save_end: *mut c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: c_int,
    pub _flags2: c_int,
    pub _old_offset: __off_t,
    pub _cur_column: c_ushort,
    pub _vtable_offset: c_schar,
    pub _shortbuf: [c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut c_void,
    pub __pad5: usize,
    pub _mode: c_int,
    pub _unused2: [c_char; 20usize],
}
pub type pid_t = __pid_t;
pub type gint_t = i64;
pub type guint_t = u64;
pub type dim_t = gint_t;
pub type inc_t = gint_t;
pub type doff_t = gint_t;
pub type siz_t = u64;
pub type objbits_t = u32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct scomplex {
    pub real: f32,
    pub imag: f32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct dcomplex {
    pub real: f64,
    pub imag: f64,
}
pub type atom_t = dcomplex;
pub type f77_char = c_char;
pub type f77_float = f32;
pub type f77_double = f64;
pub type f77_scomplex = scomplex;
pub type f77_dcomplex = dcomplex;
pub type void_fp = *mut c_void;
pub type malloc_ft = Option<extern "C" fn(size: usize) -> *mut c_void>;
pub type free_ft = Option<extern "C" fn(p: *mut c_void)>;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum trans_t {
    BLIS_NO_TRANSPOSE = 0,
    BLIS_TRANSPOSE = 8,
    BLIS_CONJ_NO_TRANSPOSE = 16,
    BLIS_CONJ_TRANSPOSE = 24,
    BLIS_PACKED = 4194304,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum conj_t {
    BLIS_NO_CONJUGATE = 0,
    BLIS_CONJUGATE = 16,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum uplo_t {
    BLIS_ZEROS = 0,
    BLIS_LOWER = 192,
    BLIS_UPPER = 96,
    BLIS_DENSE = 224,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum side_t {
    BLIS_LEFT = 0,
    BLIS_RIGHT = 1,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum diag_t {
    BLIS_NONUNIT_DIAG = 0,
    BLIS_UNIT_DIAG = 256,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum invdiag_t {
    BLIS_NO_INVERT_DIAG = 0,
    BLIS_INVERT_DIAG = 512,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum struc_t {
    BLIS_GENERAL = 0,
    BLIS_HERMITIAN = 134217728,
    BLIS_SYMMETRIC = 268435456,
    BLIS_TRIANGULAR = 402653184,
}
impl num_t {
    pub const BLIS_DT_LO: num_t = num_t::BLIS_FLOAT;
}
impl num_t {
    pub const BLIS_DT_HI: num_t = num_t::BLIS_DCOMPLEX;
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum num_t {
    BLIS_FLOAT = 0,
    BLIS_DOUBLE = 2,
    BLIS_SCOMPLEX = 1,
    BLIS_DCOMPLEX = 3,
    BLIS_INT = 4,
    BLIS_CONSTANT = 5,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum dom_t {
    BLIS_REAL = 0,
    BLIS_COMPLEX = 1,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum prec_t {
    BLIS_SINGLE_PREC = 0,
    BLIS_DOUBLE_PREC = 2,
}
impl pack_t {
    pub const BLIS_PACKED_VECTOR: pack_t = pack_t::BLIS_PACKED_UNSPEC;
}
impl pack_t {
    pub const BLIS_PACKED_ROWS: pack_t = pack_t::BLIS_PACKED_UNSPEC;
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum pack_t {
    BLIS_NOT_PACKED = 0,
    BLIS_PACKED_UNSPEC = 4194304,
    BLIS_PACKED_COLUMNS = 4259840,
    BLIS_PACKED_ROW_PANELS = 4325376,
    BLIS_PACKED_COL_PANELS = 4390912,
    BLIS_PACKED_ROW_PANELS_1E = 4587520,
    BLIS_PACKED_COL_PANELS_1E = 4653056,
    BLIS_PACKED_ROW_PANELS_1R = 4849664,
    BLIS_PACKED_COL_PANELS_1R = 4915200,
}
impl packord_t {
    pub const BLIS_PACK_FWD_IF_LOWER: packord_t = packord_t::BLIS_PACK_FWD_IF_UPPER;
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum packord_t {
    BLIS_PACK_FWD_IF_UPPER = 0,
    BLIS_PACK_REV_IF_UPPER = 8388608,
    BLIS_PACK_REV_IF_LOWER = 16777216,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum packbuf_t {
    BLIS_BUFFER_FOR_A_BLOCK = 0,
    BLIS_BUFFER_FOR_B_PANEL = 33554432,
    BLIS_BUFFER_FOR_C_PANEL = 67108864,
    BLIS_BUFFER_FOR_GEN_USE = 100663296,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum dir_t {
    BLIS_FWD = 0,
    BLIS_BWD = 1,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum subpart_t {
    BLIS_SUBPART0 = 0,
    BLIS_SUBPART1 = 1,
    BLIS_SUBPART2 = 2,
    BLIS_SUBPART1AND0 = 3,
    BLIS_SUBPART1AND2 = 4,
    BLIS_SUBPART1A = 5,
    BLIS_SUBPART1B = 6,
    BLIS_SUBPART00 = 7,
    BLIS_SUBPART10 = 8,
    BLIS_SUBPART20 = 9,
    BLIS_SUBPART01 = 10,
    BLIS_SUBPART11 = 11,
    BLIS_SUBPART21 = 12,
    BLIS_SUBPART02 = 13,
    BLIS_SUBPART12 = 14,
    BLIS_SUBPART22 = 15,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum mdim_t {
    BLIS_M = 0,
    BLIS_N = 1,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum machval_t {
    BLIS_MACH_EPS = 0,
    BLIS_MACH_SFMIN = 1,
    BLIS_MACH_BASE = 2,
    BLIS_MACH_PREC = 3,
    BLIS_MACH_NDIGMANT = 4,
    BLIS_MACH_RND = 5,
    BLIS_MACH_EMIN = 6,
    BLIS_MACH_RMIN = 7,
    BLIS_MACH_EMAX = 8,
    BLIS_MACH_RMAX = 9,
    BLIS_MACH_EPS2 = 10,
}
impl ind_t {
    pub const BLIS_IND_FIRST: ind_t = ind_t::BLIS_1M;
}
impl ind_t {
    pub const BLIS_IND_LAST: ind_t = ind_t::BLIS_NAT;
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum ind_t {
    BLIS_1M = 0,
    BLIS_NAT = 1,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum l1vkr_t {
    BLIS_ADDV_KER = 0,
    BLIS_AMAXV_KER = 1,
    BLIS_AMINV_KER = 2,
    BLIS_AXPBYV_KER = 3,
    BLIS_AXPYV_KER = 4,
    BLIS_COPYV_KER = 5,
    BLIS_DOTV_KER = 6,
    BLIS_DOTXV_KER = 7,
    BLIS_INVERTV_KER = 8,
    BLIS_SCALV_KER = 9,
    BLIS_SCAL2V_KER = 10,
    BLIS_SETV_KER = 11,
    BLIS_SUBV_KER = 12,
    BLIS_SWAPV_KER = 13,
    BLIS_XPBYV_KER = 14,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum l1fkr_t {
    BLIS_AXPY2V_KER = 0,
    BLIS_DOTAXPYV_KER = 1,
    BLIS_AXPYF_KER = 2,
    BLIS_DOTXF_KER = 3,
    BLIS_DOTXAXPYF_KER = 4,
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_0XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_0XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_1XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_1XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_2XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_2XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_3XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_3XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_4XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_4XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_5XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_5XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_6XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_6XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_7XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_7XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_8XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_8XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_9XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_9XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_10XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_10XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_11XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_11XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_12XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_12XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_13XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_13XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_14XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_14XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_15XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_15XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_16XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_16XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_17XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_17XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_18XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_18XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_19XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_19XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_20XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_20XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_21XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_21XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_22XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_22XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_23XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_23XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_24XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_24XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_25XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_25XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_26XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_26XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_27XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_27XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_28XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_28XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_29XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_29XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_30XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_30XK_KER;
}
impl l1mkr_t {
    pub const BLIS_UNPACKM_31XK_KER: l1mkr_t = l1mkr_t::BLIS_PACKM_31XK_KER;
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum l1mkr_t {
    BLIS_PACKM_0XK_KER = 0,
    BLIS_PACKM_1XK_KER = 1,
    BLIS_PACKM_2XK_KER = 2,
    BLIS_PACKM_3XK_KER = 3,
    BLIS_PACKM_4XK_KER = 4,
    BLIS_PACKM_5XK_KER = 5,
    BLIS_PACKM_6XK_KER = 6,
    BLIS_PACKM_7XK_KER = 7,
    BLIS_PACKM_8XK_KER = 8,
    BLIS_PACKM_9XK_KER = 9,
    BLIS_PACKM_10XK_KER = 10,
    BLIS_PACKM_11XK_KER = 11,
    BLIS_PACKM_12XK_KER = 12,
    BLIS_PACKM_13XK_KER = 13,
    BLIS_PACKM_14XK_KER = 14,
    BLIS_PACKM_15XK_KER = 15,
    BLIS_PACKM_16XK_KER = 16,
    BLIS_PACKM_17XK_KER = 17,
    BLIS_PACKM_18XK_KER = 18,
    BLIS_PACKM_19XK_KER = 19,
    BLIS_PACKM_20XK_KER = 20,
    BLIS_PACKM_21XK_KER = 21,
    BLIS_PACKM_22XK_KER = 22,
    BLIS_PACKM_23XK_KER = 23,
    BLIS_PACKM_24XK_KER = 24,
    BLIS_PACKM_25XK_KER = 25,
    BLIS_PACKM_26XK_KER = 26,
    BLIS_PACKM_27XK_KER = 27,
    BLIS_PACKM_28XK_KER = 28,
    BLIS_PACKM_29XK_KER = 29,
    BLIS_PACKM_30XK_KER = 30,
    BLIS_PACKM_31XK_KER = 31,
    BLIS_PACKM_32XK_KER = 32,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum l3ukr_t {
    BLIS_GEMM_UKR = 0,
    BLIS_GEMMTRSM_L_UKR = 1,
    BLIS_GEMMTRSM_U_UKR = 2,
    BLIS_TRSM_L_UKR = 3,
    BLIS_TRSM_U_UKR = 4,
    BLIS_GEMM_FOR_TRSM_UKR = 5,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum kimpl_t {
    BLIS_REFERENCE_UKERNEL = 0,
    BLIS_VIRTUAL_UKERNEL = 1,
    BLIS_OPTIMIZED_UKERNEL = 2,
    BLIS_NOTAPPLIC_UKERNEL = 3,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum stor3_t {
    BLIS_RRR = 0,
    BLIS_RRC = 1,
    BLIS_RCR = 2,
    BLIS_RCC = 3,
    BLIS_CRR = 4,
    BLIS_CRC = 5,
    BLIS_CCR = 6,
    BLIS_CCC = 7,
    BLIS_XXX = 8,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum opid_t {
    BLIS_GEMM = 0,
    BLIS_HEMM = 1,
    BLIS_HERK = 2,
    BLIS_HER2K = 3,
    BLIS_SYMM = 4,
    BLIS_SYRK = 5,
    BLIS_SYR2K = 6,
    BLIS_TRMM3 = 7,
    BLIS_TRMM = 8,
    BLIS_TRSM = 9,
    BLIS_GEMMT = 10,
    BLIS_GEMM_MD = 11,
    BLIS_NOID = 12,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum bszid_t {
    BLIS_KR = 0,
    BLIS_MR = 1,
    BLIS_NR = 2,
    BLIS_MC = 3,
    BLIS_KC = 4,
    BLIS_NC = 5,
    BLIS_M2 = 6,
    BLIS_N2 = 7,
    BLIS_AF = 8,
    BLIS_DF = 9,
    BLIS_XF = 10,
    BLIS_NO_PART = 11,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum threshid_t {
    BLIS_MT = 0,
    BLIS_NT = 1,
    BLIS_KT = 2,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum arch_t {
    BLIS_ARCH_ERROR = 0,
    BLIS_ARCH_GENERIC = 1,
    BLIS_ARCH_SKX = 2,
    BLIS_ARCH_KNL = 3,
    BLIS_ARCH_KNC = 4,
    BLIS_ARCH_HASWELL = 5,
    BLIS_ARCH_SANDYBRIDGE = 6,
    BLIS_ARCH_PENRYN = 7,
    BLIS_ARCH_ZEN5 = 8,
    BLIS_ARCH_ZEN4 = 9,
    BLIS_ARCH_ZEN3 = 10,
    BLIS_ARCH_ZEN2 = 11,
    BLIS_ARCH_ZEN = 12,
    BLIS_ARCH_EXCAVATOR = 13,
    BLIS_ARCH_STEAMROLLER = 14,
    BLIS_ARCH_PILEDRIVER = 15,
    BLIS_ARCH_BULLDOZER = 16,
    BLIS_ARCH_ARMSVE = 17,
    BLIS_ARCH_A64FX = 18,
    BLIS_ARCH_FIRESTORM = 19,
    BLIS_ARCH_THUNDERX2 = 20,
    BLIS_ARCH_CORTEXA57 = 21,
    BLIS_ARCH_CORTEXA53 = 22,
    BLIS_ARCH_CORTEXA15 = 23,
    BLIS_ARCH_CORTEXA9 = 24,
    BLIS_ARCH_POWER10 = 25,
    BLIS_ARCH_POWER9 = 26,
    BLIS_ARCH_POWER7 = 27,
    BLIS_ARCH_BGQ = 28,
    BLIS_NUM_ARCHS = 29,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum model_t {
    BLIS_MODEL_ERROR = 0,
    BLIS_MODEL_DEFAULT = 1,
    BLIS_MODEL_TURIN = 2,
    BLIS_MODEL_TURIN_DENSE = 3,
    BLIS_MODEL_GENOA = 4,
    BLIS_MODEL_BERGAMO = 5,
    BLIS_MODEL_GENOA_X = 6,
    BLIS_MODEL_MILAN = 7,
    BLIS_MODEL_MILAN_X = 8,
    BLIS_NUM_MODELS = 9,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union __atomic_wide_counter {
    pub __value64: c_ulonglong,
    pub __value32: __atomic_wide_counter__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __atomic_wide_counter__bindgen_ty_1 {
    pub __low: c_uint,
    pub __high: c_uint,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_internal_list {
    pub __prev: *mut __pthread_internal_list,
    pub __next: *mut __pthread_internal_list,
}
pub type __pthread_list_t = __pthread_internal_list;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_mutex_s {
    pub __lock: c_int,
    pub __count: c_uint,
    pub __owner: c_int,
    pub __nusers: c_uint,
    pub __kind: c_int,
    pub __spins: c_short,
    pub __elision: c_short,
    pub __list: __pthread_list_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct __pthread_cond_s {
    pub __wseq: __atomic_wide_counter,
    pub __g1_start: __atomic_wide_counter,
    pub __g_refs: [c_uint; 2usize],
    pub __g_size: [c_uint; 2usize],
    pub __g1_orig_size: c_uint,
    pub __wrefs: c_uint,
    pub __g_signals: [c_uint; 2usize],
}
pub type pthread_t = c_ulong;
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_mutexattr_t {
    pub __size: [c_char; 4usize],
    pub __align: c_int,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_condattr_t {
    pub __size: [c_char; 4usize],
    pub __align: c_int,
}
pub type pthread_once_t = c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_attr_t {
    pub __size: [c_char; 56usize],
    pub __align: c_long,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_mutex_t {
    pub __data: __pthread_mutex_s,
    pub __size: [c_char; 40usize],
    pub __align: c_long,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_cond_t {
    pub __data: __pthread_cond_s,
    pub __size: [c_char; 48usize],
    pub __align: c_longlong,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_barrier_t {
    pub __size: [c_char; 32usize],
    pub __align: c_long,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_barrierattr_t {
    pub __size: [c_char; 4usize],
    pub __align: c_int,
}
pub type bli_pthread_t = pthread_t;
pub type bli_pthread_attr_t = pthread_attr_t;
pub type bli_pthread_mutex_t = pthread_mutex_t;
pub type bli_pthread_mutexattr_t = pthread_mutexattr_t;
pub type bli_pthread_cond_t = pthread_cond_t;
pub type bli_pthread_condattr_t = pthread_condattr_t;
pub type bli_pthread_once_t = pthread_once_t;
pub type bli_pthread_barrier_t = pthread_barrier_t;
pub type bli_pthread_barrierattr_t = pthread_barrierattr_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gemmtiny_ukr_info_t {
    pub ukr_fp: *mut c_void,
    pub stor_pref: bool,
    pub MR: dim_t,
    pub NR: dim_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pblk_t {
    pub buf: *mut c_void,
    pub block_size: siz_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pool_t {
    pub block_ptrs: *mut c_void,
    pub block_ptrs_len: dim_t,
    pub top_index: dim_t,
    pub num_blocks: dim_t,
    pub block_size: siz_t,
    pub align_size: siz_t,
    pub offset_size: siz_t,
    pub malloc_fp: malloc_ft,
    pub free_fp: free_ft,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct array_t {
    pub buf: *mut c_void,
    pub num_elem: siz_t,
    pub elem_size: siz_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct apool_t {
    pub mutex: bli_pthread_mutex_t,
    pub pool: pool_t,
    pub def_array_len: siz_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct pba_s {
    pub pools: [pool_t; 3usize],
    pub mutex: bli_pthread_mutex_t,
    pub align_size: siz_t,
    pub malloc_fp: malloc_ft,
    pub free_fp: free_ft,
}
pub type pba_t = pba_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mem_s {
    pub pblk: pblk_t,
    pub buf_type: packbuf_t,
    pub pool: *mut pool_t,
    pub size: siz_t,
}
pub type mem_t = mem_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cntl_s {
    pub family: opid_t,
    pub bszid: bszid_t,
    pub var_func: void_fp,
    pub sub_prenode: *mut cntl_s,
    pub sub_node: *mut cntl_s,
    pub params: *mut c_void,
    pub pack_mem: mem_t,
}
pub type cntl_t = cntl_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct blksz_s {
    pub v: [dim_t; 4usize],
    pub e: [dim_t; 4usize],
}
pub type blksz_t = blksz_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct func_s {
    pub ptr: [void_fp; 4usize],
}
pub type func_t = func_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mbool_s {
    pub v: [bool; 4usize],
}
pub type mbool_t = mbool_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct auxinfo_t {
    pub schema_a: pack_t,
    pub schema_b: pack_t,
    pub a_next: *mut c_void,
    pub b_next: *mut c_void,
    pub is_a: inc_t,
    pub is_b: inc_t,
    pub ps_a: inc_t,
    pub ps_b: inc_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct constdata_s {
    pub s: f32,
    pub d: f64,
    pub c: scomplex,
    pub z: dcomplex,
    pub i: gint_t,
}
pub type constdata_t = constdata_s;
pub type obj_pack_fn_t = Option<
    extern "C" fn(
        mat: mdim_t,
        mem: *mut mem_t,
        a: *mut obj_s,
        ap: *mut obj_s,
        cntx: *mut cntx_s,
        rntm: *mut rntm_s,
        thread: *mut thrinfo_s,
    ),
>;
pub type obj_ker_fn_t = Option<
    extern "C" fn(
        a: *mut obj_s,
        b: *mut obj_s,
        c: *mut obj_s,
        cntx: *mut cntx_s,
        rntm: *mut rntm_s,
        thread: *mut thrinfo_s,
    ),
>;
pub type obj_ukr_fn_t = Option<
    extern "C" fn(
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut c_void,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_s,
    ),
>;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct obj_s {
    pub root: *mut obj_s,
    pub off: [dim_t; 2usize],
    pub dim: [dim_t; 2usize],
    pub diag_off: doff_t,
    pub info: objbits_t,
    pub info2: objbits_t,
    pub elem_size: siz_t,
    pub buffer: *mut c_void,
    pub rs: inc_t,
    pub cs: inc_t,
    pub is: inc_t,
    pub scalar: atom_t,
    pub m_padded: dim_t,
    pub n_padded: dim_t,
    pub ps: inc_t,
    pub pd: inc_t,
    pub m_panel: dim_t,
    pub n_panel: dim_t,
    pub user_data: *mut c_void,
    pub pack: obj_pack_fn_t,
    pub ker: obj_ker_fn_t,
    pub ukr: obj_ukr_fn_t,
}
pub type obj_t = obj_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cntx_s {
    pub blkszs: [blksz_t; 11usize],
    pub bmults: [bszid_t; 11usize],
    pub trsm_blkszs: [blksz_t; 11usize],
    pub l3_vir_ukrs: [func_t; 6usize],
    pub l3_nat_ukrs: [func_t; 6usize],
    pub l3_nat_ukrs_prefs: [mbool_t; 6usize],
    pub l3_thresh_funcs: [*mut c_void; 12usize],
    pub l3_sup_thresh: [blksz_t; 3usize],
    pub l3_sup_handlers: [*mut c_void; 12usize],
    pub l3_sup_blkszs: [blksz_t; 11usize],
    pub l3_sup_tri_blkszs: [blksz_t; 11usize],
    pub l3_sup_kers: [func_t; 9usize],
    pub l3_sup_tri_kers: [func_t; 9usize],
    pub l3_sup_kers_prefs: [mbool_t; 9usize],
    pub l3_sup_tri_kers_prefs: [mbool_t; 9usize],
    pub l1f_kers: [func_t; 5usize],
    pub l1v_kers: [func_t; 15usize],
    pub packm_kers: [func_t; 33usize],
    pub unpackm_kers: [func_t; 32usize],
    pub method: ind_t,
}
pub type cntx_t = cntx_s;
#[repr(C)]
#[repr(align(64))]
#[derive(Debug, Copy, Clone)]
pub struct rntm_s {
    pub auto_factor: bool,
    pub num_threads: dim_t,
    pub thrloop: [dim_t; 6usize],
    pub pack_a: bool,
    pub pack_b: bool,
    pub l3_sup: bool,
    pub blis_mt: bool,
    pub sba_pool: *mut pool_t,
    pub pba: *mut pba_t,
    pub stop_on_error: bool,
    pub print_on_error: bool,
    pub info_value: gint_t,
}
pub type rntm_t = rntm_s;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum errlev_t {
    BLIS_NO_ERROR_CHECKING = 0,
    BLIS_FULL_ERROR_CHECKING = 1,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum err_t {
    BLIS_SUCCESS = -1,
    BLIS_FAILURE = -2,
    BLIS_ERROR_CODE_MIN = -9,
    BLIS_INVALID_ERROR_CHECKING_LEVEL = -10,
    BLIS_UNDEFINED_ERROR_CODE = -11,
    BLIS_NULL_POINTER = -12,
    BLIS_NOT_YET_IMPLEMENTED = -13,
    BLIS_INVALID_SIDE = -20,
    BLIS_INVALID_UPLO = -21,
    BLIS_INVALID_TRANS = -22,
    BLIS_INVALID_CONJ = -23,
    BLIS_INVALID_DIAG = -24,
    BLIS_INVALID_MACHVAL = -25,
    BLIS_EXPECTED_NONUNIT_DIAG = -26,
    BLIS_INVALID_DATATYPE = -30,
    BLIS_EXPECTED_FLOATING_POINT_DATATYPE = -31,
    BLIS_EXPECTED_NONINTEGER_DATATYPE = -32,
    BLIS_EXPECTED_NONCONSTANT_DATATYPE = -33,
    BLIS_EXPECTED_REAL_DATATYPE = -34,
    BLIS_EXPECTED_INTEGER_DATATYPE = -35,
    BLIS_INCONSISTENT_DATATYPES = -36,
    BLIS_EXPECTED_REAL_PROJ_OF = -37,
    BLIS_EXPECTED_REAL_VALUED_OBJECT = -38,
    BLIS_INCONSISTENT_PRECISIONS = -39,
    BLIS_NONCONFORMAL_DIMENSIONS = -40,
    BLIS_EXPECTED_SCALAR_OBJECT = -41,
    BLIS_EXPECTED_VECTOR_OBJECT = -42,
    BLIS_UNEQUAL_VECTOR_LENGTHS = -43,
    BLIS_EXPECTED_SQUARE_OBJECT = -44,
    BLIS_UNEXPECTED_OBJECT_LENGTH = -45,
    BLIS_UNEXPECTED_OBJECT_WIDTH = -46,
    BLIS_UNEXPECTED_VECTOR_DIM = -47,
    BLIS_UNEXPECTED_DIAG_OFFSET = -48,
    BLIS_NEGATIVE_DIMENSION = -49,
    BLIS_INVALID_ROW_STRIDE = -50,
    BLIS_INVALID_COL_STRIDE = -51,
    BLIS_INVALID_DIM_STRIDE_COMBINATION = -52,
    BLIS_EXPECTED_GENERAL_OBJECT = -60,
    BLIS_EXPECTED_HERMITIAN_OBJECT = -61,
    BLIS_EXPECTED_SYMMETRIC_OBJECT = -62,
    BLIS_EXPECTED_TRIANGULAR_OBJECT = -63,
    BLIS_EXPECTED_UPPER_OR_LOWER_OBJECT = -70,
    BLIS_INVALID_3x1_SUBPART = -80,
    BLIS_INVALID_1x3_SUBPART = -81,
    BLIS_INVALID_3x3_SUBPART = -82,
    BLIS_UNEXPECTED_NULL_CONTROL_TREE = -90,
    BLIS_PACK_SCHEMA_NOT_SUPPORTED_FOR_UNPACK = -100,
    BLIS_EXPECTED_NONNULL_OBJECT_BUFFER = -110,
    BLIS_MALLOC_RETURNED_NULL = -120,
    BLIS_INVALID_PACKBUF = -130,
    BLIS_EXHAUSTED_CONTIG_MEMORY_POOL = -131,
    BLIS_INSUFFICIENT_STACK_BUF_SIZE = -132,
    BLIS_ALIGNMENT_NOT_POWER_OF_TWO = -133,
    BLIS_ALIGNMENT_NOT_MULT_OF_PTR_SIZE = -134,
    BLIS_EXPECTED_OBJECT_ALIAS = -140,
    BLIS_INVALID_ARCH_ID = -150,
    BLIS_UNINITIALIZED_GKS_CNTX = -151,
    BLIS_INVALID_MODEL_ID = -152,
    BLIS_MC_DEF_NONMULTIPLE_OF_MR = -160,
    BLIS_MC_MAX_NONMULTIPLE_OF_MR = -161,
    BLIS_NC_DEF_NONMULTIPLE_OF_NR = -162,
    BLIS_NC_MAX_NONMULTIPLE_OF_NR = -163,
    BLIS_KC_DEF_NONMULTIPLE_OF_KR = -164,
    BLIS_KC_MAX_NONMULTIPLE_OF_KR = -165,
    BLIS_ERROR_CODE_MAX = -170,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct thrcomm_s {
    pub sent_object: *mut c_void,
    pub n_threads: dim_t,
    pub barrier_sense: gint_t,
    pub barrier_threads_arrived: dim_t,
}
pub type thrcomm_t = thrcomm_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct thrinfo_s {
    pub ocomm: *mut thrcomm_t,
    pub ocomm_id: dim_t,
    pub n_way: dim_t,
    pub work_id: dim_t,
    pub free_comm: bool,
    pub bszid: bszid_t,
    pub sub_prenode: *mut thrinfo_s,
    pub sub_node: *mut thrinfo_s,
}
pub type thrinfo_t = thrinfo_s;
pub type l3int_t = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
        cntl: *mut cntl_t,
        thread: *mut thrinfo_t,
    ),
>;
pub type l3supint_t = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
        thread: *mut thrinfo_t,
    ) -> err_t,
>;
pub type pack_full_t = Option<
    extern "C" fn(
        identifier: *const c_char,
        alpha_obj: *mut obj_t,
        src_obj: *mut obj_t,
        dest_obj: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
        thread: *mut thrinfo_t,
    ),
>;
pub type l3computeint_t = Option<
    extern "C" fn(
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
        thread: *mut thrinfo_t,
    ),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bli_prime_factors_t {
    pub n: dim_t,
    pub sqrt_n: dim_t,
    pub f: dim_t,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum mulfactor {
    BLIS_MUL_MINUS_ONE = -1,
    BLIS_MUL_ZERO = 0,
    BLIS_MUL_ONE = 1,
    BLIS_MUL_DEFAULT = 2,
}
pub type bla_integer = f77_int;
pub type bla_character = f77_char;
pub type bla_real = f32;
pub type bla_double = f64;
pub type bla_scomplex = scomplex;
pub type bla_dcomplex = dcomplex;
pub type bla_logical = f77_int;
pub type ftnlen = bla_integer;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct getopt_s {
    pub optarg: *mut c_char,
    pub optind: c_int,
    pub opterr: c_int,
    pub optopt: c_int,
}
pub type getopt_t = getopt_s;
pub const VENDOR_INTEL: _bindgen_ty_13 = _bindgen_ty_13::VENDOR_INTEL;
pub const VENDOR_AMD: _bindgen_ty_13 = _bindgen_ty_13::VENDOR_AMD;
pub const VENDOR_UNKNOWN: _bindgen_ty_13 = _bindgen_ty_13::VENDOR_UNKNOWN;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum _bindgen_ty_13 {
    VENDOR_INTEL = 0,
    VENDOR_AMD = 1,
    VENDOR_UNKNOWN = 2,
}
pub const FEATURE_SSE3: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_SSE3;
pub const FEATURE_SSSE3: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_SSSE3;
pub const FEATURE_SSE41: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_SSE41;
pub const FEATURE_SSE42: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_SSE42;
pub const FEATURE_AVX: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX;
pub const FEATURE_AVX2: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX2;
pub const FEATURE_FMA3: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_FMA3;
pub const FEATURE_FMA4: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_FMA4;
pub const FEATURE_AVX512F: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512F;
pub const FEATURE_AVX512DQ: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512DQ;
pub const FEATURE_AVX512PF: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512PF;
pub const FEATURE_AVX512ER: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512ER;
pub const FEATURE_AVX512CD: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512CD;
pub const FEATURE_AVX512BW: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512BW;
pub const FEATURE_AVX512VL: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512VL;
pub const FEATURE_AVX512VNNI: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512VNNI;
pub const FEATURE_AVX512BF16: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512BF16;
pub const FEATURE_AVXVNNI: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVXVNNI;
pub const FEATURE_AVX512VP2INTERSECT: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_AVX512VP2INTERSECT;
pub const FEATURE_MOVDIRI: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_MOVDIRI;
pub const FEATURE_MOVDIR64B: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_MOVDIR64B;
pub const FEATURE_DATAPATH_FP128: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_DATAPATH_FP128;
pub const FEATURE_DATAPATH_FP256: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_DATAPATH_FP256;
pub const FEATURE_DATAPATH_FP512: _bindgen_ty_14 = _bindgen_ty_14::FEATURE_DATAPATH_FP512;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum _bindgen_ty_14 {
    FEATURE_SSE3 = 1,
    FEATURE_SSSE3 = 2,
    FEATURE_SSE41 = 4,
    FEATURE_SSE42 = 8,
    FEATURE_AVX = 16,
    FEATURE_AVX2 = 32,
    FEATURE_FMA3 = 64,
    FEATURE_FMA4 = 128,
    FEATURE_AVX512F = 256,
    FEATURE_AVX512DQ = 512,
    FEATURE_AVX512PF = 1024,
    FEATURE_AVX512ER = 2048,
    FEATURE_AVX512CD = 4096,
    FEATURE_AVX512BW = 8192,
    FEATURE_AVX512VL = 16384,
    FEATURE_AVX512VNNI = 32768,
    FEATURE_AVX512BF16 = 65536,
    FEATURE_AVXVNNI = 131072,
    FEATURE_AVX512VP2INTERSECT = 262144,
    FEATURE_MOVDIRI = 524288,
    FEATURE_MOVDIR64B = 1048576,
    FEATURE_DATAPATH_FP128 = 2097152,
    FEATURE_DATAPATH_FP256 = 4194304,
    FEATURE_DATAPATH_FP512 = 8388608,
}
pub const DATAPATH_UNSET: _bindgen_ty_15 = _bindgen_ty_15::DATAPATH_UNSET;
pub const DATAPATH_FP128: _bindgen_ty_15 = _bindgen_ty_15::DATAPATH_FP128;
pub const DATAPATH_MOVU: _bindgen_ty_15 = _bindgen_ty_15::DATAPATH_MOVU;
pub const DATAPATH_FP256: _bindgen_ty_15 = _bindgen_ty_15::DATAPATH_FP256;
pub const DATAPATH_FP512: _bindgen_ty_15 = _bindgen_ty_15::DATAPATH_FP512;
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum _bindgen_ty_15 {
    DATAPATH_UNSET = -1,
    DATAPATH_FP128 = 0,
    DATAPATH_MOVU = 1,
    DATAPATH_FP256 = 2,
    DATAPATH_FP512 = 3,
}
pub type saddsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f32, psi: *mut f32)>;
pub type daddsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f64, psi: *mut f64)>;
pub type caddsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut scomplex, psi: *mut scomplex)>;
pub type zaddsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut dcomplex, psi: *mut dcomplex)>;
pub type saddsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type daddsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type caddsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type zaddsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type addsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type sdivsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f32, psi: *mut f32)>;
pub type ddivsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f64, psi: *mut f64)>;
pub type cdivsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut scomplex, psi: *mut scomplex)>;
pub type zdivsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut dcomplex, psi: *mut dcomplex)>;
pub type sdivsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type ddivsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type cdivsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type zdivsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type divsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type ssubsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f32, psi: *mut f32)>;
pub type dsubsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f64, psi: *mut f64)>;
pub type csubsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut scomplex, psi: *mut scomplex)>;
pub type zsubsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut dcomplex, psi: *mut dcomplex)>;
pub type ssubsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type dsubsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type csubsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type zsubsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type subsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type sinvertsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f32)>;
pub type dinvertsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f64)>;
pub type cinvertsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut scomplex)>;
pub type zinvertsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut dcomplex)>;
pub type sinvertsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void)>;
pub type dinvertsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void)>;
pub type cinvertsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void)>;
pub type zinvertsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void)>;
pub type invertsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void)>;
pub type smulsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f32, psi: *mut f32)>;
pub type dmulsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut f64, psi: *mut f64)>;
pub type cmulsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut scomplex, psi: *mut scomplex)>;
pub type zmulsc_ft = Option<extern "C" fn(conjchi: conj_t, chi: *mut dcomplex, psi: *mut dcomplex)>;
pub type smulsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type dmulsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type cmulsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type zmulsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type mulsc_vft = Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void)>;
pub type sabsqsc_ft = Option<extern "C" fn(chi: *mut f32, absq: *mut f32)>;
pub type dabsqsc_ft = Option<extern "C" fn(chi: *mut f64, absq: *mut f64)>;
pub type cabsqsc_ft = Option<extern "C" fn(chi: *mut scomplex, absq: *mut f32)>;
pub type zabsqsc_ft = Option<extern "C" fn(chi: *mut dcomplex, absq: *mut f64)>;
pub type sabsqsc_vft = Option<extern "C" fn(chi: *mut c_void, absq: *mut c_void)>;
pub type dabsqsc_vft = Option<extern "C" fn(chi: *mut c_void, absq: *mut c_void)>;
pub type cabsqsc_vft = Option<extern "C" fn(chi: *mut c_void, absq: *mut c_void)>;
pub type zabsqsc_vft = Option<extern "C" fn(chi: *mut c_void, absq: *mut c_void)>;
pub type absqsc_vft = Option<extern "C" fn(chi: *mut c_void, absq: *mut c_void)>;
pub type snormfsc_ft = Option<extern "C" fn(chi: *mut f32, norm: *mut f32)>;
pub type dnormfsc_ft = Option<extern "C" fn(chi: *mut f64, norm: *mut f64)>;
pub type cnormfsc_ft = Option<extern "C" fn(chi: *mut scomplex, norm: *mut f32)>;
pub type znormfsc_ft = Option<extern "C" fn(chi: *mut dcomplex, norm: *mut f64)>;
pub type snormfsc_vft = Option<extern "C" fn(chi: *mut c_void, norm: *mut c_void)>;
pub type dnormfsc_vft = Option<extern "C" fn(chi: *mut c_void, norm: *mut c_void)>;
pub type cnormfsc_vft = Option<extern "C" fn(chi: *mut c_void, norm: *mut c_void)>;
pub type znormfsc_vft = Option<extern "C" fn(chi: *mut c_void, norm: *mut c_void)>;
pub type normfsc_vft = Option<extern "C" fn(chi: *mut c_void, norm: *mut c_void)>;
pub type ssqrtsc_ft = Option<extern "C" fn(chi: *mut f32, psi: *mut f32)>;
pub type dsqrtsc_ft = Option<extern "C" fn(chi: *mut f64, psi: *mut f64)>;
pub type csqrtsc_ft = Option<extern "C" fn(chi: *mut scomplex, psi: *mut scomplex)>;
pub type zsqrtsc_ft = Option<extern "C" fn(chi: *mut dcomplex, psi: *mut dcomplex)>;
pub type ssqrtsc_vft = Option<extern "C" fn(chi: *mut c_void, psi: *mut c_void)>;
pub type dsqrtsc_vft = Option<extern "C" fn(chi: *mut c_void, psi: *mut c_void)>;
pub type csqrtsc_vft = Option<extern "C" fn(chi: *mut c_void, psi: *mut c_void)>;
pub type zsqrtsc_vft = Option<extern "C" fn(chi: *mut c_void, psi: *mut c_void)>;
pub type sqrtsc_vft = Option<extern "C" fn(chi: *mut c_void, psi: *mut c_void)>;
pub type sgetsc_ft = Option<extern "C" fn(chi: *mut f32, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type dgetsc_ft = Option<extern "C" fn(chi: *mut f64, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type cgetsc_ft = Option<extern "C" fn(chi: *mut scomplex, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type zgetsc_ft = Option<extern "C" fn(chi: *mut dcomplex, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type sgetsc_vft = Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type dgetsc_vft = Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type cgetsc_vft = Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type zgetsc_vft = Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type getsc_vft = Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type ssetsc_ft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut f32)>;
pub type dsetsc_ft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut f64)>;
pub type csetsc_ft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut scomplex)>;
pub type zsetsc_ft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut dcomplex)>;
pub type ssetsc_vft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut c_void)>;
pub type dsetsc_vft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut c_void)>;
pub type csetsc_vft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut c_void)>;
pub type zsetsc_vft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut c_void)>;
pub type setsc_vft = Option<extern "C" fn(zeta_r: f64, zeta_i: f64, chi: *mut c_void)>;
pub type sunzipsc_ft = Option<extern "C" fn(chi: *mut f32, zeta_r: *mut f32, zeta_i: *mut f32)>;
pub type dunzipsc_ft = Option<extern "C" fn(chi: *mut f64, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type cunzipsc_ft =
    Option<extern "C" fn(chi: *mut scomplex, zeta_r: *mut f32, zeta_i: *mut f32)>;
pub type zunzipsc_ft =
    Option<extern "C" fn(chi: *mut dcomplex, zeta_r: *mut f64, zeta_i: *mut f64)>;
pub type sunzipsc_vft =
    Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut c_void, zeta_i: *mut c_void)>;
pub type dunzipsc_vft =
    Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut c_void, zeta_i: *mut c_void)>;
pub type cunzipsc_vft =
    Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut c_void, zeta_i: *mut c_void)>;
pub type zunzipsc_vft =
    Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut c_void, zeta_i: *mut c_void)>;
pub type unzipsc_vft =
    Option<extern "C" fn(chi: *mut c_void, zeta_r: *mut c_void, zeta_i: *mut c_void)>;
pub type szipsc_ft = Option<extern "C" fn(zeta_r: *mut f32, zeta_i: *mut f32, chi: *mut f32)>;
pub type dzipsc_ft = Option<extern "C" fn(zeta_r: *mut f64, zeta_i: *mut f64, chi: *mut f64)>;
pub type czipsc_ft = Option<extern "C" fn(zeta_r: *mut f32, zeta_i: *mut f32, chi: *mut scomplex)>;
pub type zzipsc_ft = Option<extern "C" fn(zeta_r: *mut f64, zeta_i: *mut f64, chi: *mut dcomplex)>;
pub type szipsc_vft =
    Option<extern "C" fn(zeta_r: *mut c_void, zeta_i: *mut c_void, chi: *mut c_void)>;
pub type dzipsc_vft =
    Option<extern "C" fn(zeta_r: *mut c_void, zeta_i: *mut c_void, chi: *mut c_void)>;
pub type czipsc_vft =
    Option<extern "C" fn(zeta_r: *mut c_void, zeta_i: *mut c_void, chi: *mut c_void)>;
pub type zzipsc_vft =
    Option<extern "C" fn(zeta_r: *mut c_void, zeta_i: *mut c_void, chi: *mut c_void)>;
pub type zipsc_vft =
    Option<extern "C" fn(zeta_r: *mut c_void, zeta_i: *mut c_void, chi: *mut c_void)>;
pub type saddv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daddv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caddv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaddv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saddv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daddv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caddv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaddv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type addv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type scopyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dcopyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ccopyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zcopyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type scopyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dcopyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ccopyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zcopyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type copyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ssubv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dsubv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type csubv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zsubv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ssubv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dsubv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type csubv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zsubv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type subv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type samaxv_ker_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t)>;
pub type damaxv_ker_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t)>;
pub type camaxv_ker_ft = Option<
    extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type zamaxv_ker_ft = Option<
    extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type samaxv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type damaxv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type camaxv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type zamaxv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type amaxv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type saminv_ker_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t)>;
pub type daminv_ker_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t)>;
pub type caminv_ker_ft = Option<
    extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type zaminv_ker_ft = Option<
    extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type saminv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type daminv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type caminv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type zaminv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type aminv_ker_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t, cntx: *mut cntx_t),
>;
pub type saxpbyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daxpbyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caxpbyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaxpbyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saxpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daxpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caxpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaxpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type axpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saxpyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daxpyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caxpyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaxpyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saxpyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daxpyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caxpyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaxpyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type axpyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sscal2v_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dscal2v_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cscal2v_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zscal2v_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sscal2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dscal2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cscal2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zscal2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type scal2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        rho: *mut f32,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        rho: *mut f64,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        rho: *mut scomplex,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        rho: *mut dcomplex,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type dotv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotxv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        beta: *mut f32,
        rho: *mut f32,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotxv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        beta: *mut f64,
        rho: *mut f64,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotxv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        beta: *mut scomplex,
        rho: *mut scomplex,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotxv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        beta: *mut dcomplex,
        rho: *mut dcomplex,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotxv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotxv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotxv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotxv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type dotxv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
    ),
>;
pub type sinvertv_ker_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, cntx: *mut cntx_t)>;
pub type dinvertv_ker_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, cntx: *mut cntx_t)>;
pub type cinvertv_ker_ft =
    Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, cntx: *mut cntx_t)>;
pub type zinvertv_ker_ft =
    Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, cntx: *mut cntx_t)>;
pub type sinvertv_ker_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t)>;
pub type dinvertv_ker_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t)>;
pub type cinvertv_ker_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t)>;
pub type zinvertv_ker_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t)>;
pub type invertv_ker_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t)>;
pub type sscalv_ker_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dscalv_ker_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cscalv_ker_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zscalv_ker_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sscalv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dscalv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cscalv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zscalv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type scalv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ssetv_ker_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dsetv_ker_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type csetv_ker_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zsetv_ker_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ssetv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dsetv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type csetv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zsetv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type setv_ker_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sswapv_ker_ft = Option<
    extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, y: *mut f32, incy: inc_t, cntx: *mut cntx_t),
>;
pub type dswapv_ker_ft = Option<
    extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, y: *mut f64, incy: inc_t, cntx: *mut cntx_t),
>;
pub type cswapv_ker_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zswapv_ker_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sswapv_ker_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dswapv_ker_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cswapv_ker_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zswapv_ker_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type swapv_ker_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sxpbyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dxpbyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cxpbyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zxpbyv_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sxpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dxpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cxpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zxpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type xpbyv_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saddv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daddv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caddv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaddv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saddv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daddv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caddv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaddv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type addv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scopyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dcopyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ccopyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zcopyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scopyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dcopyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ccopyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zcopyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type copyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssubv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsubv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csubv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsubv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssubv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsubv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csubv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsubv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type subv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type samaxv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type damaxv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type camaxv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zamaxv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type samaxv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type damaxv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type camaxv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zamaxv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type amaxv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saminv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daminv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caminv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaminv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saminv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daminv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caminv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaminv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type aminv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        index: *mut dim_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpbyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpbyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpbyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpbyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type axpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type axpyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscal2v_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscal2v_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscal2v_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscal2v_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscal2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscal2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscal2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscal2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scal2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        rho: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        rho: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        rho: *mut scomplex,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        rho: *mut dcomplex,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dotv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotxv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        beta: *mut f32,
        rho: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotxv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        beta: *mut f64,
        rho: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotxv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        beta: *mut scomplex,
        rho: *mut scomplex,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotxv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        beta: *mut dcomplex,
        rho: *mut dcomplex,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotxv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotxv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotxv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotxv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dotxv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sinvertv_ex_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t)>;
pub type dinvertv_ex_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t)>;
pub type cinvertv_ex_ft = Option<
    extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type zinvertv_ex_ft = Option<
    extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type sinvertv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type dinvertv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type cinvertv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type zinvertv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type invertv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type sscalv_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscalv_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscalv_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscalv_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscalv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscalv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscalv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscalv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scalv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssetv_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsetv_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csetv_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsetv_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssetv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsetv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csetv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsetv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type setv_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sswapv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dswapv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cswapv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zswapv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sswapv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dswapv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cswapv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zswapv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type swapv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sxpbyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dxpbyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cxpbyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zxpbyv_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sxpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dxpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cxpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zxpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type xpbyv_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saddv_ft = Option<
    extern "C" fn(conjx: conj_t, n: dim_t, x: *mut f32, incx: inc_t, y: *mut f32, incy: inc_t),
>;
pub type daddv_ft = Option<
    extern "C" fn(conjx: conj_t, n: dim_t, x: *mut f64, incx: inc_t, y: *mut f64, incy: inc_t),
>;
pub type caddv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zaddv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type saddv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type daddv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type caddv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zaddv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type addv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type scopyv_ft = Option<
    extern "C" fn(conjx: conj_t, n: dim_t, x: *mut f32, incx: inc_t, y: *mut f32, incy: inc_t),
>;
pub type dcopyv_ft = Option<
    extern "C" fn(conjx: conj_t, n: dim_t, x: *mut f64, incx: inc_t, y: *mut f64, incy: inc_t),
>;
pub type ccopyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zcopyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type scopyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type dcopyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type ccopyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zcopyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type copyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type ssubv_ft = Option<
    extern "C" fn(conjx: conj_t, n: dim_t, x: *mut f32, incx: inc_t, y: *mut f32, incy: inc_t),
>;
pub type dsubv_ft = Option<
    extern "C" fn(conjx: conj_t, n: dim_t, x: *mut f64, incx: inc_t, y: *mut f64, incy: inc_t),
>;
pub type csubv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zsubv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type ssubv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type dsubv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type csubv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zsubv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type subv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type samaxv_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, index: *mut dim_t)>;
pub type damaxv_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, index: *mut dim_t)>;
pub type camaxv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, index: *mut dim_t)>;
pub type zamaxv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, index: *mut dim_t)>;
pub type samaxv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type damaxv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type camaxv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type zamaxv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type amaxv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type saminv_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, index: *mut dim_t)>;
pub type daminv_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, index: *mut dim_t)>;
pub type caminv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, index: *mut dim_t)>;
pub type zaminv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, index: *mut dim_t)>;
pub type saminv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type daminv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type caminv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type zaminv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type aminv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, index: *mut dim_t)>;
pub type saxpbyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type daxpbyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type caxpbyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zaxpbyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type saxpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type daxpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type caxpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zaxpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type axpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type saxpyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type daxpyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type caxpyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zaxpyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type saxpyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type daxpyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type caxpyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zaxpyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type axpyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type sscal2v_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type dscal2v_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type cscal2v_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zscal2v_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type sscal2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type dscal2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type cscal2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zscal2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type scal2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type sdotv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        rho: *mut f32,
    ),
>;
pub type ddotv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        rho: *mut f64,
    ),
>;
pub type cdotv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        rho: *mut scomplex,
    ),
>;
pub type zdotv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        rho: *mut dcomplex,
    ),
>;
pub type sdotv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
    ),
>;
pub type ddotv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
    ),
>;
pub type cdotv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
    ),
>;
pub type zdotv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
    ),
>;
pub type dotv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
    ),
>;
pub type sdotxv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        beta: *mut f32,
        rho: *mut f32,
    ),
>;
pub type ddotxv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        beta: *mut f64,
        rho: *mut f64,
    ),
>;
pub type cdotxv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        beta: *mut scomplex,
        rho: *mut scomplex,
    ),
>;
pub type zdotxv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        beta: *mut dcomplex,
        rho: *mut dcomplex,
    ),
>;
pub type sdotxv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
    ),
>;
pub type ddotxv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
    ),
>;
pub type cdotxv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
    ),
>;
pub type zdotxv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
    ),
>;
pub type dotxv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        beta: *mut c_void,
        rho: *mut c_void,
    ),
>;
pub type sinvertv_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t)>;
pub type dinvertv_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t)>;
pub type cinvertv_ft = Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t)>;
pub type zinvertv_ft = Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t)>;
pub type sinvertv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type dinvertv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type cinvertv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type zinvertv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type invertv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type sscalv_ft =
    Option<extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut f32, x: *mut f32, incx: inc_t)>;
pub type dscalv_ft =
    Option<extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut f64, x: *mut f64, incx: inc_t)>;
pub type cscalv_ft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut scomplex, x: *mut scomplex, incx: inc_t),
>;
pub type zscalv_ft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut dcomplex, x: *mut dcomplex, incx: inc_t),
>;
pub type sscalv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type dscalv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type cscalv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type zscalv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type scalv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type ssetv_ft =
    Option<extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut f32, x: *mut f32, incx: inc_t)>;
pub type dsetv_ft =
    Option<extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut f64, x: *mut f64, incx: inc_t)>;
pub type csetv_ft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut scomplex, x: *mut scomplex, incx: inc_t),
>;
pub type zsetv_ft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut dcomplex, x: *mut dcomplex, incx: inc_t),
>;
pub type ssetv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type dsetv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type csetv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type zsetv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type setv_vft = Option<
    extern "C" fn(conjalpha: conj_t, n: dim_t, alpha: *mut c_void, x: *mut c_void, incx: inc_t),
>;
pub type sswapv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, y: *mut f32, incy: inc_t)>;
pub type dswapv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, y: *mut f64, incy: inc_t)>;
pub type cswapv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, y: *mut scomplex, incy: inc_t)>;
pub type zswapv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, y: *mut dcomplex, incy: inc_t)>;
pub type sswapv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, y: *mut c_void, incy: inc_t)>;
pub type dswapv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, y: *mut c_void, incy: inc_t)>;
pub type cswapv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, y: *mut c_void, incy: inc_t)>;
pub type zswapv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, y: *mut c_void, incy: inc_t)>;
pub type swapv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, y: *mut c_void, incy: inc_t)>;
pub type sxpbyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type dxpbyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type cxpbyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zxpbyv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type sxpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type dxpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type cxpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zxpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type xpbyv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type saddd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daddd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caddd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaddd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saddd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daddd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caddd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaddd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type addd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scopyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dcopyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ccopyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zcopyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scopyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dcopyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ccopyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zcopyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type copyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssubd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsubd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csubd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsubd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssubd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsubd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csubd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsubd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type subd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type axpyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscal2d_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscal2d_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscal2d_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscal2d_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscal2d_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscal2d_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscal2d_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscal2d_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scal2d_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sinvertd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dinvertd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cinvertd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zinvertd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sinvertd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dinvertd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cinvertd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zinvertd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type invertd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscald_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscald_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscald_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscald_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscald_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscald_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscald_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscald_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scald_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssetd_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsetd_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csetd_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsetd_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssetd_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsetd_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csetd_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsetd_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type setd_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssetid_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsetid_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csetid_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsetid_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssetid_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsetid_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csetid_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsetid_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type setid_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sshiftd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dshiftd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cshiftd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zshiftd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sshiftd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dshiftd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cshiftd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zshiftd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type shiftd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sxpbyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f32,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dxpbyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f64,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cxpbyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zxpbyd_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sxpbyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dxpbyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cxpbyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zxpbyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type xpbyd_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saddd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type daddd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type caddd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zaddd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type saddd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type daddd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type caddd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zaddd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type addd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type scopyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dcopyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type ccopyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zcopyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type scopyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dcopyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type ccopyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zcopyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type copyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type ssubd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dsubd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type csubd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zsubd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type ssubd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dsubd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type csubd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zsubd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type subd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type saxpyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type daxpyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type caxpyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zaxpyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type saxpyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type daxpyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type caxpyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zaxpyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type axpyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sscal2d_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dscal2d_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cscal2d_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zscal2d_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sscal2d_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dscal2d_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cscal2d_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zscal2d_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type scal2d_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sinvertd_ft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut f32, rs_x: inc_t, cs_x: inc_t),
>;
pub type dinvertd_ft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut f64, rs_x: inc_t, cs_x: inc_t),
>;
pub type cinvertd_ft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut scomplex, rs_x: inc_t, cs_x: inc_t),
>;
pub type zinvertd_ft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut dcomplex, rs_x: inc_t, cs_x: inc_t),
>;
pub type sinvertd_vft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut c_void, rs_x: inc_t, cs_x: inc_t),
>;
pub type dinvertd_vft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut c_void, rs_x: inc_t, cs_x: inc_t),
>;
pub type cinvertd_vft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut c_void, rs_x: inc_t, cs_x: inc_t),
>;
pub type zinvertd_vft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut c_void, rs_x: inc_t, cs_x: inc_t),
>;
pub type invertd_vft = Option<
    extern "C" fn(diagoffx: doff_t, m: dim_t, n: dim_t, x: *mut c_void, rs_x: inc_t, cs_x: inc_t),
>;
pub type sscald_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dscald_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type cscald_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zscald_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type sscald_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dscald_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type cscald_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zscald_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type scald_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type ssetd_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dsetd_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type csetd_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zsetd_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type ssetd_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dsetd_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type csetd_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zsetd_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type setd_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type ssetid_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dsetid_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type csetid_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zsetid_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type ssetid_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dsetid_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type csetid_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zsetid_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type setid_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type sshiftd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dshiftd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type cshiftd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zshiftd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type sshiftd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dshiftd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type cshiftd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zshiftd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type shiftd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type sxpbyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f32,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dxpbyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f64,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cxpbyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zxpbyd_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sxpbyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dxpbyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cxpbyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zxpbyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type xpbyd_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type saxpy2v_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut f32,
        alpha2: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        z: *mut f32,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daxpy2v_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut f64,
        alpha2: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        z: *mut f64,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caxpy2v_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut scomplex,
        alpha2: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        z: *mut scomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaxpy2v_ker_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut dcomplex,
        alpha2: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        z: *mut dcomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saxpy2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daxpy2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caxpy2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaxpy2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type axpy2v_ker_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saxpyf_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daxpyf_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caxpyf_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaxpyf_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saxpyf_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type daxpyf_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type caxpyf_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zaxpyf_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type axpyf_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotaxpyv_ker_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        rho: *mut f32,
        z: *mut f32,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotaxpyv_ker_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        rho: *mut f64,
        z: *mut f64,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotaxpyv_ker_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        rho: *mut scomplex,
        z: *mut scomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotaxpyv_ker_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        rho: *mut dcomplex,
        z: *mut dcomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotaxpyv_ker_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotaxpyv_ker_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotaxpyv_ker_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotaxpyv_ker_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dotaxpyv_ker_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotxf_ker_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotxf_ker_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotxf_ker_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotxf_ker_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotxf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotxf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotxf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotxf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dotxf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotxaxpyf_ker_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        w: *mut f32,
        incw: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        z: *mut f32,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotxaxpyf_ker_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        w: *mut f64,
        incw: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        z: *mut f64,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotxaxpyf_ker_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        w: *mut scomplex,
        incw: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        z: *mut scomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotxaxpyf_ker_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        w: *mut dcomplex,
        incw: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        z: *mut dcomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sdotxaxpyf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ddotxaxpyf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cdotxaxpyf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zdotxaxpyf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dotxaxpyf_ker_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type saxpy2v_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut f32,
        alpha2: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        z: *mut f32,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpy2v_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut f64,
        alpha2: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        z: *mut f64,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpy2v_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut scomplex,
        alpha2: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        z: *mut scomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpy2v_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut dcomplex,
        alpha2: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        z: *mut dcomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpy2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpy2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpy2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpy2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type axpy2v_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpyf_ex_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpyf_ex_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpyf_ex_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpyf_ex_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpyf_ex_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpyf_ex_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpyf_ex_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpyf_ex_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type axpyf_ex_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotaxpyv_ex_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        rho: *mut f32,
        z: *mut f32,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotaxpyv_ex_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        rho: *mut f64,
        z: *mut f64,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotaxpyv_ex_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        rho: *mut scomplex,
        z: *mut scomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotaxpyv_ex_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        rho: *mut dcomplex,
        z: *mut dcomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotaxpyv_ex_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotaxpyv_ex_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotaxpyv_ex_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotaxpyv_ex_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dotaxpyv_ex_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotxf_ex_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotxf_ex_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotxf_ex_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotxf_ex_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotxf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotxf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotxf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotxf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dotxf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotxaxpyf_ex_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        w: *mut f32,
        incw: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        z: *mut f32,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotxaxpyf_ex_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        w: *mut f64,
        incw: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        z: *mut f64,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotxaxpyf_ex_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        w: *mut scomplex,
        incw: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        z: *mut scomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotxaxpyf_ex_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        w: *mut dcomplex,
        incw: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        z: *mut dcomplex,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sdotxaxpyf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ddotxaxpyf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cdotxaxpyf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zdotxaxpyf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dotxaxpyf_ex_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpy2v_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut f32,
        alpha2: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        z: *mut f32,
        incz: inc_t,
    ),
>;
pub type daxpy2v_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut f64,
        alpha2: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        z: *mut f64,
        incz: inc_t,
    ),
>;
pub type caxpy2v_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut scomplex,
        alpha2: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        z: *mut scomplex,
        incz: inc_t,
    ),
>;
pub type zaxpy2v_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut dcomplex,
        alpha2: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        z: *mut dcomplex,
        incz: inc_t,
    ),
>;
pub type saxpy2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type daxpy2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type caxpy2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type zaxpy2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type axpy2v_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        n: dim_t,
        alpha1: *mut c_void,
        alpha2: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type saxpyf_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type daxpyf_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type caxpyf_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zaxpyf_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type saxpyf_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type daxpyf_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type caxpyf_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zaxpyf_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type axpyf_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type sdotaxpyv_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        rho: *mut f32,
        z: *mut f32,
        incz: inc_t,
    ),
>;
pub type ddotaxpyv_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        rho: *mut f64,
        z: *mut f64,
        incz: inc_t,
    ),
>;
pub type cdotaxpyv_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        rho: *mut scomplex,
        z: *mut scomplex,
        incz: inc_t,
    ),
>;
pub type zdotaxpyv_ft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        rho: *mut dcomplex,
        z: *mut dcomplex,
        incz: inc_t,
    ),
>;
pub type sdotaxpyv_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type ddotaxpyv_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type cdotaxpyv_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type zdotaxpyv_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type dotaxpyv_vft = Option<
    extern "C" fn(
        conjxt: conj_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        rho: *mut c_void,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type sdotxf_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type ddotxf_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type cdotxf_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zdotxf_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type sdotxf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type ddotxf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type cdotxf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zdotxf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type dotxf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type sdotxaxpyf_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        w: *mut f32,
        incw: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        z: *mut f32,
        incz: inc_t,
    ),
>;
pub type ddotxaxpyf_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        w: *mut f64,
        incw: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        z: *mut f64,
        incz: inc_t,
    ),
>;
pub type cdotxaxpyf_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        w: *mut scomplex,
        incw: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        z: *mut scomplex,
        incz: inc_t,
    ),
>;
pub type zdotxaxpyf_ft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        w: *mut dcomplex,
        incw: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        z: *mut dcomplex,
        incz: inc_t,
    ),
>;
pub type sdotxaxpyf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type ddotxaxpyf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type cdotxaxpyf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type zdotxaxpyf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type dotxaxpyf_vft = Option<
    extern "C" fn(
        conjat: conj_t,
        conja: conj_t,
        conjw: conj_t,
        conjx: conj_t,
        m: dim_t,
        b_n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        w: *mut c_void,
        incw: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        z: *mut c_void,
        incz: inc_t,
    ),
>;
pub type spackm_ker_ft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut f32,
        c: *mut f32,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut f32,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dpackm_ker_ft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut f64,
        c: *mut f64,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut f64,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cpackm_ker_ft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut scomplex,
        c: *mut scomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut scomplex,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zpackm_ker_ft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut dcomplex,
        c: *mut dcomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut dcomplex,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type spackm_ker_vft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut c_void,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dpackm_ker_vft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut c_void,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cpackm_ker_vft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut c_void,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zpackm_ker_vft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut c_void,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type packm_ker_vft = Option<
    extern "C" fn(
        strucc: struc_t,
        diagoffc: doff_t,
        diagc: diag_t,
        uploc: uplo_t,
        conjc: conj_t,
        schema: pack_t,
        invdiag: bool,
        m_panel: dim_t,
        n_panel: dim_t,
        m_panel_max: dim_t,
        n_panel_max: dim_t,
        kappa: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        p: *mut c_void,
        rs_p: inc_t,
        cs_p: inc_t,
        is_p: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type spackm_cxk_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        p: *mut f32,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dpackm_cxk_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        p: *mut f64,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cpackm_cxk_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        p: *mut scomplex,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zpackm_cxk_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        p: *mut dcomplex,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type spackm_cxk_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dpackm_cxk_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cpackm_cxk_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zpackm_cxk_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type packm_cxk_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sunpackm_cxk_ker_ft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut f32,
        p: *mut f32,
        ldp: inc_t,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dunpackm_cxk_ker_ft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut f64,
        p: *mut f64,
        ldp: inc_t,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cunpackm_cxk_ker_ft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut scomplex,
        p: *mut scomplex,
        ldp: inc_t,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zunpackm_cxk_ker_ft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut dcomplex,
        p: *mut dcomplex,
        ldp: inc_t,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sunpackm_cxk_ker_vft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut c_void,
        p: *mut c_void,
        ldp: inc_t,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dunpackm_cxk_ker_vft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut c_void,
        p: *mut c_void,
        ldp: inc_t,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cunpackm_cxk_ker_vft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut c_void,
        p: *mut c_void,
        ldp: inc_t,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zunpackm_cxk_ker_vft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut c_void,
        p: *mut c_void,
        ldp: inc_t,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type unpackm_cxk_ker_vft = Option<
    extern "C" fn(
        conjp: conj_t,
        n: dim_t,
        kappa: *mut c_void,
        p: *mut c_void,
        ldp: inc_t,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type spackm_cxk_1er_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut f32,
        a: *mut f32,
        inca: inc_t,
        lda: inc_t,
        p: *mut f32,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dpackm_cxk_1er_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut f64,
        a: *mut f64,
        inca: inc_t,
        lda: inc_t,
        p: *mut f64,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cpackm_cxk_1er_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut scomplex,
        a: *mut scomplex,
        inca: inc_t,
        lda: inc_t,
        p: *mut scomplex,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zpackm_cxk_1er_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut dcomplex,
        a: *mut dcomplex,
        inca: inc_t,
        lda: inc_t,
        p: *mut dcomplex,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type spackm_cxk_1er_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dpackm_cxk_1er_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cpackm_cxk_1er_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zpackm_cxk_1er_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type packm_cxk_1er_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        schema: pack_t,
        cdim: dim_t,
        n: dim_t,
        n_max: dim_t,
        kappa: *mut c_void,
        a: *mut c_void,
        inca: inc_t,
        lda: inc_t,
        p: *mut c_void,
        ldp: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type packm_var_oft = Option<
    extern "C" fn(
        a: *mut obj_t,
        p: *mut obj_t,
        cntx: *mut cntx_t,
        cntl: *mut cntl_t,
        thread: *mut thrinfo_t,
    ),
>;
pub type unpackm_var_oft = Option<
    extern "C" fn(
        p: *mut obj_t,
        a: *mut obj_t,
        cntx: *mut cntx_t,
        cntl: *mut cntl_t,
        thread: *mut thrinfo_t,
    ),
>;
pub type saddm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daddm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caddm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaddm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saddm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daddm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caddm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaddm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type addm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssubm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsubm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csubm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsubm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssubm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsubm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csubm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsubm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type subm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scopym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dcopym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ccopym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zcopym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scopym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dcopym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ccopym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zcopym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type copym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saxpym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type daxpym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type caxpym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zaxpym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type axpym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscal2m_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscal2m_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscal2m_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscal2m_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscal2m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscal2m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscal2m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscal2m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scal2m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscalm_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscalm_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscalm_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscalm_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sscalm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dscalm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cscalm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zscalm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type scalm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssetm_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsetm_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csetm_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsetm_ex_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssetm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsetm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csetm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsetm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type setm_ex_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sxpbym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f32,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dxpbym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f64,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cxpbym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zxpbym_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sxpbym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dxpbym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cxpbym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zxpbym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type xpbym_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sxpbym_md_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f32,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dxpbym_md_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f64,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cxpbym_md_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zxpbym_md_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sxpbym_md_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dxpbym_md_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cxpbym_md_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zxpbym_md_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type xpbym_md_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type saddm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type daddm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type caddm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zaddm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type saddm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type daddm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type caddm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zaddm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type addm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type ssubm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dsubm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type csubm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zsubm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type ssubm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dsubm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type csubm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zsubm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type subm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type scopym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dcopym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type ccopym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zcopym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type scopym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dcopym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type ccopym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zcopym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type copym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type saxpym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type daxpym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type caxpym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zaxpym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type saxpym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type daxpym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type caxpym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zaxpym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type axpym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sscal2m_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dscal2m_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cscal2m_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zscal2m_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sscal2m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dscal2m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cscal2m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zscal2m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type scal2m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sscalm_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dscalm_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type cscalm_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zscalm_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type sscalm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dscalm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type cscalm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zscalm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type scalm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type ssetm_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dsetm_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type csetm_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zsetm_ft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type ssetm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type dsetm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type csetm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zsetm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type setm_vft = Option<
    extern "C" fn(
        conjalpha: conj_t,
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type sxpbym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f32,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dxpbym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f64,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cxpbym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zxpbym_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sxpbym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dxpbym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cxpbym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zxpbym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type xpbym_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sxpbym_md_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f32,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dxpbym_md_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut f64,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cxpbym_md_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zxpbym_md_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type sxpbym_md_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type dxpbym_md_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type cxpbym_md_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type zxpbym_md_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
pub type xpbym_md_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
    ),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct packm_params_s {
    pub size: u64,
    pub var_func: packm_var_oft,
    pub bmid_m: bszid_t,
    pub bmid_n: bszid_t,
    pub does_invert_diag: bool,
    pub rev_iter_if_upper: bool,
    pub rev_iter_if_lower: bool,
    pub pack_schema: pack_t,
    pub pack_buf_type: packbuf_t,
}
pub type packm_params_t = packm_params_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct unpackm_params_s {
    pub size: u64,
    pub var_func: unpackm_var_oft,
}
pub type unpackm_params_t = unpackm_params_s;
pub type sgemv_unb_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemv_unb_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cgemv_unb_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zgemv_unb_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sgemv_unb_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemv_unb_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cgemv_unb_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zgemv_unb_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type gemv_unb_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sger_unb_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dger_unb_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cger_unb_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zger_unb_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sger_unb_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dger_unb_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cger_unb_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zger_unb_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ger_unb_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type shemv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dhemv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type chemv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zhemv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type shemv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dhemv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type chemv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zhemv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type hemv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sher_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dher_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cher_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zher_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sher_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dher_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cher_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zher_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type her_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sher2_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dher2_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cher2_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zher2_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sher2_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dher2_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cher2_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zher2_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type her2_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        conjh: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type strmv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dtrmv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ctrmv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ztrmv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type strmv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dtrmv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ctrmv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ztrmv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type trmv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type strsv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dtrsv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ctrsv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ztrsv_unb_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type strsv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dtrsv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ctrsv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ztrsv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type trsv_unb_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemv_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sgemv_ex_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dgemv_ex_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cgemv_ex_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zgemv_ex_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sgemv_ex_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dgemv_ex_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cgemv_ex_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zgemv_ex_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type gemv_ex_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sger_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dger_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cger_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zger_ex_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sger_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dger_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cger_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zger_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ger_ex_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type shemv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dhemv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type chemv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zhemv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type shemv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dhemv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type chemv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zhemv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type hemv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssymv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsymv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csymv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsymv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssymv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsymv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csymv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsymv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type symv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sher_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dher_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cher_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut scomplex,
        incx: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zher_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut dcomplex,
        incx: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sher_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dher_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cher_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zher_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type her_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssyr_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsyr_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csyr_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsyr_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssyr_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsyr_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csyr_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsyr_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type syr_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sher2_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dher2_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cher2_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zher2_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sher2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dher2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cher2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zher2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type her2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssyr2_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsyr2_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csyr2_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsyr2_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssyr2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsyr2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csyr2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsyr2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type syr2_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type strmv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dtrmv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ctrmv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ztrmv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type strmv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dtrmv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ctrmv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ztrmv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type trmv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type strsv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dtrsv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ctrsv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ztrsv_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type strsv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dtrsv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ctrsv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ztrsv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type trsv_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sgemv_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type dgemv_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type cgemv_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zgemv_ft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type sgemv_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type dgemv_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type cgemv_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zgemv_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type gemv_vft = Option<
    extern "C" fn(
        transa: trans_t,
        conjx: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type sger_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dger_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type cger_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zger_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type sger_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dger_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type cger_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zger_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type ger_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        n: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type shemv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type dhemv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type chemv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zhemv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type shemv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type dhemv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type chemv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zhemv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type hemv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type ssymv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
        beta: *mut f32,
        y: *mut f32,
        incy: inc_t,
    ),
>;
pub type dsymv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
        beta: *mut f64,
        y: *mut f64,
        incy: inc_t,
    ),
>;
pub type csymv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
        beta: *mut scomplex,
        y: *mut scomplex,
        incy: inc_t,
    ),
>;
pub type zsymv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
        beta: *mut dcomplex,
        y: *mut dcomplex,
        incy: inc_t,
    ),
>;
pub type ssymv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type dsymv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type csymv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type zsymv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type symv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conja: conj_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
        beta: *mut c_void,
        y: *mut c_void,
        incy: inc_t,
    ),
>;
pub type sher_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dher_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type cher_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut scomplex,
        incx: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zher_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut dcomplex,
        incx: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type sher_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dher_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type cher_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zher_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type her_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type ssyr_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dsyr_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type csyr_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zsyr_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type ssyr_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dsyr_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type csyr_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zsyr_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type syr_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type sher2_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dher2_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type cher2_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zher2_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type sher2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dher2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type cher2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zher2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type her2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type ssyr2_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f32,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dsyr2_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut f64,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type csyr2_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut scomplex,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zsyr2_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut dcomplex,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type ssyr2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type dsyr2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type csyr2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type zsyr2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type syr2_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        conjx: conj_t,
        conjy: conj_t,
        m: dim_t,
        alpha: *mut c_void,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
    ),
>;
pub type strmv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
    ),
>;
pub type dtrmv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
    ),
>;
pub type ctrmv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
    ),
>;
pub type ztrmv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
    ),
>;
pub type strmv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type dtrmv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type ctrmv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type ztrmv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type trmv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type strsv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f32,
        incx: inc_t,
    ),
>;
pub type dtrsv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut f64,
        incx: inc_t,
    ),
>;
pub type ctrsv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut scomplex,
        incx: inc_t,
    ),
>;
pub type ztrsv_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut dcomplex,
        incx: inc_t,
    ),
>;
pub type strsv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type dtrsv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type ctrsv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type ztrsv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type trsv_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        transa: trans_t,
        diaga: diag_t,
        m: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        x: *mut c_void,
        incx: inc_t,
    ),
>;
pub type sgemm_ukr_ft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        b: *mut f32,
        beta: *mut f32,
        c: *mut f32,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemm_ukr_ft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        b: *mut f64,
        beta: *mut f64,
        c: *mut f64,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cgemm_ukr_ft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        b: *mut scomplex,
        beta: *mut scomplex,
        c: *mut scomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zgemm_ukr_ft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        b: *mut dcomplex,
        beta: *mut dcomplex,
        c: *mut dcomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sgemm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        b: *mut c_void,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        b: *mut c_void,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cgemm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        b: *mut c_void,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zgemm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        b: *mut c_void,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type gemm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        b: *mut c_void,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sgemmtrsm_ukr_ft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut f32,
        a1x: *mut f32,
        a11: *mut f32,
        bx1: *mut f32,
        b11: *mut f32,
        c11: *mut f32,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemmtrsm_ukr_ft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut f64,
        a1x: *mut f64,
        a11: *mut f64,
        bx1: *mut f64,
        b11: *mut f64,
        c11: *mut f64,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cgemmtrsm_ukr_ft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut scomplex,
        a1x: *mut scomplex,
        a11: *mut scomplex,
        bx1: *mut scomplex,
        b11: *mut scomplex,
        c11: *mut scomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zgemmtrsm_ukr_ft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut dcomplex,
        a1x: *mut dcomplex,
        a11: *mut dcomplex,
        bx1: *mut dcomplex,
        b11: *mut dcomplex,
        c11: *mut dcomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sgemmtrsm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a1x: *mut c_void,
        a11: *mut c_void,
        bx1: *mut c_void,
        b11: *mut c_void,
        c11: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemmtrsm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a1x: *mut c_void,
        a11: *mut c_void,
        bx1: *mut c_void,
        b11: *mut c_void,
        c11: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cgemmtrsm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a1x: *mut c_void,
        a11: *mut c_void,
        bx1: *mut c_void,
        b11: *mut c_void,
        c11: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zgemmtrsm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a1x: *mut c_void,
        a11: *mut c_void,
        bx1: *mut c_void,
        b11: *mut c_void,
        c11: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type gemmtrsm_ukr_vft = Option<
    extern "C" fn(
        k: dim_t,
        alpha: *mut c_void,
        a1x: *mut c_void,
        a11: *mut c_void,
        bx1: *mut c_void,
        b11: *mut c_void,
        c11: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type strsm_ukr_ft = Option<
    extern "C" fn(
        a: *mut f32,
        b: *mut f32,
        c: *mut f32,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dtrsm_ukr_ft = Option<
    extern "C" fn(
        a: *mut f64,
        b: *mut f64,
        c: *mut f64,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ctrsm_ukr_ft = Option<
    extern "C" fn(
        a: *mut scomplex,
        b: *mut scomplex,
        c: *mut scomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ztrsm_ukr_ft = Option<
    extern "C" fn(
        a: *mut dcomplex,
        b: *mut dcomplex,
        c: *mut dcomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type strsm_ukr_vft = Option<
    extern "C" fn(
        a: *mut c_void,
        b: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dtrsm_ukr_vft = Option<
    extern "C" fn(
        a: *mut c_void,
        b: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ctrsm_ukr_vft = Option<
    extern "C" fn(
        a: *mut c_void,
        b: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type ztrsm_ukr_vft = Option<
    extern "C" fn(
        a: *mut c_void,
        b: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type trsm_ukr_vft = Option<
    extern "C" fn(
        a: *mut c_void,
        b: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type thresh_func_ft =
    Option<extern "C" fn(a: *mut obj_t, b: *mut obj_t, c: *mut obj_t, cntx: *mut cntx_t) -> bool>;
pub type gemm_oft = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type gemmt_oft = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type her2k_oft = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type syr2k_oft = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type hemm_oft = Option<
    extern "C" fn(
        side: side_t,
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type symm_oft = Option<
    extern "C" fn(
        side: side_t,
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type trmm3_oft = Option<
    extern "C" fn(
        side: side_t,
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type herk_oft = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type syrk_oft = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type trmm_oft = Option<
    extern "C" fn(
        side: side_t,
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type trsm_oft = Option<
    extern "C" fn(
        side: side_t,
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type gemm_var_oft = Option<
    extern "C" fn(
        a: *mut obj_t,
        b: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
        cntl: *mut cntl_t,
        thread: *mut thrinfo_t,
    ),
>;
pub type trsm_var_oft = Option<
    extern "C" fn(
        a: *mut obj_t,
        b: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
        cntl: *mut cntl_t,
        thread: *mut thrinfo_t,
    ),
>;
pub type gemmsup_oft = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ) -> err_t,
>;
pub type gemmtsup_oft = Option<
    extern "C" fn(
        alpha: *mut obj_t,
        a: *mut obj_t,
        b: *mut obj_t,
        beta: *mut obj_t,
        c: *mut obj_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ) -> err_t,
>;
pub type sgemmsup_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut f32,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut f32,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut f32,
        c: *mut f32,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemmsup_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut f64,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut f64,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut f64,
        c: *mut f64,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cgemmsup_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut scomplex,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut scomplex,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut scomplex,
        c: *mut scomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zgemmsup_ker_ft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut dcomplex,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut dcomplex,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut dcomplex,
        c: *mut dcomplex,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type sgemmsup_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut c_void,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type dgemmsup_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut c_void,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type cgemmsup_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut c_void,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type zgemmsup_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut c_void,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
pub type gemmsup_ker_vft = Option<
    extern "C" fn(
        conja: conj_t,
        conjb: conj_t,
        m: dim_t,
        n: dim_t,
        k: dim_t,
        alpha: *mut c_void,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        b: *mut c_void,
        rs_b: inc_t,
        cs_b: inc_t,
        beta: *mut c_void,
        c: *mut c_void,
        rs_c: inc_t,
        cs_c: inc_t,
        data: *mut auxinfo_t,
        cntx: *mut cntx_t,
    ),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mddm_s {
    pub comp: dom_t,
    pub exec: dom_t,
}
pub type mddm_t = mddm_s;
pub type sasumv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        asum: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dasumv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        asum: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type casumv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        asum: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zasumv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        asum: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sasumv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        asum: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dasumv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        asum: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type casumv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        asum: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zasumv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        asum: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type asumv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        asum: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type smkherm_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dmkherm_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cmkherm_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zmkherm_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type smkherm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dmkherm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cmkherm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zmkherm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type mkherm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type smksymm_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dmksymm_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cmksymm_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zmksymm_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type smksymm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dmksymm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cmksymm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zmksymm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type mksymm_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type smktrim_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut f32,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dmktrim_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut f64,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cmktrim_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut scomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zmktrim_ex_ft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut dcomplex,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type smktrim_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dmktrim_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cmktrim_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zmktrim_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type mktrim_ex_vft = Option<
    extern "C" fn(
        uploa: uplo_t,
        m: dim_t,
        a: *mut c_void,
        rs_a: inc_t,
        cs_a: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snorm1v_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnorm1v_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnorm1v_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znorm1v_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snorm1v_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnorm1v_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnorm1v_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znorm1v_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type norm1v_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snormfv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnormfv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnormfv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znormfv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snormfv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnormfv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnormfv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znormfv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type normfv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snormiv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnormiv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnormiv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znormiv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snormiv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnormiv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnormiv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znormiv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type normiv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snorm1m_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnorm1m_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnorm1m_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znorm1m_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snorm1m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnorm1m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnorm1m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znorm1m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type norm1m_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snormfm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnormfm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnormfm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znormfm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snormfm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnormfm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnormfm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znormfm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type normfm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snormim_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnormim_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnormim_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znormim_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type snormim_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dnormim_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type cnormim_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type znormim_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type normim_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sfprintv_ex_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type dfprintv_ex_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type cfprintv_ex_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type zfprintv_ex_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type sfprintv_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type dfprintv_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type cfprintv_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type zfprintv_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type fprintv_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type sfprintm_ex_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type dfprintm_ex_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type cfprintm_ex_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type zfprintm_ex_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type sfprintm_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type dfprintm_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type cfprintm_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type zfprintm_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type fprintm_ex_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type srandv_ex_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t)>;
pub type drandv_ex_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t)>;
pub type crandv_ex_ft = Option<
    extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type zrandv_ex_ft = Option<
    extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type srandv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type drandv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type crandv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type zrandv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type randv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type srandnv_ex_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t)>;
pub type drandnv_ex_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t)>;
pub type crandnv_ex_ft = Option<
    extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type zrandnv_ex_ft = Option<
    extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type srandnv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type drandnv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type crandnv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type zrandnv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type randnv_ex_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, cntx: *mut cntx_t, rntm: *mut rntm_t),
>;
pub type srandm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type drandm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type crandm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zrandm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type srandm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type drandm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type crandm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zrandm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type randm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type srandnm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type drandnm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type crandnm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zrandnm_ex_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type srandnm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type drandnm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type crandnm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zrandnm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type randnm_ex_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssumsqv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        scale: *mut f32,
        sumsq: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsumsqv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        scale: *mut f64,
        sumsq: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csumsqv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        scale: *mut f32,
        sumsq: *mut f32,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsumsqv_ex_ft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        scale: *mut f64,
        sumsq: *mut f64,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type ssumsqv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        scale: *mut c_void,
        sumsq: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type dsumsqv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        scale: *mut c_void,
        sumsq: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type csumsqv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        scale: *mut c_void,
        sumsq: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type zsumsqv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        scale: *mut c_void,
        sumsq: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sumsqv_ex_vft = Option<
    extern "C" fn(
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        scale: *mut c_void,
        sumsq: *mut c_void,
        cntx: *mut cntx_t,
        rntm: *mut rntm_t,
    ),
>;
pub type sasumv_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, asum: *mut f32)>;
pub type dasumv_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, asum: *mut f64)>;
pub type casumv_ft = Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, asum: *mut f32)>;
pub type zasumv_ft = Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, asum: *mut f64)>;
pub type sasumv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, asum: *mut c_void)>;
pub type dasumv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, asum: *mut c_void)>;
pub type casumv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, asum: *mut c_void)>;
pub type zasumv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, asum: *mut c_void)>;
pub type asumv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, asum: *mut c_void)>;
pub type smkherm_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut f32, rs_a: inc_t, cs_a: inc_t)>;
pub type dmkherm_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut f64, rs_a: inc_t, cs_a: inc_t)>;
pub type cmkherm_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut scomplex, rs_a: inc_t, cs_a: inc_t)>;
pub type zmkherm_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut dcomplex, rs_a: inc_t, cs_a: inc_t)>;
pub type smkherm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type dmkherm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type cmkherm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type zmkherm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type mkherm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type smksymm_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut f32, rs_a: inc_t, cs_a: inc_t)>;
pub type dmksymm_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut f64, rs_a: inc_t, cs_a: inc_t)>;
pub type cmksymm_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut scomplex, rs_a: inc_t, cs_a: inc_t)>;
pub type zmksymm_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut dcomplex, rs_a: inc_t, cs_a: inc_t)>;
pub type smksymm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type dmksymm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type cmksymm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type zmksymm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type mksymm_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type smktrim_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut f32, rs_a: inc_t, cs_a: inc_t)>;
pub type dmktrim_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut f64, rs_a: inc_t, cs_a: inc_t)>;
pub type cmktrim_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut scomplex, rs_a: inc_t, cs_a: inc_t)>;
pub type zmktrim_ft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut dcomplex, rs_a: inc_t, cs_a: inc_t)>;
pub type smktrim_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type dmktrim_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type cmktrim_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type zmktrim_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type mktrim_vft =
    Option<extern "C" fn(uploa: uplo_t, m: dim_t, a: *mut c_void, rs_a: inc_t, cs_a: inc_t)>;
pub type snorm1v_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, norm: *mut f32)>;
pub type dnorm1v_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, norm: *mut f64)>;
pub type cnorm1v_ft =
    Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, norm: *mut f32)>;
pub type znorm1v_ft =
    Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, norm: *mut f64)>;
pub type snorm1v_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type dnorm1v_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type cnorm1v_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type znorm1v_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type norm1v_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type snormfv_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, norm: *mut f32)>;
pub type dnormfv_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, norm: *mut f64)>;
pub type cnormfv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, norm: *mut f32)>;
pub type znormfv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, norm: *mut f64)>;
pub type snormfv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type dnormfv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type cnormfv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type znormfv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type normfv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type snormiv_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, norm: *mut f32)>;
pub type dnormiv_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, norm: *mut f64)>;
pub type cnormiv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, norm: *mut f32)>;
pub type znormiv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, norm: *mut f64)>;
pub type snormiv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type dnormiv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type cnormiv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type znormiv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type normiv_vft =
    Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, norm: *mut c_void)>;
pub type snorm1m_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
    ),
>;
pub type dnorm1m_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
    ),
>;
pub type cnorm1m_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
    ),
>;
pub type znorm1m_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
    ),
>;
pub type snorm1m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type dnorm1m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type cnorm1m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type znorm1m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type norm1m_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type snormfm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
    ),
>;
pub type dnormfm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
    ),
>;
pub type cnormfm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
    ),
>;
pub type znormfm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
    ),
>;
pub type snormfm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type dnormfm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type cnormfm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type znormfm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type normfm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type snormim_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
    ),
>;
pub type dnormim_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
    ),
>;
pub type cnormim_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f32,
    ),
>;
pub type znormim_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut f64,
    ),
>;
pub type snormim_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type dnormim_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type cnormim_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type znormim_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type normim_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        norm: *mut c_void,
    ),
>;
pub type sfprintv_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type dfprintv_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type cfprintv_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type zfprintv_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type sfprintv_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type dfprintv_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type cfprintv_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type zfprintv_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type fprintv_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type sfprintm_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type dfprintm_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type cfprintm_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type zfprintm_ft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type sfprintm_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type dfprintm_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type cfprintm_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type zfprintm_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type fprintm_vft = Option<
    extern "C" fn(
        file: *mut FILE,
        s1: *mut c_char,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        format: *mut c_char,
        s2: *mut c_char,
    ),
>;
pub type srandv_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t)>;
pub type drandv_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t)>;
pub type crandv_ft = Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t)>;
pub type zrandv_ft = Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t)>;
pub type srandv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type drandv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type crandv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type zrandv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type randv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type srandnv_ft = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t)>;
pub type drandnv_ft = Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t)>;
pub type crandnv_ft = Option<extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t)>;
pub type zrandnv_ft = Option<extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t)>;
pub type srandnv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type drandnv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type crandnv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type zrandnv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type randnv_vft = Option<extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t)>;
pub type srandm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type drandm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type crandm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zrandm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type srandm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type drandm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type crandm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zrandm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type randm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type srandnm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type drandnm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type crandnm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zrandnm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type srandnm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type drandnm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type crandnm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type zrandnm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type randnm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        uplox: uplo_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
    ),
>;
pub type ssumsqv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t, scale: *mut f32, sumsq: *mut f32)>;
pub type dsumsqv_ft =
    Option<extern "C" fn(n: dim_t, x: *mut f64, incx: inc_t, scale: *mut f64, sumsq: *mut f64)>;
pub type csumsqv_ft = Option<
    extern "C" fn(n: dim_t, x: *mut scomplex, incx: inc_t, scale: *mut f32, sumsq: *mut f32),
>;
pub type zsumsqv_ft = Option<
    extern "C" fn(n: dim_t, x: *mut dcomplex, incx: inc_t, scale: *mut f64, sumsq: *mut f64),
>;
pub type ssumsqv_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, scale: *mut c_void, sumsq: *mut c_void),
>;
pub type dsumsqv_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, scale: *mut c_void, sumsq: *mut c_void),
>;
pub type csumsqv_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, scale: *mut c_void, sumsq: *mut c_void),
>;
pub type zsumsqv_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, scale: *mut c_void, sumsq: *mut c_void),
>;
pub type sumsqv_vft = Option<
    extern "C" fn(n: dim_t, x: *mut c_void, incx: inc_t, scale: *mut c_void, sumsq: *mut c_void),
>;
pub type seqsc_ft =
    Option<extern "C" fn(conjchi: conj_t, chi: *mut f32, psi: *mut f32, is_eq: *mut bool)>;
pub type deqsc_ft =
    Option<extern "C" fn(conjchi: conj_t, chi: *mut f64, psi: *mut f64, is_eq: *mut bool)>;
pub type ceqsc_ft = Option<
    extern "C" fn(conjchi: conj_t, chi: *mut scomplex, psi: *mut scomplex, is_eq: *mut bool),
>;
pub type zeqsc_ft = Option<
    extern "C" fn(conjchi: conj_t, chi: *mut dcomplex, psi: *mut dcomplex, is_eq: *mut bool),
>;
pub type seqsc_vft =
    Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void, is_eq: *mut bool)>;
pub type deqsc_vft =
    Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void, is_eq: *mut bool)>;
pub type ceqsc_vft =
    Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void, is_eq: *mut bool)>;
pub type zeqsc_vft =
    Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void, is_eq: *mut bool)>;
pub type eqsc_vft =
    Option<extern "C" fn(conjchi: conj_t, chi: *mut c_void, psi: *mut c_void, is_eq: *mut bool)>;
pub type seqv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f32,
        incx: inc_t,
        y: *mut f32,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type deqv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut f64,
        incx: inc_t,
        y: *mut f64,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type ceqv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut scomplex,
        incx: inc_t,
        y: *mut scomplex,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type zeqv_ft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut dcomplex,
        incx: inc_t,
        y: *mut dcomplex,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type seqv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type deqv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type ceqv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type zeqv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type eqv_vft = Option<
    extern "C" fn(
        conjx: conj_t,
        n: dim_t,
        x: *mut c_void,
        incx: inc_t,
        y: *mut c_void,
        incy: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type seqm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f32,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f32,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type deqm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut f64,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut f64,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type ceqm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut scomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut scomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type zeqm_ft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut dcomplex,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut dcomplex,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type seqm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type deqm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type ceqm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type zeqm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type eqm_vft = Option<
    extern "C" fn(
        diagoffx: doff_t,
        diagx: diag_t,
        uplox: uplo_t,
        transx: trans_t,
        m: dim_t,
        n: dim_t,
        x: *mut c_void,
        rs_x: inc_t,
        cs_x: inc_t,
        y: *mut c_void,
        rs_y: inc_t,
        cs_y: inc_t,
        is_eq: *mut bool,
    ),
>;
pub type AOCL_progress_callback = Option<
    extern "C" fn(
        api: *const c_char,
        lapi: dim_t,
        progress: dim_t,
        current_thread: dim_t,
        total_threads: dim_t,
    ) -> dim_t,
>;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_ELT_ALGO_TYPE {
    RELU = 0,
    PRELU = 1,
    GELU_TANH = 2,
    GELU_ERF = 3,
    CLIP = 4,
    SWISH = 5,
    TANH = 6,
    SIGMOID = 7,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_POST_OP_TYPE {
    SUM = 1,
    ELTWISE = 2,
    BIAS = 3,
    SCALE = 4,
    MATRIX_ADD = 5,
    MATRIX_MUL = 6,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_PARAMS_STORAGE_TYPES {
    AOCL_GEMM_F32 = 0,
    AOCL_GEMM_BF16 = 1,
    AOCL_GEMM_INT8 = 2,
    AOCL_GEMM_UINT8 = 3,
    AOCL_GEMM_INT4 = 4,
    AOCL_GEMM_INT32 = 5,
    NULLTYPE = 6,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_eltwise_algo {
    pub alpha: *mut c_void,
    pub beta: *mut c_void,
    pub algo_type: AOCL_ELT_ALGO_TYPE,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_post_op_sum {
    pub is_power_of_2: bool,
    pub scale_factor: *mut c_void,
    pub buff: *mut c_void,
    pub zero_point: *mut c_void,
    pub scale_factor_len: dim_t,
    pub zero_point_len: dim_t,
    pub zp_stor_type: AOCL_PARAMS_STORAGE_TYPES,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_post_op_eltwise {
    pub is_power_of_2: bool,
    pub scale_factor: *mut c_void,
    pub scale_factor_len: dim_t,
    pub algo: aocl_eltwise_algo,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_post_op_bias {
    pub bias: *mut c_void,
    pub stor_type: AOCL_PARAMS_STORAGE_TYPES,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_post_op_matrix_add {
    pub matrix: *mut c_void,
    pub scale_factor: *mut c_void,
    pub scale_factor_len: dim_t,
    pub ldm: dim_t,
    pub stor_type: AOCL_PARAMS_STORAGE_TYPES,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_post_op_matrix_mul {
    pub matrix: *mut c_void,
    pub scale_factor: *mut c_void,
    pub scale_factor_len: dim_t,
    pub ldm: dim_t,
    pub stor_type: AOCL_PARAMS_STORAGE_TYPES,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_pre_op_zp {
    pub zero_point: *mut c_void,
    pub zero_point_len: dim_t,
    pub zero_point_type: AOCL_PARAMS_STORAGE_TYPES,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_pre_op_sf {
    pub scale_factor: *mut c_void,
    pub scale_factor_len: dim_t,
    pub scale_factor_type: AOCL_PARAMS_STORAGE_TYPES,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_pre_op {
    pub b_zp: *mut aocl_pre_op_zp,
    pub b_scl: *mut aocl_pre_op_sf,
    pub seq_length: dim_t,
    pub group_size: dim_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_group_post_op {
    pub group_size: dim_t,
    pub seq_length: dim_t,
    pub a_scl: *mut aocl_pre_op_sf,
    pub b_scl: *mut aocl_pre_op_sf,
    pub a_zp: *mut aocl_pre_op_zp,
    pub b_zp: *mut aocl_pre_op_zp,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct AOCL_SYMM_STAT_QUANT {
    pub group_size: dim_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aocl_post_op {
    pub sum: *mut aocl_post_op_sum,
    pub eltwise: *mut aocl_post_op_eltwise,
    pub bias: *mut aocl_post_op_bias,
    pub matrix_add: *mut aocl_post_op_matrix_add,
    pub matrix_mul: *mut aocl_post_op_matrix_mul,
    pub seq_length: dim_t,
    pub seq_vector: *mut AOCL_POST_OP_TYPE,
    pub pre_ops: *mut aocl_pre_op,
    pub post_op_grp: *mut aocl_group_post_op,
    pub num_eltwise: dim_t,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_ARRAY_TYPE {
    LPGEMM_INT8 = 0,
    LPGEMM_INT16 = 1,
    LPGEMM_INT32 = 2,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_STORAGE_TYPE {
    S8 = 0,
    U8 = 1,
    S16 = 2,
    U16 = 3,
    BF16 = 4,
    S32 = 5,
    U32 = 6,
    F32 = 7,
    S64 = 8,
    U64 = 9,
    F64 = 10,
    NONE = 11,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_OPERATION_TYPE {
    U8S8S16OS16 = 0,
    U8S8S32OS32 = 1,
    F32F32F32OF32 = 2,
    BF16BF16F32OF32 = 3,
    S8S8S32OS32 = 4,
    S8S8S16OS16 = 5,
    U8S4S32OS32 = 6,
    BF16S4F32OF32 = 7,
    F32OBF16 = 8,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_UTIL_OPERATION_TYPE {
    F32_GELU_TANH = 0,
    F32_GELU_ERF = 1,
    F32_SOFTMAX = 2,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_ELTWISE_OPS_OPERATION_TYPE {
    BF16OF32 = 0,
    F32OF32 = 1,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_MEMORY_TAG {
    UNPACKED = 0,
    PACK = 1,
    PACK_KC = 2,
    PACK_NR = 3,
    REORDERED = 4,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_STOR_TAG {
    ROW_MAJOR = 0,
    COLUMN_MAJOR = 1,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_MATRIX_TYPE {
    A_MATRIX = 0,
    B_MATRIX = 1,
    AWQ_B_MATRIX = 2,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AOCL_TID_DISTR_TYPE {
    DEFAULT = 0,
    STRIDE2 = 1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_mem_t {
    pub aligned_buffer: *mut c_void,
    pub origin_buffer: *mut c_void,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_obj_t {
    pub length: dim_t,
    pub width: dim_t,
    pub elem_size: dim_t,
    pub rs: dim_t,
    pub cs: dim_t,
    pub mtag: AOCL_MEMORY_TAG,
    pub mat_type: AOCL_MATRIX_TYPE,
    pub storage: lpgemm_mem_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_block_size_t {
    pub MC: dim_t,
    pub NC: dim_t,
    pub KC: dim_t,
    pub NR: dim_t,
    pub MR: dim_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_pack_strides_t {
    pub packa_rs: dim_t,
    pub packa_cs: dim_t,
    pub packb_rs: dim_t,
    pub packb_cs: dim_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_sup_thres_t {
    pub MT: dim_t,
    pub NT: dim_t,
    pub KT: dim_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_cntx_t {
    pub blksz: lpgemm_block_size_t,
    pub kern_fun_ptr: void_fp,
    pub packa_fun_ptr: void_fp,
    pub packb_mxp_fun_ptr: void_fp,
    pub packb_fun_ptr: void_fp,
    pub unpackb_fun_ptr: void_fp,
    pub packsclb_fun_ptr: void_fp,
    pub pack_s: lpgemm_pack_strides_t,
    pub sup_thres: lpgemm_sup_thres_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_eltwise_ops_cntx_t {
    pub blksz: lpgemm_block_size_t,
    pub eltwise_ops_kern_fun_ptr: void_fp,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_util_cntx_t {
    pub kern_fun_ptr: void_fp,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_thrinfo_t {
    pub n_threads: dim_t,
    pub tid: dim_t,
    pub ic_ways: dim_t,
    pub jc_ways: dim_t,
    pub comm: *mut thrcomm_t,
}
pub type bfloat16 = i16;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum LPGEMM_POST_OP_CODE {
    POST_OPS_DISABLE = 0,
    POST_OPS_BIAS = 1,
    POST_OPS_RELU = 2,
    POST_OPS_RELU_SCALE = 3,
    POST_OPS_GELU_TANH = 4,
    POST_OPS_GELU_ERF = 5,
    POST_OPS_CLIP = 6,
    POST_OPS_DOWNSCALE = 7,
    POST_OPS_MATRIX_ADD = 8,
    POST_OPS_SWISH = 9,
    POST_OPS_MATRIX_MUL = 10,
    POST_OPS_TANH = 11,
    POST_OPS_SIGMOID = 12,
    POST_OPS_SUM = 13,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_post_op_t {
    pub op_code: u64,
    pub op_args1: *mut c_void,
    pub op_args2: *mut c_void,
    pub op_args3: *mut c_void,
    pub scale_factor: *mut c_void,
    pub scale_factor_len: dim_t,
    pub is_power_of_2: bool,
    pub stor_type: u64,
    pub zp_stor_type: u64,
    pub next: *mut lpgemm_post_op_t,
}
pub type lpgemm_post_op = lpgemm_post_op_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_pre_op_t {
    pub op_code: u64,
    pub group_size: u64,
    pub scale_factor: *mut c_void,
    pub scale_factor_len: u64,
    pub scale_factor_type: u64,
    pub zp: *mut c_void,
    pub zp_len: u64,
    pub next: *mut lpgemm_pre_op_t,
}
pub type lpgemm_pre_op = lpgemm_pre_op_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_grp_post_op_attr_t {
    pub a_scale_factor: *mut c_void,
    pub a_scale_factor_len: u64,
    pub a_zp: *mut c_void,
    pub a_zp_len: u64,
    pub b_scale_factor: *mut c_void,
    pub b_scale_factor_len: u64,
    pub b_zp: *mut c_void,
    pub b_zp_len: u64,
    pub group_size: u64,
    pub grp_post_op_i: u64,
    pub grp_post_op_j: u64,
    pub grp_post_op_k: u64,
    pub grp_post_op_lda: u64,
    pub grp_post_op_ldb: u64,
    pub grp_post_op_sum_ld: u64,
    pub sf_stor_type: AOCL_STORAGE_TYPE,
    pub zp_stor_type: AOCL_STORAGE_TYPE,
}
pub type lpgemm_grp_post_op_attr = lpgemm_grp_post_op_attr_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_group_post_op_t {
    pub group_size: u64,
    pub a_scale_factor: *mut c_void,
    pub a_scale_factor_len: u64,
    pub a_zp: *mut c_void,
    pub a_zp_len: u64,
    pub b_scale_factor: *mut c_void,
    pub b_scale_factor_len: u64,
    pub b_zp: *mut c_void,
    pub b_zp_len: u64,
    pub sf_stor_type: AOCL_STORAGE_TYPE,
    pub zp_stor_type: AOCL_STORAGE_TYPE,
    pub next: *mut lpgemm_group_post_op_t,
}
pub type lpgemm_group_post_op = lpgemm_group_post_op_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_post_op_attr_t {
    pub post_op_c_i: u64,
    pub post_op_c_j: u64,
    pub rs_c_downscale: u64,
    pub cs_c_downscale: u64,
    pub buf_downscale: *mut c_void,
    pub is_first_k: u64,
    pub is_last_k: u64,
    pub c_stor_type: u64,
    pub b_sum_offset: u64,
    pub b_col_sum_vec: *mut i32,
    pub b_col_sum_vec_s16: *mut i16,
}
pub type lpgemm_post_op_attr = lpgemm_post_op_attr_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_pre_op_attr_t {
    pub scale_factor: *mut c_void,
    pub scale_factor_len: u64,
    pub scale_factor_type: u64,
    pub zero_point: *mut c_void,
    pub zero_point_len: u64,
    pub pre_op_b_i: u64,
    pub pre_op_b_j: u64,
    pub group_size: u64,
    pub pre_op_ld: u64,
}
pub type lpgemm_pre_op_attr = lpgemm_pre_op_attr_t;
pub type lpgemm_m_fringe_f32_ker_ft = Option<
    extern "C" fn(
        k0: dim_t,
        a: *const f32,
        rs_a: dim_t,
        cs_a: dim_t,
        b: *const f32,
        rs_b: dim_t,
        cs_b: dim_t,
        c: *mut f32,
        rs_c: dim_t,
        alpha: f32,
        beta: f32,
        post_ops_list: *mut lpgemm_post_op,
        post_ops_attr: lpgemm_post_op_attr,
    ),
>;
pub type lpgemm_util_l1_op_f32_kernel_t = Option<extern "C" fn(n: dim_t, x: *mut f32, incx: inc_t)>;
pub type pack_f32bf16 = Option<
    extern "C" fn(
        arg1: *mut bfloat16,
        arg2: *const f32,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
        arg7: *mut dim_t,
        arg8: *mut dim_t,
    ),
>;
pub type pack_s4bf16 = Option<
    extern "C" fn(
        arg1: *mut bfloat16,
        arg2: *const i8,
        arg3: dim_t,
        arg4: dim_t,
        arg5: *mut dim_t,
        arg6: *mut dim_t,
        arg7: lpgemm_pre_op_attr,
    ),
>;
pub type pack_bf16 = Option<
    extern "C" fn(
        arg1: *mut bfloat16,
        arg2: *const bfloat16,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
        arg7: *mut dim_t,
        arg8: *mut dim_t,
    ),
>;
pub type unpack_bf16 = Option<
    extern "C" fn(
        arg1: *const bfloat16,
        arg2: *mut bfloat16,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
    ),
>;
pub type unpack_bf16f32 = Option<
    extern "C" fn(
        arg1: *const bfloat16,
        arg2: *mut f32,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
    ),
>;
pub type pack_s4 = Option<
    extern "C" fn(
        arg1: *mut i8,
        arg2: *const i8,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
        arg7: *mut dim_t,
        arg8: *mut dim_t,
        arg9: *mut lpgemm_pre_op,
        arg10: AOCL_MATRIX_TYPE,
    ),
>;
pub type packa_s32 = Option<
    extern "C" fn(
        arg1: *mut u8,
        arg2: *const u8,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
        arg7: *mut dim_t,
        arg8: *mut dim_t,
    ),
>;
pub type packb_s32 = Option<
    extern "C" fn(
        arg1: *mut i8,
        arg2: *const i8,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
        arg7: *mut dim_t,
        arg8: *mut dim_t,
    ),
>;
pub type packa_s32_s8 = Option<
    extern "C" fn(
        arg1: *mut i8,
        arg2: *const i8,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: *mut dim_t,
        arg7: *mut dim_t,
    ),
>;
pub type packb_s32_s8 = Option<
    extern "C" fn(
        arg1: *mut i8,
        arg2: *mut i32,
        arg3: *const i8,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
        arg7: dim_t,
        arg8: *mut dim_t,
        arg9: *mut dim_t,
    ),
>;
pub type lpgemm_pack_f32 = Option<
    extern "C" fn(
        arg1: *mut f32,
        arg2: *const f32,
        arg3: dim_t,
        arg4: dim_t,
        arg5: dim_t,
        arg6: dim_t,
        arg7: *mut dim_t,
        arg8: *mut dim_t,
    ),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_jit_inputs_t {
    pub m_loop: bool,
    pub alpha_scale: bool,
    pub beta_scale: c_int,
    pub MR: dim_t,
    pub NR: dim_t,
    pub generate_mask: bool,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lpgemm_jit_params_t {
    pub m: u64,
    pub n: u64,
    pub k: u64,
    pub rs_a: u64,
    pub cs_a: u64,
    pub rs_b: u64,
    pub cs_b: u64,
    pub rs_c: u64,
    pub cs_c: u64,
    pub a: *mut bfloat16,
    pub b: *mut bfloat16,
    pub c: *mut f32,
    pub ps_a2: u64,
    pub m_iter: u64,
    pub k_iter_before_prefetch: u64,
    pub k_iter_after_prefetch: u64,
    pub k_left: u64,
    pub alpha: *mut f32,
    pub beta: *mut f32,
    pub mask16: u32,
    pub mask32: u16,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum beta_val {
    BLIS_BETA_ZERO = 0,
    BLIS_BETA_ONE = 1,
    BLIS_BETA_MINUS_ONE = 2,
    BLIS_BETA_GEN = 3,
}

#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum CBLAS_STORAGE {
    CblasPacked = 151,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum CBLAS_IDENTIFIER {
    CblasAMatrix = 161,
    CblasBMatrix = 162,
}
pub type Double = f64;
pub type Float = f32;
pub type Void = c_void;
pub type uint8 = c_uchar;
pub type uint16 = c_ushort;
pub type uint32 = c_uint;
pub type uint64 = c_ulong;
pub type STRING = *mut uint8;
pub type Bool = c_uchar;
pub type int8 = c_char;
pub type int32 = c_long;
pub type int16 = c_short;
pub type AOCL_HANDLE = *mut Void;
pub type AOCL_TID = pid_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct AOCL_FLIST_Node_t {
    pub tid: AOCL_TID,
    pub fp: *mut FILE,
    pub u64SavedTimeStamp: uint64,
    pub pNext: *mut AOCL_FLIST_Node_t,
}
pub type AOCL_FLIST_Node = AOCL_FLIST_Node_t;
