//! Base of current FFI.
//!
//! Declaration of types, enums, cargo feature controls, etc.
//!
//! This file is generated automatically.

pub use crate::mkl_types::*;

/* automatically generated by rust-bindgen 0.71.1 */

pub const MKL_PEAK_MEM_DISABLE: u32 = 0;
pub const MKL_PEAK_MEM_ENABLE: u32 = 1;
pub const MKL_PEAK_MEM_RESET: i32 = -1;
pub const MKL_PEAK_MEM: u32 = 2;
pub const MKL_ENABLE_SSE4_2: u32 = 0;
pub const MKL_ENABLE_AVX: u32 = 1;
pub const MKL_ENABLE_AVX2: u32 = 2;
pub const MKL_ENABLE_AVX512_MIC: u32 = 3;
pub const MKL_ENABLE_AVX512: u32 = 4;
pub const MKL_ENABLE_AVX512_MIC_E1: u32 = 5;
pub const MKL_ENABLE_AVX512_E1: u32 = 6;
pub const MKL_ENABLE_AVX512_E2: u32 = 7;
pub const MKL_ENABLE_AVX512_E3: u32 = 8;
pub const MKL_ENABLE_AVX512_E4: u32 = 9;
pub const MKL_ENABLE_AVX2_E1: u32 = 10;
pub const MKL_ENABLE_AVX512_E5: u32 = 11;
pub const MKL_ENABLE_AVX10: u32 = 12;
pub const MKL_SINGLE_PATH_ENABLE: u32 = 1536;
pub const MKL_INTERFACE_LP64: u32 = 0;
pub const MKL_INTERFACE_ILP64: u32 = 1;
pub const MKL_INTERFACE_GNU: u32 = 2;
pub const MKL_THREADING_INTEL: u32 = 0;
pub const MKL_THREADING_SEQUENTIAL: u32 = 1;
pub const MKL_THREADING_GNU: u32 = 3;
pub const MKL_THREADING_TBB: u32 = 4;
pub const MKL_EXIT_UNSUPPORTED_CPU: u32 = 1;
pub const MKL_EXIT_CORRUPTED_INSTALL: u32 = 2;
pub const MKL_EXIT_NO_MEMORY: u32 = 3;
pub const MKL_MEM_MCDRAM: u32 = 1;

pub type XerblaEntry = Option<extern "C" fn(Name: *const c_char, Num: *const c_int, Len: c_int)>;
pub type ProgressEntry = Option<
    extern "C" fn(
        thread: *mut c_int,
        step: *mut c_int,
        stage: *mut c_char,
        stage_len: c_int,
    ) -> c_int,
>;
pub type PardisopivotEntry =
    Option<extern "C" fn(aii: *mut f64, bii: *mut f64, eps: *mut f64) -> c_int>;
pub type MKLExitHandler = Option<extern "C" fn(why: c_int)>;
pub const MKL_BLACS_CUSTOM: _bindgen_ty_1 = _bindgen_ty_1::MKL_BLACS_CUSTOM;
pub const MKL_BLACS_MSMPI: _bindgen_ty_1 = _bindgen_ty_1::MKL_BLACS_MSMPI;
pub const MKL_BLACS_INTELMPI: _bindgen_ty_1 = _bindgen_ty_1::MKL_BLACS_INTELMPI;
pub const MKL_BLACS_MPICH2: _bindgen_ty_1 = _bindgen_ty_1::MKL_BLACS_MPICH2;
pub const MKL_BLACS_LASTMPI: _bindgen_ty_1 = _bindgen_ty_1::MKL_BLACS_LASTMPI;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum _bindgen_ty_1 {
    MKL_BLACS_CUSTOM = 0,
    MKL_BLACS_MSMPI = 1,
    MKL_BLACS_INTELMPI = 2,
    MKL_BLACS_MPICH2 = 3,
    MKL_BLACS_LASTMPI = 4,
}
