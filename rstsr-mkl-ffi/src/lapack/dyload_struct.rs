//! Library struct definition for dynamic-loading.
//!
//! This file is generated automatically.

use super::*;

pub struct DyLoadLib {
    pub __libraries: Vec<libloading::Library>,
    pub __libraries_path: Vec<String>,
    pub cgesvdq_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobp: *const c_char,
            jobr: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            s: *mut f32,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            numrank: *mut MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            cwork: *mut MKL_Complex8,
            lcwork: *mut MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesvdq_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobp: *const c_char,
            jobr: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            s: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            numrank: *mut MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            work: *mut f64,
            lwork: *mut MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesvdq_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobp: *const c_char,
            jobr: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            s: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            numrank: *mut MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            work: *mut f32,
            lwork: *mut MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesvdq_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobp: *const c_char,
            jobr: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            s: *mut f64,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            numrank: *mut MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            cwork: *mut MKL_Complex16,
            lcwork: *mut MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub claunhr_col_getrfnp2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub claunhr_col_getrfnp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaorhr_col_getrfnp2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaorhr_col_getrfnp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub slaorhr_col_getrfnp2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slaorhr_col_getrfnp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaunhr_col_getrfnp2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaunhr_col_getrfnp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub cungtsqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunhr_col_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            d: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgtsqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorhr_col_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            d: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub sorgtsqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorhr_col_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            d: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub zungtsqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunhr_col_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            d: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetsqrhrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb1: *const MKL_INT,
            nb1: *const MKL_INT,
            nb2: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetsqrhrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb1: *const MKL_INT,
            nb1: *const MKL_INT,
            nb2: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetsqrhrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb1: *const MKL_INT,
            nb1: *const MKL_INT,
            nb2: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetsqrhrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb1: *const MKL_INT,
            nb1: *const MKL_INT,
            nb2: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slarfb_gett_: Option<
        unsafe extern "C" fn(
            ident: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            ldwork: *const MKL_INT,
        ),
    >,
    pub dlarfb_gett_: Option<
        unsafe extern "C" fn(
            ident: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            ldwork: *const MKL_INT,
        ),
    >,
    pub clarfb_gett_: Option<
        unsafe extern "C" fn(
            ident: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            ldwork: *const MKL_INT,
        ),
    >,
    pub zlarfb_gett_: Option<
        unsafe extern "C" fn(
            ident: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            ldwork: *const MKL_INT,
        ),
    >,
    pub sorgtsqr_row_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgtsqr_row_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cungtsqr_row_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zungtsqr_row_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            tsize: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelqt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelqt3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgemlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            t: *const MKL_Complex8,
            tsize: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgemlqt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            v: *const MKL_Complex8,
            ldv: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            tsize: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetsls_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clamswlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clamtsqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub claswlq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clatsqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctplqt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            mb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub ctplqt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctpmlqt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            mb: *const MKL_INT,
            v: *const MKL_Complex8,
            ldv: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            tsize: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelqt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelqt3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgemlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            t: *const f64,
            tsize: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgemlqt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            v: *const f64,
            ldv: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            tsize: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlamswlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlamtsqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaswlq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatsqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtplqt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            mb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtplqt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtpmlqt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            mb: *const MKL_INT,
            v: *const f64,
            ldv: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            tsize: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetsls_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelqt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelqt3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgemlqt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            v: *const f32,
            ldv: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            tsize: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetsls_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slamtsqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaswlq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stplqt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            mb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub stpmlqt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            mb: *const MKL_INT,
            v: *const f32,
            ldv: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            tsize: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgemlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            t: *const f32,
            tsize: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slamswlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slatsqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stplqt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelqt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelqt3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgemlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            t: *const MKL_Complex16,
            tsize: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgemlqt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            v: *const MKL_Complex16,
            ldv: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            tsize: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetsls_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlamswlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlamtsqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaswlq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatsqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            mb: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztplqt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            mb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ztplqt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztpmlqt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            mb: *const MKL_INT,
            v: *const MKL_Complex16,
            ldv: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub chesv_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrs_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clahef_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            j1: *const MKL_INT,
            m: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasyf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            j1: *const MKL_INT,
            m: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            h: *mut f64,
            ldh: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsysv_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrs_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slasyf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            j1: *const MKL_INT,
            m: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            h: *mut f32,
            ldh: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssysv_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrs_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhesv_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrs_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlahef_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            j1: *const MKL_INT,
            m: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub cgemqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            t: *const MKL_Complex8,
            tsize: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgemqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            t: *const f64,
            tsize: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgemqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            t: *const f32,
            tsize: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgemqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            t: *const MKL_Complex16,
            tsize: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub checon_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            e: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chesv_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetf2_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetri_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetri_3x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrs_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            e: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clahef_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex8,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clarfy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            v: *const MKL_Complex8,
            incv: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
        ),
    >,
    pub clasyf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            j1: *const MKL_INT,
            m: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub clasyf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex8,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csycon_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            e: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub csyconvf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csyconvf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csysv_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csysv_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytf2_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytri_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytri_3x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrs_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            e: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrs_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarfy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            v: *const f64,
            incv: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
        ),
    >,
    pub dlasyf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *mut f64,
            ipiv: *mut MKL_INT,
            w: *mut f64,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsycon_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            e: *const f64,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyconvf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *mut f64,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyconvf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *mut f64,
            ipiv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsysv_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *mut f64,
            ipiv: *mut MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytf2_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *mut f64,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *mut f64,
            ipiv: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytri_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *const f64,
            ipiv: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytri_3x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *const f64,
            ipiv: *const MKL_INT,
            work: *mut f64,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrs_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            e: *const f64,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slarfy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            v: *const f32,
            incv: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
        ),
    >,
    pub slasyf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *mut f32,
            ipiv: *mut MKL_INT,
            w: *mut f32,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssycon_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            e: *const f32,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyconvf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *mut f32,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyconvf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *mut f32,
            ipiv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssysv_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *mut f32,
            ipiv: *mut MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytf2_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *mut f32,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *mut f32,
            ipiv: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytri_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *const f32,
            ipiv: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytri_3x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *const f32,
            ipiv: *const MKL_INT,
            work: *mut f32,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrs_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            e: *const f32,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhecon_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            e: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhesv_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetf2_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetri_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetri_3x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrs_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            e: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlahef_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex16,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlarfy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            v: *const MKL_Complex16,
            incv: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlasyf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            j1: *const MKL_INT,
            m: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zlasyf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex16,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsycon_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            e: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zsyconvf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsyconvf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsysv_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsysv_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytf2_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrf_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrf_rk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytri_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytri_3x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrs_3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            e: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrs_aa_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chb2st_kernels_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            wantz: *const MKL_INT,
            ttype: *const MKL_INT,
            st: *const MKL_INT,
            ed: *const MKL_INT,
            sweep: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            ib: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            v: *mut MKL_Complex8,
            tau: *mut MKL_Complex8,
            ldvt: *const MKL_INT,
            work: *mut MKL_Complex8,
        ),
    >,
    pub chbev_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chbevd_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chbevx_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cheev_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            w: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cheevd_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            w: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cheevr_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cheevx_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chegv_2stage_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            w: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrd_2stage_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tau: *mut MKL_Complex8,
            hous2: *mut MKL_Complex8,
            lhous2: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrd_hb2st_: Option<
        unsafe extern "C" fn(
            stage1: *const c_char,
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            hous: *mut MKL_Complex8,
            lhous: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrd_he2hb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsb2st_kernels_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            wantz: *const MKL_INT,
            ttype: *const MKL_INT,
            st: *const MKL_INT,
            ed: *const MKL_INT,
            sweep: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            ib: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            v: *mut f64,
            tau: *mut f64,
            ldvt: *const MKL_INT,
            work: *mut f64,
        ),
    >,
    pub dsbev_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbevd_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbevx_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyev_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            w: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyevd_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            w: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyevr_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyevx_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsygv_2stage_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            w: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrd_2stage_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tau: *mut f64,
            hous2: *mut f64,
            lhous2: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrd_sb2st_: Option<
        unsafe extern "C" fn(
            stage1: *const c_char,
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            hous: *mut f64,
            lhous: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrd_sy2sb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub iparam2stage_: Option<
        unsafe extern "C" fn(
            ispec: *const MKL_INT,
            name: *const c_char,
            opts: *const c_char,
            ni: *const MKL_INT,
            nbi: *const MKL_INT,
            ibi: *const MKL_INT,
            nxi: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ssb2st_kernels_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            wantz: *const MKL_INT,
            ttype: *const MKL_INT,
            st: *const MKL_INT,
            ed: *const MKL_INT,
            sweep: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            ib: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            v: *mut f32,
            tau: *mut f32,
            ldvt: *const MKL_INT,
            work: *mut f32,
        ),
    >,
    pub ssbev_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbevd_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbevx_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyev_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            w: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyevd_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            w: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyevr_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyevx_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssygv_2stage_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            w: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrd_2stage_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tau: *mut f32,
            hous2: *mut f32,
            lhous2: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrd_sb2st_: Option<
        unsafe extern "C" fn(
            stage1: *const c_char,
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            hous: *mut f32,
            lhous: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrd_sy2sb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhb2st_kernels_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            wantz: *const MKL_INT,
            ttype: *const MKL_INT,
            st: *const MKL_INT,
            ed: *const MKL_INT,
            sweep: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            ib: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            v: *mut MKL_Complex16,
            tau: *mut MKL_Complex16,
            ldvt: *const MKL_INT,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zhbev_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbevd_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbevx_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zheev_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            w: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zheevd_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            w: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zheevr_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zheevx_2stage_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhegv_2stage_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            w: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrd_2stage_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tau: *mut MKL_Complex16,
            hous2: *mut MKL_Complex16,
            lhous2: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrd_hb2st_: Option<
        unsafe extern "C" fn(
            stage1: *const c_char,
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            hous: *mut MKL_Complex16,
            lhous: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrd_he2hb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_cgetrfnp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_dgetrfnp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_sgetrfnp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_zgetrfnp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_cgetrinp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_dgetrinp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_sgetrinp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_zgetrinp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrf_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tb: *mut f64,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chesv_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex8,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrf_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex8,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrs_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex8,
            ltb: *const MKL_INT,
            ipiv: *const MKL_INT,
            ipiv2: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csysv_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex8,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrf_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex8,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrs_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex8,
            ltb: *const MKL_INT,
            ipiv: *const MKL_INT,
            ipiv2: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhesv_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex16,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrf_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex16,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrs_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex16,
            ltb: *const MKL_INT,
            ipiv: *const MKL_INT,
            ipiv2: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsysv_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex16,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrf_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex16,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrs_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tb: *mut MKL_Complex16,
            ltb: *const MKL_INT,
            ipiv: *const MKL_INT,
            ipiv2: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrs_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tb: *mut f64,
            ltb: *const MKL_INT,
            ipiv: *const MKL_INT,
            ipiv2: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsysv_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tb: *mut f64,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssysv_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tb: *mut f32,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrs_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tb: *mut f32,
            ltb: *const MKL_INT,
            ipiv: *const MKL_INT,
            ipiv2: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrf_aa_2stage_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tb: *mut f32,
            ltb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv2: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrevc3_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *mut MKL_INT,
            n: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strevc3_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *mut MKL_INT,
            n: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrevc3_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrevc3_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrf_batch_strided_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *mut MKL_INT,
            stride_ipiv: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrf_batch_strided_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *mut MKL_INT,
            stride_ipiv: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrf_batch_strided_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *mut MKL_INT,
            stride_ipiv: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrf_batch_strided_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *mut MKL_INT,
            stride_ipiv: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrs_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *const MKL_INT,
            stride_ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrs_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *const MKL_INT,
            stride_ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrs_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *const MKL_INT,
            stride_ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrs_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *const MKL_INT,
            stride_ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrfnp_batch_strided_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrfnp_batch_strided_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrfnp_batch_strided_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrfnp_batch_strided_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrsnp_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrsnp_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrsnp_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrsnp_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrf_batch_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut *mut MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrf_batch_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut *mut MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrf_batch_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut *mut MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrf_batch_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut *mut MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetri_oop_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            ipiv: *const MKL_INT,
            stride_ipiv: *const MKL_INT,
            ainv: *mut f32,
            ldainv: *const MKL_INT,
            stride_ainv: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetri_oop_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            ipiv: *const MKL_INT,
            stride_ipiv: *const MKL_INT,
            ainv: *mut f64,
            ldainv: *const MKL_INT,
            stride_ainv: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetri_oop_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            ipiv: *const MKL_INT,
            stride_ipiv: *const MKL_INT,
            ainv: *mut MKL_Complex8,
            ldainv: *const MKL_INT,
            stride_ainv: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetri_oop_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            ipiv: *const MKL_INT,
            stride_ipiv: *const MKL_INT,
            ainv: *mut MKL_Complex16,
            ldainv: *const MKL_INT,
            stride_ainv: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetri_oop_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut *const f32,
            lda: *const MKL_INT,
            ipiv: *mut *const MKL_INT,
            ainv: *mut *mut f32,
            ldainv: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetri_oop_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut *const f64,
            lda: *const MKL_INT,
            ipiv: *mut *const MKL_INT,
            ainv: *mut *mut f64,
            ldainv: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetri_oop_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut *const MKL_INT,
            ainv: *mut *mut MKL_Complex8,
            ldainv: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetri_oop_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut *const MKL_INT,
            ainv: *mut *mut MKL_Complex16,
            ldainv: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrfnp_batch_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *mut f32,
            lda: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrfnp_batch_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *mut f64,
            lda: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrfnp_batch_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *mut MKL_Complex8,
            lda: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrfnp_batch_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *mut MKL_Complex16,
            lda: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgels_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgels_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgels_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgels_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            stride_b: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesvda_batch_strided_: Option<
        unsafe extern "C" fn(
            iparm: *const MKL_INT,
            irank: *mut MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            s: *mut f32,
            stride_s: *const MKL_INT,
            u: *mut f32,
            ldu: *const MKL_INT,
            stride_u: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            stride_vt: *const MKL_INT,
            tolerance: *const f32,
            residual: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesvda_batch_strided_: Option<
        unsafe extern "C" fn(
            iparm: *const MKL_INT,
            irank: *mut MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            s: *mut f64,
            stride_s: *const MKL_INT,
            u: *mut f64,
            ldu: *const MKL_INT,
            stride_u: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            stride_vt: *const MKL_INT,
            tolerance: *const f64,
            residual: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgesvda_batch_strided_: Option<
        unsafe extern "C" fn(
            iparm: *const MKL_INT,
            irank: *mut MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            s: *mut f32,
            stride_s: *const MKL_INT,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            stride_u: *const MKL_INT,
            vt: *mut MKL_Complex8,
            ldvt: *const MKL_INT,
            stride_vt: *const MKL_INT,
            tolerance: *const f32,
            residual: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesvda_batch_strided_: Option<
        unsafe extern "C" fn(
            iparm: *const MKL_INT,
            irank: *mut MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            s: *mut f64,
            stride_s: *const MKL_INT,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            stride_u: *const MKL_INT,
            vt: *mut MKL_Complex16,
            ldvt: *const MKL_INT,
            stride_vt: *const MKL_INT,
            tolerance: *const f64,
            residual: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetri_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv_stride: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetri_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv_stride: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetri_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv_stride: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetri_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            stride_a: *const MKL_INT,
            ipiv: *mut MKL_INT,
            ipiv_stride: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            batch_size: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgejsv_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            jobr: *const c_char,
            jobt: *const c_char,
            jobp: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            sva: *mut f32,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            cwork: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgejsv_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            jobr: *const c_char,
            jobt: *const c_char,
            jobp: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            sva: *mut f64,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            cwork: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesvdx_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobvt: *const c_char,
            range: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            ns: *mut MKL_INT,
            s: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesvdx_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobvt: *const c_char,
            range: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            ns: *mut MKL_INT,
            s: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgesvdx_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobvt: *const c_char,
            range: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            ns: *mut MKL_INT,
            s: *mut f32,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            vt: *mut MKL_Complex8,
            ldvt: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesvdx_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobvt: *const c_char,
            range: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            ns: *mut MKL_INT,
            s: *mut f64,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            vt: *mut MKL_Complex16,
            ldvt: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgesvj_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            sva: *mut f32,
            mv: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            cwork: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesvj_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            sva: *mut f64,
            mv: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            cwork: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggsvd3_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alpha: *mut f64,
            beta: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggsvd3_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alpha: *mut f32,
            beta: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggsvd3_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut f32,
            beta: *mut f32,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggsvd3_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut f64,
            beta: *mut f64,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggsvp3_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            tola: *const f64,
            tolb: *const f64,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            u: *mut f64,
            ldu: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            iwork: *mut MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggsvp3_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            tola: *const f32,
            tolb: *const f32,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            u: *mut f32,
            ldu: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            iwork: *mut MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggsvp3_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            tola: *const f32,
            tolb: *const f32,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            iwork: *mut MKL_INT,
            rwork: *mut f32,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggsvp3_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            tola: *const f64,
            tolb: *const f64,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            iwork: *mut MKL_INT,
            rwork: *mut f64,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgsvj0_: Option<
        unsafe extern "C" fn(
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut MKL_Complex8,
            sva: *mut f32,
            mv: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            eps: *const f32,
            sfmin: *const f32,
            tol: *const f32,
            nsweep: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgsvj0_: Option<
        unsafe extern "C" fn(
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut MKL_Complex16,
            sva: *mut f64,
            mv: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            eps: *const f64,
            sfmin: *const f64,
            tol: *const f64,
            nsweep: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgsvj1_: Option<
        unsafe extern "C" fn(
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut MKL_Complex8,
            sva: *mut f32,
            mv: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            eps: *const f32,
            sfmin: *const f32,
            tol: *const f32,
            nsweep: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgsvj1_: Option<
        unsafe extern "C" fn(
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut MKL_Complex16,
            sva: *mut f64,
            mv: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            eps: *const f64,
            sfmin: *const f64,
            tol: *const f64,
            nsweep: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpotrf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpotrf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spotrf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpotrf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dbdsvdx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *const f64,
            e: *const f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            ns: *mut MKL_INT,
            s: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sbdsvdx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *const f32,
            e: *const f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            ns: *mut MKL_INT,
            s: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggev3_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub zggev3_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dggev3_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggev3_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunm22_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            q: *const MKL_Complex8,
            ldq: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunm22_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            q: *const MKL_Complex16,
            ldq: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgghd3_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgghd3_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgghd3_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgghd3_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgges3_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_C_SELECT_FUNCTION_2,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            vsl: *mut MKL_Complex8,
            ldvsl: *const MKL_INT,
            vsr: *mut MKL_Complex8,
            ldvsr: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgges3_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_Z_SELECT_FUNCTION_2,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            vsl: *mut MKL_Complex16,
            ldvsl: *const MKL_INT,
            vsr: *mut MKL_Complex16,
            ldvsr: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgges3_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_D_SELECT_FUNCTION_3,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            vsl: *mut f64,
            ldvsl: *const MKL_INT,
            vsr: *mut f64,
            ldvsr: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgges3_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_S_SELECT_FUNCTION_3,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            vsl: *mut f32,
            ldvsl: *const MKL_INT,
            vsr: *mut f32,
            ldvsr: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorm22_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            q: *const f64,
            ldq: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorm22_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            q: *const f32,
            ldq: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub checon_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chesv_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetf2_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetri_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrs_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clahef_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex8,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clasyf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex8,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csycon_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub csysv_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytf2_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytri_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrs_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasyf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut f64,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsycon_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsysv_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytf2_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytri_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrs_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slasyf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut f32,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssycon_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssysv_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytf2_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytri_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrs_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhecon_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhesv_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetf2_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetri_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrs_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlahef_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex16,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlasyf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex16,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsycon_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zsysv_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytf2_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrf_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytri_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrs_rook_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunbdb1_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex8,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex8,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut MKL_Complex8,
            taup2: *mut MKL_Complex8,
            tauq1: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunbdb2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex8,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex8,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut MKL_Complex8,
            taup2: *mut MKL_Complex8,
            tauq1: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunbdb3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex8,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex8,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut MKL_Complex8,
            taup2: *mut MKL_Complex8,
            tauq1: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunbdb4_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex8,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex8,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut MKL_Complex8,
            taup2: *mut MKL_Complex8,
            tauq1: *mut MKL_Complex8,
            phantom: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunbdb5_: Option<
        unsafe extern "C" fn(
            m1: *const MKL_INT,
            m2: *const MKL_INT,
            n: *const MKL_INT,
            x1: *mut MKL_Complex8,
            incx1: *const MKL_INT,
            x2: *mut MKL_Complex8,
            incx2: *const MKL_INT,
            q1: *mut MKL_Complex8,
            ldq1: *const MKL_INT,
            q2: *mut MKL_Complex8,
            ldq2: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunbdb6_: Option<
        unsafe extern "C" fn(
            m1: *const MKL_INT,
            m2: *const MKL_INT,
            n: *const MKL_INT,
            x1: *mut MKL_Complex8,
            incx1: *const MKL_INT,
            x2: *mut MKL_Complex8,
            incx2: *const MKL_INT,
            q1: *mut MKL_Complex8,
            ldq1: *const MKL_INT,
            q2: *mut MKL_Complex8,
            ldq2: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cuncsd2by1_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex8,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex8,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            u1: *mut MKL_Complex8,
            ldu1: *const MKL_INT,
            u2: *mut MKL_Complex8,
            ldu2: *const MKL_INT,
            v1t: *mut MKL_Complex8,
            ldv1t: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorbdb1_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f64,
            ldx11: *const MKL_INT,
            x21: *mut f64,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut f64,
            taup2: *mut f64,
            tauq1: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorbdb2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f64,
            ldx11: *const MKL_INT,
            x21: *mut f64,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut f64,
            taup2: *mut f64,
            tauq1: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorbdb3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f64,
            ldx11: *const MKL_INT,
            x21: *mut f64,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut f64,
            taup2: *mut f64,
            tauq1: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorbdb4_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f64,
            ldx11: *const MKL_INT,
            x21: *mut f64,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut f64,
            taup2: *mut f64,
            tauq1: *mut f64,
            phantom: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorbdb5_: Option<
        unsafe extern "C" fn(
            m1: *const MKL_INT,
            m2: *const MKL_INT,
            n: *const MKL_INT,
            x1: *mut f64,
            incx1: *const MKL_INT,
            x2: *mut f64,
            incx2: *const MKL_INT,
            q1: *mut f64,
            ldq1: *const MKL_INT,
            q2: *mut f64,
            ldq2: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorbdb6_: Option<
        unsafe extern "C" fn(
            m1: *const MKL_INT,
            m2: *const MKL_INT,
            n: *const MKL_INT,
            x1: *mut f64,
            incx1: *const MKL_INT,
            x2: *mut f64,
            incx2: *const MKL_INT,
            q1: *mut f64,
            ldq1: *const MKL_INT,
            q2: *mut f64,
            ldq2: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorcsd2by1_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f64,
            ldx11: *const MKL_INT,
            x21: *mut f64,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            u1: *mut f64,
            ldu1: *const MKL_INT,
            u2: *mut f64,
            ldu2: *const MKL_INT,
            v1t: *mut f64,
            ldv1t: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorbdb1_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f32,
            ldx11: *const MKL_INT,
            x21: *mut f32,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut f32,
            taup2: *mut f32,
            tauq1: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorbdb2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f32,
            ldx11: *const MKL_INT,
            x21: *mut f32,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut f32,
            taup2: *mut f32,
            tauq1: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorbdb3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f32,
            ldx11: *const MKL_INT,
            x21: *mut f32,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut f32,
            taup2: *mut f32,
            tauq1: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorbdb4_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f32,
            ldx11: *const MKL_INT,
            x21: *mut f32,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut f32,
            taup2: *mut f32,
            tauq1: *mut f32,
            phantom: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorbdb5_: Option<
        unsafe extern "C" fn(
            m1: *const MKL_INT,
            m2: *const MKL_INT,
            n: *const MKL_INT,
            x1: *mut f32,
            incx1: *const MKL_INT,
            x2: *mut f32,
            incx2: *const MKL_INT,
            q1: *mut f32,
            ldq1: *const MKL_INT,
            q2: *mut f32,
            ldq2: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorbdb6_: Option<
        unsafe extern "C" fn(
            m1: *const MKL_INT,
            m2: *const MKL_INT,
            n: *const MKL_INT,
            x1: *mut f32,
            incx1: *const MKL_INT,
            x2: *mut f32,
            incx2: *const MKL_INT,
            q1: *mut f32,
            ldq1: *const MKL_INT,
            q2: *mut f32,
            ldq2: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorcsd2by1_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut f32,
            ldx11: *const MKL_INT,
            x21: *mut f32,
            ldx21: *const MKL_INT,
            theta: *mut f32,
            u1: *mut f32,
            ldu1: *const MKL_INT,
            u2: *mut f32,
            ldu2: *const MKL_INT,
            v1t: *mut f32,
            ldv1t: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunbdb1_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex16,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex16,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut MKL_Complex16,
            taup2: *mut MKL_Complex16,
            tauq1: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunbdb2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex16,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex16,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut MKL_Complex16,
            taup2: *mut MKL_Complex16,
            tauq1: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunbdb3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex16,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex16,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut MKL_Complex16,
            taup2: *mut MKL_Complex16,
            tauq1: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunbdb4_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex16,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex16,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut MKL_Complex16,
            taup2: *mut MKL_Complex16,
            tauq1: *mut MKL_Complex16,
            phantom: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunbdb5_: Option<
        unsafe extern "C" fn(
            m1: *const MKL_INT,
            m2: *const MKL_INT,
            n: *const MKL_INT,
            x1: *mut MKL_Complex16,
            incx1: *const MKL_INT,
            x2: *mut MKL_Complex16,
            incx2: *const MKL_INT,
            q1: *mut MKL_Complex16,
            ldq1: *const MKL_INT,
            q2: *mut MKL_Complex16,
            ldq2: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunbdb6_: Option<
        unsafe extern "C" fn(
            m1: *const MKL_INT,
            m2: *const MKL_INT,
            n: *const MKL_INT,
            x1: *mut MKL_Complex16,
            incx1: *const MKL_INT,
            x2: *mut MKL_Complex16,
            incx2: *const MKL_INT,
            q1: *mut MKL_Complex16,
            ldq1: *const MKL_INT,
            q2: *mut MKL_Complex16,
            ldq2: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zuncsd2by1_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            q: *const MKL_INT,
            x11: *mut MKL_Complex16,
            ldx11: *const MKL_INT,
            x21: *mut MKL_Complex16,
            ldx21: *const MKL_INT,
            theta: *mut f64,
            u1: *mut MKL_Complex16,
            ldu1: *const MKL_INT,
            u2: *mut MKL_Complex16,
            ldu2: *const MKL_INT,
            v1t: *mut MKL_Complex16,
            ldv1t: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgemqrt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            v: *const MKL_Complex8,
            ldv: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dgemqrt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            v: *const f64,
            ldv: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub sgemqrt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            v: *const f32,
            ldv: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub zgemqrt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            v: *const MKL_Complex16,
            ldv: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqrt3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqrt3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqrt3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqrt3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctpmqrt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            nb: *const MKL_INT,
            v: *const MKL_Complex8,
            ldv: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dtpmqrt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            nb: *const MKL_INT,
            v: *const f64,
            ldv: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub stpmqrt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            nb: *const MKL_INT,
            v: *const f32,
            ldv: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ztpmqrt_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            nb: *const MKL_INT,
            v: *const MKL_Complex16,
            ldv: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ctpqrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dtpqrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub stpqrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ztpqrt_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ctpqrt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtpqrt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stpqrt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztpqrt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cbbcsd_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            jobv2t: *const c_char,
            trans: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            u1: *mut MKL_Complex8,
            ldu1: *const MKL_INT,
            u2: *mut MKL_Complex8,
            ldu2: *const MKL_INT,
            v1t: *mut MKL_Complex8,
            ldv1t: *const MKL_INT,
            v2t: *mut MKL_Complex8,
            ldv2t: *const MKL_INT,
            b11d: *mut f32,
            b11e: *mut f32,
            b12d: *mut f32,
            b12e: *mut f32,
            b21d: *mut f32,
            b21e: *mut f32,
            b22d: *mut f32,
            b22e: *mut f32,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zbbcsd_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            jobv2t: *const c_char,
            trans: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            u1: *mut MKL_Complex16,
            ldu1: *const MKL_INT,
            u2: *mut MKL_Complex16,
            ldu2: *const MKL_INT,
            v1t: *mut MKL_Complex16,
            ldv1t: *const MKL_INT,
            v2t: *mut MKL_Complex16,
            ldv2t: *const MKL_INT,
            b11d: *mut f64,
            b11e: *mut f64,
            b12d: *mut f64,
            b12e: *mut f64,
            b21d: *mut f64,
            b21e: *mut f64,
            b22d: *mut f64,
            b22e: *mut f64,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sbbcsd_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            jobv2t: *const c_char,
            trans: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            u1: *mut f32,
            ldu1: *const MKL_INT,
            u2: *mut f32,
            ldu2: *const MKL_INT,
            v1t: *mut f32,
            ldv1t: *const MKL_INT,
            v2t: *mut f32,
            ldv2t: *const MKL_INT,
            b11d: *mut f32,
            b11e: *mut f32,
            b12d: *mut f32,
            b12e: *mut f32,
            b21d: *mut f32,
            b21e: *mut f32,
            b22d: *mut f32,
            b22e: *mut f32,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dbbcsd_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            jobv2t: *const c_char,
            trans: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            u1: *mut f64,
            ldu1: *const MKL_INT,
            u2: *mut f64,
            ldu2: *const MKL_INT,
            v1t: *mut f64,
            ldv1t: *const MKL_INT,
            v2t: *mut f64,
            ldv2t: *const MKL_INT,
            b11d: *mut f64,
            b11e: *mut f64,
            b12d: *mut f64,
            b12e: *mut f64,
            b21d: *mut f64,
            b21e: *mut f64,
            b22d: *mut f64,
            b22e: *mut f64,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunbdb_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            signs: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            x11: *mut MKL_Complex8,
            ldx11: *const MKL_INT,
            x12: *mut MKL_Complex8,
            ldx12: *const MKL_INT,
            x21: *mut MKL_Complex8,
            ldx21: *const MKL_INT,
            x22: *mut MKL_Complex8,
            ldx22: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut MKL_Complex8,
            taup2: *mut MKL_Complex8,
            tauq1: *mut MKL_Complex8,
            tauq2: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunbdb_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            signs: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            x11: *mut MKL_Complex16,
            ldx11: *const MKL_INT,
            x12: *mut MKL_Complex16,
            ldx12: *const MKL_INT,
            x21: *mut MKL_Complex16,
            ldx21: *const MKL_INT,
            x22: *mut MKL_Complex16,
            ldx22: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut MKL_Complex16,
            taup2: *mut MKL_Complex16,
            tauq1: *mut MKL_Complex16,
            tauq2: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorbdb_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            signs: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            x11: *mut f32,
            ldx11: *const MKL_INT,
            x12: *mut f32,
            ldx12: *const MKL_INT,
            x21: *mut f32,
            ldx21: *const MKL_INT,
            x22: *mut f32,
            ldx22: *const MKL_INT,
            theta: *mut f32,
            phi: *mut f32,
            taup1: *mut f32,
            taup2: *mut f32,
            tauq1: *mut f32,
            tauq2: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorbdb_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            signs: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            x11: *mut f64,
            ldx11: *const MKL_INT,
            x12: *mut f64,
            ldx12: *const MKL_INT,
            x21: *mut f64,
            ldx21: *const MKL_INT,
            x22: *mut f64,
            ldx22: *const MKL_INT,
            theta: *mut f64,
            phi: *mut f64,
            taup1: *mut f64,
            taup2: *mut f64,
            tauq1: *mut f64,
            tauq2: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cuncsd_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            jobv2t: *const c_char,
            trans: *const c_char,
            signs: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            x11: *mut MKL_Complex8,
            ldx11: *const MKL_INT,
            x12: *mut MKL_Complex8,
            ldx12: *const MKL_INT,
            x21: *mut MKL_Complex8,
            ldx21: *const MKL_INT,
            x22: *mut MKL_Complex8,
            ldx22: *const MKL_INT,
            theta: *mut f32,
            u1: *mut MKL_Complex8,
            ldu1: *const MKL_INT,
            u2: *mut MKL_Complex8,
            ldu2: *const MKL_INT,
            v1t: *mut MKL_Complex8,
            ldv1t: *const MKL_INT,
            v2t: *mut MKL_Complex8,
            ldv2t: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zuncsd_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            jobv2t: *const c_char,
            trans: *const c_char,
            signs: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            x11: *mut MKL_Complex16,
            ldx11: *const MKL_INT,
            x12: *mut MKL_Complex16,
            ldx12: *const MKL_INT,
            x21: *mut MKL_Complex16,
            ldx21: *const MKL_INT,
            x22: *mut MKL_Complex16,
            ldx22: *const MKL_INT,
            theta: *mut f64,
            u1: *mut MKL_Complex16,
            ldu1: *const MKL_INT,
            u2: *mut MKL_Complex16,
            ldu2: *const MKL_INT,
            v1t: *mut MKL_Complex16,
            ldv1t: *const MKL_INT,
            v2t: *mut MKL_Complex16,
            ldv2t: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorcsd_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            jobv2t: *const c_char,
            trans: *const c_char,
            signs: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            x11: *mut f32,
            ldx11: *const MKL_INT,
            x12: *mut f32,
            ldx12: *const MKL_INT,
            x21: *mut f32,
            ldx21: *const MKL_INT,
            x22: *mut f32,
            ldx22: *const MKL_INT,
            theta: *mut f32,
            u1: *mut f32,
            ldu1: *const MKL_INT,
            u2: *mut f32,
            ldu2: *const MKL_INT,
            v1t: *mut f32,
            ldv1t: *const MKL_INT,
            v2t: *mut f32,
            ldv2t: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorcsd_: Option<
        unsafe extern "C" fn(
            jobu1: *const c_char,
            jobu2: *const c_char,
            jobv1t: *const c_char,
            jobv2t: *const c_char,
            trans: *const c_char,
            signs: *const c_char,
            M: *const MKL_INT,
            P: *const MKL_INT,
            Q: *const MKL_INT,
            x11: *mut f64,
            ldx11: *const MKL_INT,
            x12: *mut f64,
            ldx12: *const MKL_INT,
            x21: *mut f64,
            ldx21: *const MKL_INT,
            x22: *mut f64,
            ldx22: *const MKL_INT,
            theta: *mut f64,
            u1: *mut f64,
            ldu1: *const MKL_INT,
            u2: *mut f64,
            ldu2: *const MKL_INT,
            v1t: *mut f64,
            ldv1t: *const MKL_INT,
            v2t: *mut f64,
            ldv2t: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clapmr_: Option<
        unsafe extern "C" fn(
            forwrd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            k: *mut MKL_INT,
        ),
    >,
    pub dlapmr_: Option<
        unsafe extern "C" fn(
            forwrd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            k: *mut MKL_INT,
        ),
    >,
    pub zlapmr_: Option<
        unsafe extern "C" fn(
            forwrd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            k: *mut MKL_INT,
        ),
    >,
    pub slapmr_: Option<
        unsafe extern "C" fn(
            forwrd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            k: *mut MKL_INT,
        ),
    >,
    pub csyconv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            e: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zsyconv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            e: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyconv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            e: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyconv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            way: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            e: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub csyswapr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            i1: *const MKL_INT,
            i2: *const MKL_INT,
        ),
    >,
    pub zsyswapr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            i1: *const MKL_INT,
            i2: *const MKL_INT,
        ),
    >,
    pub ssyswapr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            i1: *const MKL_INT,
            i2: *const MKL_INT,
        ),
    >,
    pub dsyswapr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            i1: *const MKL_INT,
            i2: *const MKL_INT,
        ),
    >,
    pub csytri2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytri2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytri2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytri2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytri2x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytri2x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytri2x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f32,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytri2x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f64,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slartgp_: Option<
        unsafe extern "C" fn(f: *const f32, g: *const f32, cs: *mut f32, sn: *mut f32, r: *mut f32),
    >,
    pub dlartgp_: Option<
        unsafe extern "C" fn(f: *const f64, g: *const f64, cs: *mut f64, sn: *mut f64, r: *mut f64),
    >,
    pub slartgs_: Option<
        unsafe extern "C" fn(
            x: *const f32,
            y: *const f32,
            sigma: *const f32,
            cs: *mut f32,
            sn: *mut f32,
        ),
    >,
    pub dlartgs_: Option<
        unsafe extern "C" fn(
            x: *const f64,
            y: *const f64,
            sigma: *const f64,
            cs: *mut f64,
            sn: *mut f64,
        ),
    >,
    pub csytrs2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrs2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrs2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrs2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrs2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrs2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub cbdsqr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ncvt: *const MKL_INT,
            nru: *const MKL_INT,
            ncc: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vt: *mut MKL_Complex8,
            ldvt: *const MKL_INT,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbbrd_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ncc: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            pt: *mut MKL_Complex8,
            ldpt: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbequb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            rowcnd: *mut f32,
            colcnd: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbequ_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            rowcnd: *mut f32,
            colcnd: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbrfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex8,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbrfsx_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex8,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *mut MKL_Complex8,
            ldafb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f32,
            c: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbsvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *mut MKL_Complex8,
            ldafb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f32,
            c: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbtf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbtrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgbtrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgebak_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            side: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            scale: *const f32,
            m: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgebal_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            scale: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgebd2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tauq: *mut MKL_Complex8,
            taup: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgebrd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tauq: *mut MKL_Complex8,
            taup: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgecon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgedmd_: Option<
        unsafe extern "C" fn(
            jobs: *const c_char,
            jobz: *const c_char,
            jobr: *const c_char,
            jobf: *const c_char,
            whtsvd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
            nrnk: *const MKL_INT,
            tol: *const f32,
            k: *mut MKL_INT,
            eigs: *mut MKL_Complex8,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            res: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            w: *mut MKL_Complex8,
            ldw: *const MKL_INT,
            s: *mut MKL_Complex8,
            lds: *const MKL_INT,
            zwork: *mut MKL_Complex8,
            lzwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgedmdq_: Option<
        unsafe extern "C" fn(
            jobs: *const c_char,
            jobz: *const c_char,
            jobr: *const c_char,
            jobq: *const c_char,
            jobt: *const c_char,
            jobf: *const c_char,
            whtsvd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            f: *mut MKL_Complex8,
            ldf: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
            nrnk: *const MKL_INT,
            tol: *const f32,
            k: *mut MKL_INT,
            eigs: *mut MKL_Complex8,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            res: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            s: *mut MKL_Complex8,
            lds: *const MKL_INT,
            zwork: *mut MKL_Complex8,
            lzwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeequb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            rowcnd: *mut f32,
            colcnd: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeequ_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            rowcnd: *mut f32,
            colcnd: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgees_: Option<
        unsafe extern "C" fn(
            jobvs: *const c_char,
            sort: *const c_char,
            select: MKL_C_SELECT_FUNCTION_1,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            sdim: *mut MKL_INT,
            w: *mut MKL_Complex8,
            vs: *mut MKL_Complex8,
            ldvs: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeesx_: Option<
        unsafe extern "C" fn(
            jobvs: *const c_char,
            sort: *const c_char,
            select: MKL_C_SELECT_FUNCTION_1,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            sdim: *mut MKL_INT,
            w: *mut MKL_Complex8,
            vs: *mut MKL_Complex8,
            ldvs: *const MKL_INT,
            rconde: *mut f32,
            rcondv: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeev_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            w: *mut MKL_Complex8,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeevx_: Option<
        unsafe extern "C" fn(
            balanc: *const c_char,
            jobvl: *const c_char,
            jobvr: *const c_char,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            w: *mut MKL_Complex8,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            scale: *mut f32,
            abnrm: *mut f32,
            rconde: *mut f32,
            rcondv: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgegs_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            vsl: *mut MKL_Complex8,
            ldvsl: *const MKL_INT,
            vsr: *mut MKL_Complex8,
            ldvsr: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgegv_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgehd2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgehrd_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelq2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelsd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            s: *mut f32,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgels_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelst_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelss_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            s: *mut f32,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelsx_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            jpvt: *mut MKL_INT,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgelsy_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            jpvt: *mut MKL_INT,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeql2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqlf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqp3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqp3rk_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            kmax: *const MKL_INT,
            abstol: *const f32,
            reltol: *const f32,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            k: *mut MKL_INT,
            maxc2nrmk: *mut f32,
            relmaxc2nrmk: *mut f32,
            jpiv: *mut MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqpf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqr2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqr2p_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqrfp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgerfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgerfsx_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            r: *const f32,
            c: *const f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgerq2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgerqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgesc2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            rhs: *mut MKL_Complex8,
            ipiv: *const MKL_INT,
            jpiv: *const MKL_INT,
            scale: *mut f32,
        ),
    >,
    pub cgesdd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            s: *mut f32,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            vt: *mut MKL_Complex8,
            ldvt: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgesvd_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobvt: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            s: *mut f32,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            vt: *mut MKL_Complex8,
            ldvt: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgesv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgesvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            af: *mut MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f32,
            c: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgesvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            af: *mut MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f32,
            c: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetc2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            jpiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_cgetrfnpi_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nfact: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetri_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgetrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggbak_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            side: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            lscale: *const f32,
            rscale: *const f32,
            m: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggbal_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            lscale: *mut f32,
            rscale: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgges_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_C_SELECT_FUNCTION_2,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            vsl: *mut MKL_Complex8,
            ldvsl: *const MKL_INT,
            vsr: *mut MKL_Complex8,
            ldvsr: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggesx_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_C_SELECT_FUNCTION_2,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            vsl: *mut MKL_Complex8,
            ldvsl: *const MKL_INT,
            vsr: *mut MKL_Complex8,
            ldvsr: *const MKL_INT,
            rconde: *mut f32,
            rcondv: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggev_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cggevx_: Option<
        unsafe extern "C" fn(
            balanc: *const c_char,
            jobvl: *const c_char,
            jobvr: *const c_char,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            lscale: *mut f32,
            rscale: *mut f32,
            abnrm: *mut f32,
            bbnrm: *mut f32,
            rconde: *mut f32,
            rcondv: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggglm_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            m: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            d: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            y: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgghrd_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgglse_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex8,
            d: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggqrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            m: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            taua: *mut MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            taub: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggrqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            taua: *mut MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            taub: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggsvd_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut f32,
            beta: *mut f32,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cggsvp_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            tola: *const f32,
            tolb: *const f32,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            iwork: *mut MKL_INT,
            rwork: *mut f32,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgtcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            dl: *const MKL_Complex8,
            d: *const MKL_Complex8,
            du: *const MKL_Complex8,
            du2: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cgtrfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex8,
            d: *const MKL_Complex8,
            du: *const MKL_Complex8,
            dlf: *const MKL_Complex8,
            df: *const MKL_Complex8,
            duf: *const MKL_Complex8,
            du2: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgtsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *mut MKL_Complex8,
            d: *mut MKL_Complex8,
            du: *mut MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgtsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex8,
            d: *const MKL_Complex8,
            du: *const MKL_Complex8,
            dlf: *mut MKL_Complex8,
            df: *mut MKL_Complex8,
            duf: *mut MKL_Complex8,
            du2: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cgttrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dl: *mut MKL_Complex8,
            d: *mut MKL_Complex8,
            du: *mut MKL_Complex8,
            du2: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgttrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex8,
            d: *const MKL_Complex8,
            du: *const MKL_Complex8,
            du2: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cgtts2_: Option<
        unsafe extern "C" fn(
            itrans: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex8,
            d: *const MKL_Complex8,
            du: *const MKL_Complex8,
            du2: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub chbevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chbev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chbevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chbgst_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            bb: *const MKL_Complex8,
            ldbb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chbgvd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            bb: *mut MKL_Complex8,
            ldbb: *const MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chbgv_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            bb: *mut MKL_Complex8,
            ldbb: *const MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chbgvx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            bb: *mut MKL_Complex8,
            ldbb: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chbtrd_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub checon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cheequb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cheevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            w: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cheev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            w: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cheevr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cheevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chegs2_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chegst_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chegvd_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            w: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chegv_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            w: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chegvx_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cherfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cherfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            s: *mut f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chesv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chesvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *mut MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chesvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            af: *mut MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chetd2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tau: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chetf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chetrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chfrk_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            beta: *const f32,
            c: *mut MKL_Complex8,
        ),
    >,
    pub chgeqz_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chla_transtype_: Option<
        unsafe extern "C" fn(ret_val: *mut c_char, ret_val_len: c_int, trans: *const MKL_INT),
    >,
    pub chpcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chpevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chpev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chpevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chpgst_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            bp: *const MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chpgvd_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            bp: *mut MKL_Complex8,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chpgv_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            bp: *mut MKL_Complex8,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chpgvx_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            bp: *mut MKL_Complex8,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            afp: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chpsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chpsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            afp: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub chptrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            d: *mut f32,
            e: *mut f32,
            tau: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub chptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chsein_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            eigsrc: *const c_char,
            initv: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            h: *const MKL_Complex8,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex8,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            ifaill: *mut MKL_INT,
            ifailr: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chseqr_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex8,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clabrd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tauq: *mut MKL_Complex8,
            taup: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
        ),
    >,
    pub clacgv_:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *mut MKL_Complex8, incx: *const MKL_INT)>,
    pub clacn2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            v: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            est: *mut f32,
            kase: *mut MKL_INT,
            isave: *mut MKL_INT,
        ),
    >,
    pub clacon_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            v: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            est: *mut f32,
            kase: *mut MKL_INT,
        ),
    >,
    pub clacp2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub clacpy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub clacrm_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            rwork: *mut f32,
        ),
    >,
    pub clacrt_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cx: *mut MKL_Complex8,
            incx: *const MKL_INT,
            cy: *mut MKL_Complex8,
            incy: *const MKL_INT,
            c: *const MKL_Complex8,
            s: *const MKL_Complex8,
        ),
    >,
    pub cladiv_: Option<
        unsafe extern "C" fn(
            ret_value: *mut MKL_Complex8,
            x: *const MKL_Complex8,
            y: *const MKL_Complex8,
        ),
    >,
    pub claed0_: Option<
        unsafe extern "C" fn(
            qsiz: *const MKL_INT,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            qstore: *mut MKL_Complex8,
            ldqs: *const MKL_INT,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub claed7_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cutpnt: *const MKL_INT,
            qsiz: *const MKL_INT,
            tlvls: *const MKL_INT,
            curlvl: *const MKL_INT,
            curpbm: *const MKL_INT,
            d: *mut f32,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            rho: *const f32,
            indxq: *mut MKL_INT,
            qstore: *mut f32,
            qptr: *mut MKL_INT,
            prmptr: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            givnum: *const f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub claed8_: Option<
        unsafe extern "C" fn(
            k: *mut MKL_INT,
            n: *const MKL_INT,
            qsiz: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            d: *mut f32,
            rho: *mut f32,
            cutpnt: *const MKL_INT,
            z: *const f32,
            dlamda: *mut f32,
            q2: *mut MKL_Complex8,
            ldq2: *const MKL_INT,
            w: *mut f32,
            indxp: *mut MKL_INT,
            indx: *mut MKL_INT,
            indxq: *const MKL_INT,
            perm: *mut MKL_INT,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            givnum: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub claein_: Option<
        unsafe extern "C" fn(
            rightv: *const MKL_INT,
            noinit: *const MKL_INT,
            n: *const MKL_INT,
            h: *const MKL_Complex8,
            ldh: *const MKL_INT,
            w: *const MKL_Complex8,
            v: *mut MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            rwork: *mut f32,
            eps3: *const f32,
            smlnum: *const f32,
            info: *mut MKL_INT,
        ),
    >,
    pub claesy_: Option<
        unsafe extern "C" fn(
            a: *const MKL_Complex8,
            b: *const MKL_Complex8,
            c: *const MKL_Complex8,
            rt1: *mut MKL_Complex8,
            rt2: *mut MKL_Complex8,
            evscal: *mut MKL_Complex8,
            cs1: *mut MKL_Complex8,
            sn1: *mut MKL_Complex8,
        ),
    >,
    pub claev2_: Option<
        unsafe extern "C" fn(
            a: *const MKL_Complex8,
            b: *const MKL_Complex8,
            c: *const MKL_Complex8,
            rt1: *mut f32,
            rt2: *mut f32,
            cs1: *mut f32,
            sn1: *mut MKL_Complex8,
        ),
    >,
    pub clag2z_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            sa: *const MKL_Complex8,
            ldsa: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clags2_: Option<
        unsafe extern "C" fn(
            upper: *const MKL_INT,
            a1: *const f32,
            a2: *const MKL_Complex8,
            a3: *const f32,
            b1: *const f32,
            b2: *const MKL_Complex8,
            b3: *const f32,
            csu: *mut f32,
            snu: *mut MKL_Complex8,
            csv: *mut f32,
            snv: *mut MKL_Complex8,
            csq: *mut f32,
            snq: *mut MKL_Complex8,
        ),
    >,
    pub clagtm_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            alpha: *const f32,
            dl: *const MKL_Complex8,
            d: *const MKL_Complex8,
            du: *const MKL_Complex8,
            x: *const MKL_Complex8,
            ldx: *const MKL_INT,
            beta: *const f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub clahef_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex8,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clahqr_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex8,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clahr2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
        ),
    >,
    pub clahrd_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
        ),
    >,
    pub claic1_: Option<
        unsafe extern "C" fn(
            job: *const MKL_INT,
            j: *const MKL_INT,
            x: *const MKL_Complex8,
            sest: *const f32,
            w: *const MKL_Complex8,
            gamma: *const MKL_Complex8,
            sestpr: *mut f32,
            s: *mut MKL_Complex8,
            c: *mut MKL_Complex8,
        ),
    >,
    pub clals0_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            nrhs: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            bx: *mut MKL_Complex8,
            ldbx: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            ldgcol: *const MKL_INT,
            givnum: *const f32,
            ldgnum: *const MKL_INT,
            poles: *const f32,
            difl: *const f32,
            difr: *const f32,
            z: *const f32,
            k: *const MKL_INT,
            c: *const f32,
            s: *const f32,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub clalsa_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            bx: *mut MKL_Complex8,
            ldbx: *const MKL_INT,
            u: *const f32,
            ldu: *const MKL_INT,
            vt: *const f32,
            k: *const MKL_INT,
            difl: *const f32,
            difr: *const f32,
            z: *const f32,
            poles: *const f32,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            ldgcol: *const MKL_INT,
            perm: *const MKL_INT,
            givnum: *const f32,
            c: *const f32,
            s: *const f32,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clalsd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clangb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clange_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clangt_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            dl: *const MKL_Complex8,
            d: *const MKL_Complex8,
            du: *const MKL_Complex8,
        ) -> f32,
    >,
    pub clanhb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clanhe_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clanhf_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            work: *mut f32,
        ) -> f32,
    >,
    pub clanhp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            work: *mut f32,
        ) -> f32,
    >,
    pub clanhs_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clanht_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            d: *const f32,
            e: *const MKL_Complex8,
        ) -> f32,
    >,
    pub clansb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clansp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            work: *mut f32,
        ) -> f32,
    >,
    pub clansy_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clantb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clantp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            work: *mut f32,
        ) -> f32,
    >,
    pub clantr_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub clapll_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            ssmin: *mut f32,
        ),
    >,
    pub clapmt_: Option<
        unsafe extern "C" fn(
            forwrd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            k: *mut MKL_INT,
        ),
    >,
    pub claqgb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            r: *const f32,
            c: *const f32,
            rowcnd: *const f32,
            colcnd: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub claqge_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            r: *const f32,
            c: *const f32,
            rowcnd: *const f32,
            colcnd: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub claqhb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            s: *mut f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub claqhe_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            s: *const f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub claqhp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            s: *const f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub claqp2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            offset: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut MKL_Complex8,
            vn1: *mut f32,
            vn2: *mut f32,
            work: *mut MKL_Complex8,
        ),
    >,
    pub claqps_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            offset: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut MKL_Complex8,
            vn1: *mut f32,
            vn2: *mut f32,
            auxv: *mut MKL_Complex8,
            f: *mut MKL_Complex8,
            ldf: *const MKL_INT,
        ),
    >,
    pub claqr0_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex8,
            iloz: *mut MKL_INT,
            ihiz: *mut MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub claqr1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            h: *const MKL_Complex8,
            ldh: *const MKL_INT,
            s1: *const MKL_Complex8,
            s2: *mut MKL_Complex8,
            v: *mut MKL_Complex8,
        ),
    >,
    pub claqr2_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nw: *const MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            sh: *mut MKL_Complex8,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            nh: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut MKL_Complex8,
            ldwv: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
        ),
    >,
    pub claqr3_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nw: *const MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            sh: *mut MKL_Complex8,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            nh: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut MKL_Complex8,
            ldwv: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
        ),
    >,
    pub claqr4_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex8,
            iloz: *mut MKL_INT,
            ihiz: *mut MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub claqr5_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            kacc22: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nshfts: *const MKL_INT,
            s: *mut MKL_Complex8,
            h: *mut MKL_Complex8,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut MKL_Complex8,
            ldwv: *const MKL_INT,
            nh: *const MKL_INT,
            wh: *mut MKL_Complex8,
            ldwh: *const MKL_INT,
        ),
    >,
    pub claqsb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            s: *const f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub claqsp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            s: *const f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub claqsy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            s: *const f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub claqz0_: Option<
        unsafe extern "C" fn(
            wants: *const c_char,
            wantq: *const c_char,
            wantz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            rec: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub claqz1_: Option<
        unsafe extern "C" fn(
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            k: *const MKL_INT,
            istartm: *const MKL_INT,
            istopm: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            nq: *const MKL_INT,
            qstart: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            nz: *const MKL_INT,
            zstart: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
        ),
    >,
    pub claqz2_: Option<
        unsafe extern "C" fn(
            ilschur: *const MKL_INT,
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            nw: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            qc: *mut MKL_Complex8,
            ldqc: *const MKL_INT,
            zc: *mut MKL_Complex8,
            ldzc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            rec: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub claqz3_: Option<
        unsafe extern "C" fn(
            ilschur: *const MKL_INT,
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            nshifts: *const MKL_INT,
            nb: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            qc: *mut MKL_Complex8,
            ldqc: *const MKL_INT,
            zc: *mut MKL_Complex8,
            ldzc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clar1v_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            b1: *const MKL_INT,
            bn: *const MKL_INT,
            lambda: *const f32,
            d: *const f32,
            l: *const f32,
            ld: *const f32,
            lld: *const f32,
            pivmin: *const f32,
            gaptol: *const f32,
            z: *mut MKL_Complex8,
            wantnc: *const MKL_INT,
            negcnt: *mut MKL_INT,
            ztz: *mut f32,
            mingma: *mut f32,
            r: *mut MKL_INT,
            isuppz: *mut MKL_INT,
            nrminv: *mut f32,
            resid: *mut f32,
            rqcorr: *mut f32,
            work: *mut f32,
        ),
    >,
    pub clar2v_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            y: *mut MKL_Complex8,
            z: *mut MKL_Complex8,
            incx: *const MKL_INT,
            c: *const f32,
            s: *const MKL_Complex8,
            incc: *const MKL_INT,
        ),
    >,
    pub clarcm_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            rwork: *mut f32,
        ),
    >,
    pub clarfb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *const MKL_Complex8,
            ldv: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            ldwork: *const MKL_INT,
        ),
    >,
    pub clarf_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex8,
            incv: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
        ),
    >,
    pub clarf1f_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex8,
            incv: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
        ),
    >,
    pub clarf1l_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex8,
            incv: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
        ),
    >,
    pub clarfg_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            tau: *mut MKL_Complex8,
        ),
    >,
    pub clarfgp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            tau: *mut MKL_Complex8,
        ),
    >,
    pub clarfp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            tau: *mut MKL_Complex8,
        ),
    >,
    pub clarft_: Option<
        unsafe extern "C" fn(
            direct: *const c_char,
            storev: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *const MKL_Complex8,
            ldv: *const MKL_INT,
            tau: *const MKL_Complex8,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
        ),
    >,
    pub clarfx_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex8,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
        ),
    >,
    pub clargv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            c: *mut f32,
            incc: *const MKL_INT,
        ),
    >,
    pub clarnv_: Option<
        unsafe extern "C" fn(
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
        ),
    >,
    pub clarrv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            d: *mut f32,
            l: *mut f32,
            pivmin: *mut f32,
            isplit: *const MKL_INT,
            m: *const MKL_INT,
            dol: *const MKL_INT,
            dou: *const MKL_INT,
            minrgp: *const f32,
            rtol1: *const f32,
            rtol2: *const f32,
            w: *mut f32,
            werr: *mut f32,
            wgap: *mut f32,
            iblock: *const MKL_INT,
            indexw: *const MKL_INT,
            gers: *const f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clarscl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f32,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
        ),
    >,
    pub clartg_: Option<
        unsafe extern "C" fn(
            f: *const MKL_Complex8,
            g: *const MKL_Complex8,
            cs: *mut f32,
            sn: *mut MKL_Complex8,
            r: *mut MKL_Complex8,
        ),
    >,
    pub clartv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const MKL_Complex8,
            incc: *const MKL_INT,
        ),
    >,
    pub clarzb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            v: *const MKL_Complex8,
            ldv: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            ldwork: *const MKL_INT,
        ),
    >,
    pub clarz_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            v: *const MKL_Complex8,
            incv: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
        ),
    >,
    pub clarzt_: Option<
        unsafe extern "C" fn(
            direct: *const c_char,
            storev: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            tau: *const MKL_Complex8,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
        ),
    >,
    pub clascl_: Option<
        unsafe extern "C" fn(
            type_: *const c_char,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            cfrom: *const f32,
            cto: *const f32,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clascl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f32,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
        ),
    >,
    pub claset_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            beta: *const MKL_Complex8,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub clasr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            pivot: *const c_char,
            direct: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            c: *const f32,
            s: *const f32,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub classq_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            scale: *mut f32,
            sumsq: *mut f32,
        ),
    >,
    pub claswp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            k1: *const MKL_INT,
            k2: *const MKL_INT,
            ipiv: *const MKL_INT,
            incx: *const MKL_INT,
        ),
    >,
    pub clasyf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex8,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clatbs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            x: *mut MKL_Complex8,
            scale: *mut f32,
            cnorm: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub clatdf_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            n: *const MKL_INT,
            z: *const MKL_Complex8,
            ldz: *const MKL_INT,
            rhs: *mut MKL_Complex8,
            rdsum: *mut f32,
            rdscal: *mut f32,
            ipiv: *const MKL_INT,
            jpiv: *const MKL_INT,
        ),
    >,
    pub clatps_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            scale: *mut f32,
            cnorm: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub clatrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            e: *mut f32,
            tau: *mut MKL_Complex8,
            w: *mut MKL_Complex8,
            ldw: *const MKL_INT,
        ),
    >,
    pub clatrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut MKL_Complex8,
            scale: *mut f32,
            cnorm: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub clatrs3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            scale: *mut f32,
            cnorm: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clatrz_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
        ),
    >,
    pub clatzm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex8,
            incv: *const MKL_INT,
            tau: *const MKL_Complex8,
            c1: *mut MKL_Complex8,
            c2: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
        ),
    >,
    pub clauu2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clauum_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbequ_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex8,
            ldafb: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbstf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *mut MKL_Complex8,
            ldafb: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbtf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbtrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex8,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpbtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpftrf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cpftri_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cpftrs_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpocon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpoequb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpoequ_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cporfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cporfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            s: *mut f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cposv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cposvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            af: *mut MKL_Complex8,
            ldaf: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cposvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            af: *mut MKL_Complex8,
            ldaf: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpotf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpotrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpotri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpotrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cppcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cppequ_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            afp: *const MKL_Complex8,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cppsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cppsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut MKL_Complex8,
            afp: *mut MKL_Complex8,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cpptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cpptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cpstf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            piv: *mut MKL_INT,
            rank: *mut MKL_INT,
            tol: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpstrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            piv: *mut MKL_INT,
            rank: *mut MKL_INT,
            tol: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cptcon_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            e: *const MKL_Complex8,
            anorm: *const f32,
            rcond: *mut f32,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpteqr_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cptrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f32,
            e: *const MKL_Complex8,
            df: *const f32,
            ef: *const MKL_Complex8,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cptsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *mut f32,
            e: *mut MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cptsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f32,
            e: *const MKL_Complex8,
            df: *mut f32,
            ef: *mut MKL_Complex8,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cpttrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cpttrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f32,
            e: *const MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cptts2_: Option<
        unsafe extern "C" fn(
            iuplo: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f32,
            e: *const MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub crot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cx: *mut MKL_Complex8,
            incx: *const MKL_INT,
            cy: *mut MKL_Complex8,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const MKL_Complex8,
        ),
    >,
    pub cspcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cspmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            ap: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cspr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            ap: *mut MKL_Complex8,
        ),
    >,
    pub csprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            afp: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub cspsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cspsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            afp: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub csptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub csptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csrscl_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            sa: *const f32,
            sx: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub cstedc_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cstegr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cstein_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            e: *const f32,
            m: *const MKL_INT,
            w: *const f32,
            iblock: *const MKL_INT,
            isplit: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cstemr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            nzc: *const MKL_INT,
            isuppz: *mut MKL_INT,
            tryrac: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csteqr_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub csycon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub csyequb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub csymv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub csyr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub csyrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub csyrfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            s: *mut f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub csysv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csysvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *mut MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub csysvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            af: *mut MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub csytf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub csytri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub csytrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctbcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctbrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *const MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctbtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctfsm_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub ctftri_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub ctfttp_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            arf: *const MKL_Complex8,
            ap: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub ctfttr_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            arf: *const MKL_Complex8,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctgevc_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            s: *const MKL_Complex8,
            lds: *const MKL_INT,
            p: *const MKL_Complex8,
            ldp: *const MKL_INT,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctgex2_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            j1: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctgexc_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            ifst: *const MKL_INT,
            ilst: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctgsen_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            select: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex8,
            beta: *mut MKL_Complex8,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            m: *mut MKL_INT,
            pl: *mut f32,
            pr: *mut f32,
            dif: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctgsja_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            tola: *const f32,
            tolb: *const f32,
            alpha: *mut f32,
            beta: *mut f32,
            u: *mut MKL_Complex8,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex8,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex8,
            ncycle: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctgsna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            vl: *const MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *const MKL_Complex8,
            ldvr: *const MKL_INT,
            s: *mut f32,
            dif: *mut f32,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctgsy2_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            ijob: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            d: *const MKL_Complex8,
            ldd: *const MKL_INT,
            e: *const MKL_Complex8,
            lde: *const MKL_INT,
            f: *mut MKL_Complex8,
            ldf: *const MKL_INT,
            scale: *mut f32,
            rdsum: *mut f32,
            rdscal: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctgsyl_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            ijob: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            d: *const MKL_Complex8,
            ldd: *const MKL_INT,
            e: *const MKL_Complex8,
            lde: *const MKL_INT,
            f: *mut MKL_Complex8,
            ldf: *const MKL_INT,
            scale: *mut f32,
            dif: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctpcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *const MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub ctptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctpttf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            arf: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub ctpttr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            rcond: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrevc_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            vl: *mut MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex8,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrexc_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            n: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            ifst: *const MKL_INT,
            ilst: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            x: *const MKL_Complex8,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrsen_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compq: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            w: *mut MKL_Complex8,
            m: *mut MKL_INT,
            s: *mut f32,
            sep: *mut f32,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrsna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            vl: *const MKL_Complex8,
            ldvl: *const MKL_INT,
            vr: *const MKL_Complex8,
            ldvr: *const MKL_INT,
            s: *mut f32,
            sep: *mut f32,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex8,
            ldwork: *const MKL_INT,
            rwork: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrsyl_: Option<
        unsafe extern "C" fn(
            trana: *const c_char,
            tranb: *const c_char,
            isgn: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            scale: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrsyl3_: Option<
        unsafe extern "C" fn(
            trana: *const c_char,
            tranb: *const c_char,
            isgn: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            scale: *mut f32,
            swork: *mut f32,
            ldswork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrti2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrtri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrttf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            arf: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub ctrttp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            ap: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub ctzrqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub ctzrzf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cung2l_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cung2r_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cungbr_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunghr_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cungl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cunglq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cungql_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cungqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cungr2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cungrq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cungtr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunm2l_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cunm2r_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmbr_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmhr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunml2_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmql_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmr2_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmr3_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmrq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmrz_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cunmtr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cupgtr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            tau: *const MKL_Complex8,
            q: *mut MKL_Complex8,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cupmtr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            tau: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dbdsdc_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            compq: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            q: *mut f64,
            iq: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dbdsqr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ncvt: *const MKL_INT,
            nru: *const MKL_INT,
            ncc: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            u: *mut f64,
            ldu: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ddisna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f64,
            sep: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbbrd_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ncc: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            pt: *mut f64,
            ldpt: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbequb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            rowcnd: *mut f64,
            colcnd: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbequ_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            rowcnd: *mut f64,
            colcnd: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbrfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            afb: *const f64,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbrfsx_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            afb: *const f64,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            afb: *mut f64,
            ldafb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f64,
            c: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbsvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            afb: *mut f64,
            ldafb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f64,
            c: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbtf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbtrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgbtrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgebak_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            side: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            scale: *const f64,
            m: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgebal_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            scale: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgebd2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tauq: *mut f64,
            taup: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgebrd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tauq: *mut f64,
            taup: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgecon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgedmd_: Option<
        unsafe extern "C" fn(
            jobs: *const c_char,
            jobz: *const c_char,
            jobr: *const c_char,
            jobf: *const c_char,
            whtsvd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
            nrnk: *const MKL_INT,
            tol: *const f64,
            k: *mut MKL_INT,
            reig: *mut f64,
            imeig: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            res: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            w: *mut f64,
            ldw: *const MKL_INT,
            s: *mut f64,
            lds: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgedmdq_: Option<
        unsafe extern "C" fn(
            jobs: *const c_char,
            jobz: *const c_char,
            jobr: *const c_char,
            jobq: *const c_char,
            jobt: *const c_char,
            jobf: *const c_char,
            whtsvd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            f: *mut f64,
            ldf: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
            nrnk: *const MKL_INT,
            tol: *const f64,
            k: *mut MKL_INT,
            reigs: *mut f64,
            imeig: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            res: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            s: *mut f64,
            lds: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeequb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            rowcnd: *mut f64,
            colcnd: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeequ_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            rowcnd: *mut f64,
            colcnd: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgees_: Option<
        unsafe extern "C" fn(
            jobvs: *const c_char,
            sort: *const c_char,
            select: MKL_D_SELECT_FUNCTION_2,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            sdim: *mut MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            vs: *mut f64,
            ldvs: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeesx_: Option<
        unsafe extern "C" fn(
            jobvs: *const c_char,
            sort: *const c_char,
            select: MKL_D_SELECT_FUNCTION_2,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            sdim: *mut MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            vs: *mut f64,
            ldvs: *const MKL_INT,
            rconde: *mut f64,
            rcondv: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeev_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeevx_: Option<
        unsafe extern "C" fn(
            balanc: *const c_char,
            jobvl: *const c_char,
            jobvr: *const c_char,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            scale: *mut f64,
            abnrm: *mut f64,
            rconde: *mut f64,
            rcondv: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgegs_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            vsl: *mut f64,
            ldvsl: *const MKL_INT,
            vsr: *mut f64,
            ldvsr: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgegv_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgehd2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgehrd_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgejsv_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            jobr: *const c_char,
            jobt: *const c_char,
            jobp: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            sva: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelq2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelsd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            s: *mut f64,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgels_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelst_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelss_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            s: *mut f64,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelsx_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            jpvt: *mut MKL_INT,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgelsy_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            jpvt: *mut MKL_INT,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeql2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqlf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqp3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqp3rk_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            kmax: *const MKL_INT,
            abstol: *const f64,
            reltol: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
            k: *mut MKL_INT,
            maxc2nrmk: *mut f64,
            relmaxc2nrmk: *mut f64,
            jpiv: *mut MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqpf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqr2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqr2p_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgeqrfp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgerfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgerfsx_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            r: *const f64,
            c: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgerq2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgerqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesc2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            rhs: *mut f64,
            ipiv: *const MKL_INT,
            jpiv: *const MKL_INT,
            scale: *mut f64,
        ),
    >,
    pub dgesdd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            s: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesvd_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobvt: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            s: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesvj_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            sva: *mut f64,
            mv: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            af: *mut f64,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f64,
            c: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgesvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            af: *mut f64,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f64,
            c: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetc2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            jpiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_dgetrfnpi_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nfact: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetri_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgetrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggbak_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            side: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            lscale: *const f64,
            rscale: *const f64,
            m: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggbal_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            lscale: *mut f64,
            rscale: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgges_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_D_SELECT_FUNCTION_3,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            vsl: *mut f64,
            ldvsl: *const MKL_INT,
            vsr: *mut f64,
            ldvsr: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggesx_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_D_SELECT_FUNCTION_3,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            vsl: *mut f64,
            ldvsl: *const MKL_INT,
            vsr: *mut f64,
            ldvsr: *const MKL_INT,
            rconde: *mut f64,
            rcondv: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggev_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggevx_: Option<
        unsafe extern "C" fn(
            balanc: *const c_char,
            jobvl: *const c_char,
            jobvr: *const c_char,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            lscale: *mut f64,
            rscale: *mut f64,
            abnrm: *mut f64,
            bbnrm: *mut f64,
            rconde: *mut f64,
            rcondv: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggglm_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            m: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            d: *mut f64,
            x: *mut f64,
            y: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgghrd_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgglse_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            c: *mut f64,
            d: *mut f64,
            x: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggqrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            m: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            taua: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            taub: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggrqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            taua: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            taub: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggsvd_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alpha: *mut f64,
            beta: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dggsvp_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            tola: *const f64,
            tolb: *const f64,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            u: *mut f64,
            ldu: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            iwork: *mut MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dgsvj0_: Option<
        unsafe extern "C" fn(
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            sva: *mut f64,
            mv: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            eps: *const f64,
            sfmin: *const f64,
            tol: *const f64,
            nsweep: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgsvj1_: Option<
        unsafe extern "C" fn(
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            sva: *mut f64,
            mv: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            eps: *const f64,
            sfmin: *const f64,
            tol: *const f64,
            nsweep: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgtcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            dl: *const f64,
            d: *const f64,
            du: *const f64,
            du2: *const f64,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgtrfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f64,
            d: *const f64,
            du: *const f64,
            dlf: *const f64,
            df: *const f64,
            duf: *const f64,
            du2: *const f64,
            ipiv: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgtsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *mut f64,
            d: *mut f64,
            du: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgtsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f64,
            d: *const f64,
            du: *const f64,
            dlf: *mut f64,
            df: *mut f64,
            duf: *mut f64,
            du2: *mut f64,
            ipiv: *mut MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgttrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dl: *mut f64,
            d: *mut f64,
            du: *mut f64,
            du2: *mut f64,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgttrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f64,
            d: *const f64,
            du: *const f64,
            du2: *const f64,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dgtts2_: Option<
        unsafe extern "C" fn(
            itrans: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f64,
            d: *const f64,
            du: *const f64,
            du2: *const f64,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub dhgeqz_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f64,
            ldh: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dhsein_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            eigsrc: *const c_char,
            initv: *const c_char,
            select: *mut MKL_INT,
            n: *const MKL_INT,
            h: *const f64,
            ldh: *const MKL_INT,
            wr: *mut f64,
            wi: *const f64,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f64,
            ifaill: *mut MKL_INT,
            ifailr: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dhseqr_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f64,
            ldh: *const MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub disnan_: Option<unsafe extern "C" fn(din: *const f64) -> MKL_INT>,
    pub dlabad_: Option<unsafe extern "C" fn(smallx: *mut f64, large: *mut f64)>,
    pub dlabrd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tauq: *mut f64,
            taup: *mut f64,
            x: *mut f64,
            ldx: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
        ),
    >,
    pub dlacn2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            v: *mut f64,
            x: *mut f64,
            isgn: *mut MKL_INT,
            est: *mut f64,
            kase: *mut MKL_INT,
            isave: *mut MKL_INT,
        ),
    >,
    pub dlacon_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            v: *mut f64,
            x: *mut f64,
            isgn: *mut MKL_INT,
            est: *mut f64,
            kase: *mut MKL_INT,
        ),
    >,
    pub dlacpy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub dladiv_: Option<
        unsafe extern "C" fn(
            a: *const f64,
            b: *const f64,
            c: *const f64,
            d: *const f64,
            p: *mut f64,
            q: *mut f64,
        ),
    >,
    pub dlae2_: Option<
        unsafe extern "C" fn(
            a: *const f64,
            b: *const f64,
            c: *const f64,
            rt1: *mut f64,
            rt2: *mut f64,
        ),
    >,
    pub dlaebz_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            nitmax: *const MKL_INT,
            n: *const MKL_INT,
            mmax: *const MKL_INT,
            minp: *const MKL_INT,
            nbmin: *const MKL_INT,
            abstol: *const f64,
            reltol: *const f64,
            pivmin: *const f64,
            d: *const f64,
            e: *const f64,
            e2: *const f64,
            nval: *mut MKL_INT,
            ab: *mut f64,
            c: *mut f64,
            mout: *mut MKL_INT,
            nab: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed0_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            qsiz: *const MKL_INT,
            n: *const MKL_INT,
            d: *mut f64,
            e: *const f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            qstore: *mut f64,
            ldqs: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            indxq: *mut MKL_INT,
            rho: *const f64,
            cutpnt: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed2_: Option<
        unsafe extern "C" fn(
            k: *mut MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            d: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            indxq: *mut MKL_INT,
            rho: *mut f64,
            z: *const f64,
            dlamda: *mut f64,
            w: *mut f64,
            q2: *mut f64,
            indx: *mut MKL_INT,
            indxc: *mut MKL_INT,
            indxp: *mut MKL_INT,
            coltyp: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed3_: Option<
        unsafe extern "C" fn(
            k: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            d: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            rho: *const f64,
            dlamda: *mut f64,
            q2: *const f64,
            indx: *const MKL_INT,
            ctot: *const MKL_INT,
            w: *mut f64,
            s: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed4_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            i: *const MKL_INT,
            d: *const f64,
            z: *const f64,
            delta: *mut f64,
            rho: *const f64,
            dlam: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed5_: Option<
        unsafe extern "C" fn(
            i: *const MKL_INT,
            d: *const f64,
            z: *const f64,
            delta: *mut f64,
            rho: *const f64,
            dlam: *mut f64,
        ),
    >,
    pub dlaed6_: Option<
        unsafe extern "C" fn(
            kniter: *const MKL_INT,
            orgati: *const MKL_INT,
            rho: *const f64,
            d: *const f64,
            z: *const f64,
            finit: *const f64,
            tau: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed7_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            n: *const MKL_INT,
            qsiz: *const MKL_INT,
            tlvls: *const MKL_INT,
            curlvl: *const MKL_INT,
            curpbm: *const MKL_INT,
            d: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            indxq: *mut MKL_INT,
            rho: *const f64,
            cutpnt: *const MKL_INT,
            qstore: *mut f64,
            qptr: *mut MKL_INT,
            prmptr: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            givnum: *const f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed8_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            k: *mut MKL_INT,
            n: *const MKL_INT,
            qsiz: *const MKL_INT,
            d: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            indxq: *const MKL_INT,
            rho: *mut f64,
            cutpnt: *const MKL_INT,
            z: *const f64,
            dlamda: *mut f64,
            q2: *mut f64,
            ldq2: *const MKL_INT,
            w: *mut f64,
            perm: *mut MKL_INT,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            givnum: *mut f64,
            indxp: *mut MKL_INT,
            indx: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaed9_: Option<
        unsafe extern "C" fn(
            k: *const MKL_INT,
            kstart: *const MKL_INT,
            kstop: *const MKL_INT,
            n: *const MKL_INT,
            d: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            rho: *const f64,
            dlamda: *const f64,
            w: *const f64,
            s: *mut f64,
            lds: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaeda_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            tlvls: *const MKL_INT,
            curlvl: *const MKL_INT,
            curpbm: *const MKL_INT,
            prmptr: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            givnum: *const f64,
            q: *const f64,
            qptr: *const MKL_INT,
            z: *mut f64,
            ztemp: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaein_: Option<
        unsafe extern "C" fn(
            rightv: *const MKL_INT,
            noinit: *const MKL_INT,
            n: *const MKL_INT,
            h: *const f64,
            ldh: *const MKL_INT,
            wr: *const f64,
            wi: *const f64,
            vr: *mut f64,
            vi: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            eps3: *const f64,
            smlnum: *const f64,
            bignum: *const f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaev2_: Option<
        unsafe extern "C" fn(
            a: *const f64,
            b: *const f64,
            c: *const f64,
            rt1: *mut f64,
            rt2: *mut f64,
            cs1: *mut f64,
            sn1: *mut f64,
        ),
    >,
    pub dlaexc_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            j1: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlag2_: Option<
        unsafe extern "C" fn(
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            safmin: *const f64,
            scale1: *mut f64,
            scale2: *mut f64,
            wr1: *mut f64,
            wr2: *mut f64,
            wi: *mut f64,
        ),
    >,
    pub dlag2s_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            sa: *mut f32,
            ldsa: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlags2_: Option<
        unsafe extern "C" fn(
            upper: *const MKL_INT,
            a1: *const f64,
            a2: *const f64,
            a3: *const f64,
            b1: *const f64,
            b2: *const f64,
            b3: *const f64,
            csu: *mut f64,
            snu: *mut f64,
            csv: *mut f64,
            snv: *mut f64,
            csq: *mut f64,
            snq: *mut f64,
        ),
    >,
    pub dlagtf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f64,
            lambda: *const f64,
            b: *mut f64,
            c: *mut f64,
            tol: *const f64,
            d: *mut f64,
            in_: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlagtm_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            alpha: *const f64,
            dl: *const f64,
            d: *const f64,
            du: *const f64,
            x: *const f64,
            ldx: *const MKL_INT,
            beta: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub dlagts_: Option<
        unsafe extern "C" fn(
            job: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            b: *const f64,
            c: *const f64,
            d: *const f64,
            in_: *const MKL_INT,
            y: *mut f64,
            tol: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlagv2_: Option<
        unsafe extern "C" fn(
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            csl: *mut f64,
            snl: *mut f64,
            csr: *mut f64,
            snr: *mut f64,
        ),
    >,
    pub dlahqr_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f64,
            ldh: *const MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlahr2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            t: *mut f64,
            ldt: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
        ),
    >,
    pub dlahrd_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            t: *mut f64,
            ldt: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
        ),
    >,
    pub dlaic1_: Option<
        unsafe extern "C" fn(
            job: *const MKL_INT,
            j: *const MKL_INT,
            x: *const f64,
            sest: *const f64,
            w: *const f64,
            gamma: *const f64,
            sestpr: *mut f64,
            s: *mut f64,
            c: *mut f64,
        ),
    >,
    pub dlaisnan_: Option<unsafe extern "C" fn(din1: *const f64, din2: *const f64) -> MKL_INT>,
    pub dlaln2_: Option<
        unsafe extern "C" fn(
            ltrans: *const MKL_INT,
            na: *const MKL_INT,
            nw: *const MKL_INT,
            smin: *const f64,
            ca: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            d1: *const f64,
            d2: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            wr: *const f64,
            wi: *const f64,
            x: *mut f64,
            ldx: *const MKL_INT,
            scale: *mut f64,
            xnorm: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlals0_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            nrhs: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            bx: *mut f64,
            ldbx: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            ldgcol: *const MKL_INT,
            givnum: *const f64,
            ldgnum: *const MKL_INT,
            poles: *const f64,
            difl: *const f64,
            difr: *const f64,
            z: *const f64,
            k: *const MKL_INT,
            c: *const f64,
            s: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlalsa_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            bx: *mut f64,
            ldbx: *const MKL_INT,
            u: *const f64,
            ldu: *const MKL_INT,
            vt: *const f64,
            k: *const MKL_INT,
            difl: *const f64,
            difr: *const f64,
            z: *const f64,
            poles: *const f64,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            ldgcol: *const MKL_INT,
            perm: *const MKL_INT,
            givnum: *const f64,
            c: *const f64,
            s: *const f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlalsd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlamch_: Option<unsafe extern "C" fn(cmach: *const c_char) -> f64>,
    pub dlamc1_: Option<
        unsafe extern "C" fn(
            beta: *mut MKL_INT,
            t: *mut MKL_INT,
            rnd: *mut MKL_INT,
            ieee1: *mut MKL_INT,
        ),
    >,
    pub dlamc2_: Option<
        unsafe extern "C" fn(
            beta: *mut MKL_INT,
            t: *mut MKL_INT,
            rnd: *mut MKL_INT,
            eps: *mut f64,
            emin: *mut MKL_INT,
            rmin: *mut f64,
            emax: *mut MKL_INT,
            rmax: *mut f64,
        ),
    >,
    pub dlamc3_: Option<unsafe extern "C" fn(a: *const f64, b: *const f64) -> f64>,
    pub dlamc4_:
        Option<unsafe extern "C" fn(emin: *mut MKL_INT, start: *const f64, base: *const MKL_INT)>,
    pub dlamc5_: Option<
        unsafe extern "C" fn(
            beta: *const MKL_INT,
            p: *const MKL_INT,
            emin: *const MKL_INT,
            ieee: *const MKL_INT,
            emax: *mut MKL_INT,
            rmax: *mut f64,
        ),
    >,
    pub dlamrg_: Option<
        unsafe extern "C" fn(
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            a: *const f64,
            dtrd1: *const MKL_INT,
            dtrd2: *const MKL_INT,
            index: *mut MKL_INT,
        ),
    >,
    pub dlaneg_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            lld: *const f64,
            sigma: *const f64,
            pivmin: *const f64,
            r: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub dlangb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlange_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlangt_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            dl: *const f64,
            d: *const f64,
            du: *const f64,
        ) -> f64,
    >,
    pub dlanhs_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlansb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlansf_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlansp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlanst_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            d: *const f64,
            e: *const f64,
        ) -> f64,
    >,
    pub dlansy_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlantb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlantp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlantr_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dlanv2_: Option<
        unsafe extern "C" fn(
            a: *mut f64,
            b: *mut f64,
            c: *mut f64,
            d: *mut f64,
            rt1r: *mut f64,
            rt1i: *mut f64,
            rt2r: *mut f64,
            rt2i: *mut f64,
            cs: *mut f64,
            sn: *mut f64,
        ),
    >,
    pub dlapll_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            ssmin: *mut f64,
        ),
    >,
    pub dlapmt_: Option<
        unsafe extern "C" fn(
            forwrd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            k: *mut MKL_INT,
        ),
    >,
    pub dlapy2_: Option<unsafe extern "C" fn(x: *const f64, y: *const f64) -> f64>,
    pub dlapy3_: Option<unsafe extern "C" fn(x: *const f64, y: *const f64, z: *const f64) -> f64>,
    pub dlaqgb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            r: *const f64,
            c: *const f64,
            rowcnd: *const f64,
            colcnd: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub dlaqge_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            r: *const f64,
            c: *const f64,
            rowcnd: *const f64,
            colcnd: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub dlaqp2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            offset: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut f64,
            vn1: *mut f64,
            vn2: *mut f64,
            work: *mut f64,
        ),
    >,
    pub dlaqps_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            offset: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut f64,
            vn1: *mut f64,
            vn2: *mut f64,
            auxv: *mut f64,
            f: *mut f64,
            ldf: *const MKL_INT,
        ),
    >,
    pub dlaqr0_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f64,
            ldh: *const MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaqr1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            h: *const f64,
            ldh: *const MKL_INT,
            sr1: *const f64,
            si1: *mut f64,
            sr2: *mut f64,
            si2: *mut f64,
            v: *mut f64,
        ),
    >,
    pub dlaqr2_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nw: *const MKL_INT,
            h: *mut f64,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            sr: *mut f64,
            si: *mut f64,
            v: *mut f64,
            ldv: *const MKL_INT,
            nh: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut f64,
            ldwv: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
        ),
    >,
    pub dlaqr3_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nw: *const MKL_INT,
            h: *mut f64,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            sr: *mut f64,
            si: *mut f64,
            v: *mut f64,
            ldv: *const MKL_INT,
            nh: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut f64,
            ldwv: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
        ),
    >,
    pub dlaqr4_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f64,
            ldh: *const MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaqr5_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            kacc22: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nshfts: *const MKL_INT,
            sr: *mut f64,
            si: *mut f64,
            h: *mut f64,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            u: *mut f64,
            ldu: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut f64,
            ldwv: *const MKL_INT,
            nh: *const MKL_INT,
            wh: *mut f64,
            ldwh: *const MKL_INT,
        ),
    >,
    pub dlaqsb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            s: *const f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub dlaqsp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            s: *const f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub dlaqsy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            s: *const f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub dlaqtr_: Option<
        unsafe extern "C" fn(
            ltran: *const MKL_INT,
            lreal: *const MKL_INT,
            n: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            b: *const f64,
            w: *const f64,
            scale: *mut f64,
            x: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaqz0_: Option<
        unsafe extern "C" fn(
            wants: *const MKL_INT,
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            rec: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaqz1_: Option<
        unsafe extern "C" fn(
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            sr1: *const f64,
            sr2: *const f64,
            si: *const f64,
            beta1: *const f64,
            beta2: *const f64,
            v: *mut f64,
        ),
    >,
    pub dlaqz2_: Option<
        unsafe extern "C" fn(
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            k: *const MKL_INT,
            istartm: *const MKL_INT,
            istopm: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            nq: *const MKL_INT,
            qstart: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            nz: *const MKL_INT,
            zstart: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
        ),
    >,
    pub dlaqz3_: Option<
        unsafe extern "C" fn(
            ilschur: *const MKL_INT,
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            nw: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            qc: *mut f64,
            ldqc: *const MKL_INT,
            zc: *mut f64,
            ldzc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            rec: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlaqz4_: Option<
        unsafe extern "C" fn(
            ilschur: *const MKL_INT,
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            nshifts: *const MKL_INT,
            nb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            qc: *mut f64,
            ldqc: *const MKL_INT,
            zc: *mut f64,
            ldzc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlar1v_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            b1: *const MKL_INT,
            bn: *const MKL_INT,
            lambda: *const f64,
            d: *const f64,
            l: *const f64,
            ld: *const f64,
            lld: *const f64,
            pivmin: *const f64,
            gaptol: *const f64,
            z: *mut f64,
            wantnc: *const MKL_INT,
            negcnt: *mut MKL_INT,
            ztz: *mut f64,
            mingma: *mut f64,
            r: *mut MKL_INT,
            isuppz: *mut MKL_INT,
            nrminv: *mut f64,
            resid: *mut f64,
            rqcorr: *mut f64,
            work: *mut f64,
        ),
    >,
    pub dlar2v_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            y: *mut f64,
            z: *mut f64,
            incx: *const MKL_INT,
            c: *const f64,
            s: *const f64,
            incc: *const MKL_INT,
        ),
    >,
    pub dlarfb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *const f64,
            ldv: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            ldwork: *const MKL_INT,
        ),
    >,
    pub dlarf_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f64,
            incv: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
        ),
    >,
    pub dlarf1f_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f64,
            incv: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
        ),
    >,
    pub dlarf1l_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f64,
            incv: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
        ),
    >,
    pub dlarfg_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut f64,
            x: *mut f64,
            incx: *const MKL_INT,
            tau: *mut f64,
        ),
    >,
    pub dlarfgp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut f64,
            x: *mut f64,
            incx: *const MKL_INT,
            tau: *mut f64,
        ),
    >,
    pub dlarfp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut f64,
            x: *mut f64,
            incx: *const MKL_INT,
            tau: *mut f64,
        ),
    >,
    pub dlarft_: Option<
        unsafe extern "C" fn(
            direct: *const c_char,
            storev: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *const f64,
            ldv: *const MKL_INT,
            tau: *const f64,
            t: *mut f64,
            ldt: *const MKL_INT,
        ),
    >,
    pub dlarfx_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f64,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
        ),
    >,
    pub dlargv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            c: *mut f64,
            incc: *const MKL_INT,
        ),
    >,
    pub dlarnv_: Option<
        unsafe extern "C" fn(
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            n: *const MKL_INT,
            x: *mut f64,
        ),
    >,
    pub dlarra_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            e: *mut f64,
            e2: *mut f64,
            spltol: *const f64,
            tnrm: *const f64,
            nsplit: *mut MKL_INT,
            isplit: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarrb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            lld: *const f64,
            ifirst: *const MKL_INT,
            ilast: *const MKL_INT,
            rtol1: *const f64,
            rtol2: *const f64,
            offset: *const MKL_INT,
            w: *mut f64,
            wgap: *mut f64,
            werr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            pivmin: *const f64,
            spdiam: *const f64,
            twist: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarrc_: Option<
        unsafe extern "C" fn(
            jobt: *const c_char,
            n: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            d: *const f64,
            e: *const f64,
            pivmin: *const f64,
            eigcnt: *mut MKL_INT,
            lcnt: *mut MKL_INT,
            rcnt: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarrd_: Option<
        unsafe extern "C" fn(
            range: *const c_char,
            order: *const c_char,
            n: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            gers: *const f64,
            reltol: *const f64,
            d: *const f64,
            e: *const f64,
            e2: *const f64,
            pivmin: *const f64,
            nsplit: *const MKL_INT,
            isplit: *const MKL_INT,
            m: *mut MKL_INT,
            w: *mut f64,
            werr: *mut f64,
            wl: *mut f64,
            wu: *mut f64,
            iblock: *mut MKL_INT,
            indexw: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarre_: Option<
        unsafe extern "C" fn(
            range: *const c_char,
            n: *const MKL_INT,
            vl: *mut f64,
            vu: *mut f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            e2: *mut f64,
            rtol1: *const f64,
            rtol2: *const f64,
            spltol: *const f64,
            nsplit: *mut MKL_INT,
            isplit: *mut MKL_INT,
            m: *mut MKL_INT,
            w: *mut f64,
            werr: *mut f64,
            wgap: *mut f64,
            iblock: *mut MKL_INT,
            indexw: *mut MKL_INT,
            gers: *mut f64,
            pivmin: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            l: *const f64,
            ld: *const f64,
            clstrt: *const MKL_INT,
            clend: *const MKL_INT,
            w: *const f64,
            wgap: *mut f64,
            werr: *const f64,
            spdiam: *const f64,
            clgapl: *const f64,
            clgapr: *mut f64,
            pivmin: *const f64,
            sigma: *mut f64,
            dplus: *mut f64,
            lplus: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarrj_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            e2: *const f64,
            ifirst: *const MKL_INT,
            ilast: *const MKL_INT,
            rtol: *const f64,
            offset: *const MKL_INT,
            w: *mut f64,
            werr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            pivmin: *const f64,
            spdiam: *const f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarrk_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            iw: *const MKL_INT,
            gl: *const f64,
            gu: *const f64,
            d: *const f64,
            e2: *const f64,
            pivmin: *const f64,
            reltol: *const f64,
            w: *mut f64,
            werr: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarrr_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, d: *const f64, e: *mut f64, info: *mut MKL_INT),
    >,
    pub dlarrv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            d: *mut f64,
            l: *mut f64,
            pivmin: *mut f64,
            isplit: *const MKL_INT,
            m: *const MKL_INT,
            dol: *const MKL_INT,
            dou: *const MKL_INT,
            minrgp: *const f64,
            rtol1: *const f64,
            rtol2: *const f64,
            w: *mut f64,
            werr: *mut f64,
            wgap: *mut f64,
            iblock: *const MKL_INT,
            indexw: *const MKL_INT,
            gers: *const f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarscl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f64,
            x: *mut f64,
            ldx: *const MKL_INT,
        ),
    >,
    pub dlartg_: Option<
        unsafe extern "C" fn(f: *const f64, g: *const f64, cs: *mut f64, sn: *mut f64, r: *mut f64),
    >,
    pub dlartv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const f64,
            incc: *const MKL_INT,
        ),
    >,
    pub dlaruv_: Option<unsafe extern "C" fn(iseed: *mut MKL_INT, n: *const MKL_INT, x: *mut f64)>,
    pub dlarzb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            v: *const f64,
            ldv: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            ldwork: *const MKL_INT,
        ),
    >,
    pub dlarz_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            v: *const f64,
            incv: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
        ),
    >,
    pub dlarzt_: Option<
        unsafe extern "C" fn(
            direct: *const c_char,
            storev: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            tau: *const f64,
            t: *mut f64,
            ldt: *const MKL_INT,
        ),
    >,
    pub dlas2_: Option<
        unsafe extern "C" fn(
            f: *const f64,
            g: *const f64,
            h: *const f64,
            ssmin: *mut f64,
            ssmax: *mut f64,
        ),
    >,
    pub dlascl_: Option<
        unsafe extern "C" fn(
            type_: *const c_char,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            cfrom: *const f64,
            cto: *const f64,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlascl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f64,
            x: *mut f64,
            ldx: *const MKL_INT,
        ),
    >,
    pub dlasd0_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            sqre: *const MKL_INT,
            d: *mut f64,
            e: *const f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            smlsiz: *const MKL_INT,
            iwork: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasd1_: Option<
        unsafe extern "C" fn(
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            d: *mut f64,
            alpha: *mut f64,
            beta: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            idxq: *mut MKL_INT,
            iwork: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasd2_: Option<
        unsafe extern "C" fn(
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            k: *mut MKL_INT,
            d: *mut f64,
            z: *mut f64,
            alpha: *const f64,
            beta: *const f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            dsigma: *mut f64,
            u2: *mut f64,
            ldu2: *const MKL_INT,
            vt2: *mut f64,
            ldvt2: *const MKL_INT,
            idxp: *mut MKL_INT,
            idx: *mut MKL_INT,
            idxc: *mut MKL_INT,
            idxq: *mut MKL_INT,
            coltyp: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasd3_: Option<
        unsafe extern "C" fn(
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            k: *const MKL_INT,
            d: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            dsigma: *const f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            u2: *mut f64,
            ldu2: *const MKL_INT,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            vt2: *mut f64,
            ldvt2: *const MKL_INT,
            idxc: *const MKL_INT,
            ctot: *const MKL_INT,
            z: *const f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasd4_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            i: *const MKL_INT,
            d: *const f64,
            z: *const f64,
            delta: *mut f64,
            rho: *const f64,
            sigma: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasd5_: Option<
        unsafe extern "C" fn(
            i: *const MKL_INT,
            d: *const f64,
            z: *const f64,
            delta: *mut f64,
            rho: *const f64,
            dsigma: *mut f64,
            work: *mut f64,
        ),
    >,
    pub dlasd6_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            d: *mut f64,
            vf: *mut f64,
            vl: *mut f64,
            alpha: *mut f64,
            beta: *mut f64,
            idxq: *mut MKL_INT,
            perm: *mut MKL_INT,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            ldgcol: *const MKL_INT,
            givnum: *mut f64,
            ldgnum: *const MKL_INT,
            poles: *mut f64,
            difl: *mut f64,
            difr: *mut f64,
            z: *mut f64,
            k: *mut MKL_INT,
            c: *mut f64,
            s: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasd7_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            k: *mut MKL_INT,
            d: *mut f64,
            z: *mut f64,
            zw: *mut f64,
            vf: *mut f64,
            vfw: *mut f64,
            vl: *mut f64,
            vlw: *mut f64,
            alpha: *const f64,
            beta: *const f64,
            dsigma: *mut f64,
            idx: *mut MKL_INT,
            idxp: *mut MKL_INT,
            idxq: *const MKL_INT,
            perm: *mut MKL_INT,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            ldgcol: *const MKL_INT,
            givnum: *mut f64,
            ldgnum: *const MKL_INT,
            c: *mut f64,
            s: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasd8_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            k: *const MKL_INT,
            d: *mut f64,
            z: *mut f64,
            vf: *mut f64,
            vl: *mut f64,
            difl: *mut f64,
            difr: *mut f64,
            lddifr: *const MKL_INT,
            dsigma: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasda_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            sqre: *const MKL_INT,
            d: *mut f64,
            e: *const f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            vt: *mut f64,
            k: *mut MKL_INT,
            difl: *mut f64,
            difr: *mut f64,
            z: *mut f64,
            poles: *mut f64,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            ldgcol: *const MKL_INT,
            perm: *mut MKL_INT,
            givnum: *mut f64,
            c: *mut f64,
            s: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasdq_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            sqre: *const MKL_INT,
            n: *const MKL_INT,
            ncvt: *const MKL_INT,
            nru: *const MKL_INT,
            ncc: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vt: *mut f64,
            ldvt: *const MKL_INT,
            u: *mut f64,
            ldu: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasdt_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            lvl: *mut MKL_INT,
            nd: *mut MKL_INT,
            inode: *mut MKL_INT,
            ndiml: *mut MKL_INT,
            ndimr: *mut MKL_INT,
            msub: *const MKL_INT,
        ),
    >,
    pub dlaset_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            beta: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
        ),
    >,
    pub dlasq1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasq2_: Option<unsafe extern "C" fn(n: *const MKL_INT, z: *mut f64, info: *mut MKL_INT)>,
    pub dlasq3_: Option<
        unsafe extern "C" fn(
            i0: *const MKL_INT,
            n0: *const MKL_INT,
            z: *const f64,
            pp: *mut MKL_INT,
            dmin: *mut f64,
            sigma: *mut f64,
            desig: *mut f64,
            qmax: *const f64,
            nfail: *mut MKL_INT,
            iter: *mut MKL_INT,
            ndiv: *mut MKL_INT,
            ieee: *const MKL_INT,
            ttype: *mut MKL_INT,
            dmin1: *mut f64,
            dmin2: *mut f64,
            dn: *mut f64,
            dn1: *mut f64,
            dn2: *mut f64,
            g: *mut f64,
            tau: *mut f64,
        ),
    >,
    pub dlasq4_: Option<
        unsafe extern "C" fn(
            i0: *const MKL_INT,
            n0: *const MKL_INT,
            z: *const f64,
            pp: *const MKL_INT,
            n0in: *mut MKL_INT,
            dmin: *const f64,
            dmin1: *const f64,
            dmin2: *const f64,
            dn: *const f64,
            dn1: *const f64,
            dn2: *const f64,
            tau: *mut f64,
            ttype: *mut MKL_INT,
            g: *mut f64,
        ),
    >,
    pub dlasq5_: Option<
        unsafe extern "C" fn(
            i0: *const MKL_INT,
            n0: *const MKL_INT,
            z: *const f64,
            pp: *const MKL_INT,
            tau: *const f64,
            sigma: *const f64,
            dmin: *mut f64,
            dmin1: *mut f64,
            dmin2: *mut f64,
            dn: *mut f64,
            dnm1: *mut f64,
            dnm2: *mut f64,
            ieee: *const MKL_INT,
            eps: *const f64,
        ),
    >,
    pub dlasq6_: Option<
        unsafe extern "C" fn(
            i0: *const MKL_INT,
            n0: *const MKL_INT,
            z: *const f64,
            pp: *const MKL_INT,
            dmin: *mut f64,
            dmin1: *mut f64,
            dmin2: *mut f64,
            dn: *mut f64,
            dnm1: *mut f64,
            dnm2: *mut f64,
        ),
    >,
    pub dlasr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            pivot: *const c_char,
            direct: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            c: *const f64,
            s: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
        ),
    >,
    pub dlasrt_: Option<
        unsafe extern "C" fn(id: *const c_char, n: *const MKL_INT, d: *mut f64, info: *mut MKL_INT),
    >,
    pub dlassq_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            scale: *mut f64,
            sumsq: *mut f64,
        ),
    >,
    pub dlasv2_: Option<
        unsafe extern "C" fn(
            f: *const f64,
            g: *const f64,
            h: *const f64,
            ssmin: *mut f64,
            ssmax: *mut f64,
            snr: *mut f64,
            csr: *mut f64,
            snl: *mut f64,
            csl: *mut f64,
        ),
    >,
    pub dlaswp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            k1: *const MKL_INT,
            k2: *const MKL_INT,
            ipiv: *const MKL_INT,
            incx: *const MKL_INT,
        ),
    >,
    pub dlasy2_: Option<
        unsafe extern "C" fn(
            ltranl: *const MKL_INT,
            ltranr: *const MKL_INT,
            isgn: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            tl: *const f64,
            ldtl: *const MKL_INT,
            tr: *const f64,
            ldtr: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            scale: *mut f64,
            x: *mut f64,
            ldx: *const MKL_INT,
            xnorm: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlasyf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut f64,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlat2s_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            sa: *mut f32,
            ldsa: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatbs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            x: *mut f64,
            scale: *mut f64,
            cnorm: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatdf_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            n: *const MKL_INT,
            z: *const f64,
            ldz: *const MKL_INT,
            rhs: *mut f64,
            rdsum: *mut f64,
            rdscal: *mut f64,
            ipiv: *const MKL_INT,
            jpiv: *const MKL_INT,
        ),
    >,
    pub dlatps_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            x: *mut f64,
            scale: *mut f64,
            cnorm: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            e: *mut f64,
            tau: *mut f64,
            w: *mut f64,
            ldw: *const MKL_INT,
        ),
    >,
    pub dlatrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            x: *mut f64,
            scale: *mut f64,
            cnorm: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatrs3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            scale: *mut f64,
            cnorm: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatrz_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
        ),
    >,
    pub dlatzm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f64,
            incv: *const MKL_INT,
            tau: *const f64,
            c1: *mut f64,
            c2: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
        ),
    >,
    pub dlauu2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlauum_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dopgtr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            tau: *const f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dopmtr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ap: *const f64,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dorg2l_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dorg2r_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgbr_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorghr_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dorglq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgql_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgr2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgrq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorgtr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *const f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorm2l_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dorm2r_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dormbr_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dormhr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dorml2_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dormlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dormql_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dormqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dormr2_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dormr3_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dormrq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dormrz_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dormtr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            tau: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbequ_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            afb: *const f64,
            ldafb: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbstf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            afb: *mut f64,
            ldafb: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbtf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbtrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpbtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpftrf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpftri_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpftrs_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpocon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpoequb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpoequ_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dporfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dporfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            s: *mut f64,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dposv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dposvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            af: *mut f64,
            ldaf: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dposvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            af: *mut f64,
            ldaf: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpotf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpotrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpotri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpotrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dppcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dppequ_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f64,
            afp: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dppsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dppsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut f64,
            afp: *mut f64,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dpstf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            piv: *mut MKL_INT,
            rank: *mut MKL_INT,
            tol: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpstrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            piv: *mut MKL_INT,
            rank: *mut MKL_INT,
            tol: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dptcon_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            e: *const f64,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpteqr_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dptrfs_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f64,
            e: *const f64,
            df: *const f64,
            ef: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dptsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dptsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f64,
            e: *const f64,
            df: *mut f64,
            ef: *mut f64,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dpttrf_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, d: *mut f64, e: *mut f64, info: *mut MKL_INT),
    >,
    pub dpttrs_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f64,
            e: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dptts2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f64,
            e: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub drscl_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, sa: *const f64, sx: *mut f64, incx: *const MKL_INT),
    >,
    pub dsbevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbgst_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            bb: *const f64,
            ldbb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbgvd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            bb: *mut f64,
            ldbb: *const MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbgv_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            bb: *mut f64,
            ldbb: *const MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbgvx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            bb: *mut f64,
            ldbb: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsbtrd_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f64,
            ldab: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsecnd_: Option<unsafe extern "C" fn() -> f64>,
    pub dsfrk_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
        ),
    >,
    pub dsgesv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            work: *mut f64,
            swork: *mut f32,
            iter: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dspcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dspevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dspev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dspevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dspgst_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            bp: *const f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dspgvd_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            bp: *mut f64,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dspgv_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            bp: *mut f64,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dspgvx_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            bp: *mut f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsposv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            work: *mut f64,
            swork: *mut f32,
            iter: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f64,
            afp: *const f64,
            ipiv: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dspsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut f64,
            ipiv: *mut MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dspsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f64,
            afp: *mut f64,
            ipiv: *mut MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsptrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            d: *mut f64,
            e: *mut f64,
            tau: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            ipiv: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f64,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dstebz_: Option<
        unsafe extern "C" fn(
            range: *const c_char,
            order: *const c_char,
            n: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            d: *const f64,
            e: *const f64,
            m: *mut MKL_INT,
            nsplit: *mut MKL_INT,
            w: *mut f64,
            iblock: *mut MKL_INT,
            isplit: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dstedc_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dstegr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dstein_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            e: *const f64,
            m: *const MKL_INT,
            w: *const f64,
            iblock: *const MKL_INT,
            isplit: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dstemr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            nzc: *const MKL_INT,
            isuppz: *mut MKL_INT,
            tryrac: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsteqr_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsterf_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, d: *mut f64, e: *mut f64, info: *mut MKL_INT),
    >,
    pub dstevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dstev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dstevr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dstevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsycon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyequb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            w: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            w: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyevr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsygs2_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsygst_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsygvd_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            w: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsygv_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            w: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsygvx_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyrfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            s: *mut f64,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsysv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsysvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *mut f64,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsysvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            af: *mut f64,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            x: *mut f64,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytd2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tau: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dsytrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtbcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtbrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *const f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtbtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtfsm_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub dtftri_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtfttp_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            arf: *const f64,
            ap: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtfttr_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            arf: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtgevc_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            s: *const f64,
            lds: *const MKL_INT,
            p: *const f64,
            ldp: *const MKL_INT,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtgex2_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            j1: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtgexc_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            ifst: *mut MKL_INT,
            ilst: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtgsen_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            select: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            alphar: *mut f64,
            alphai: *mut f64,
            beta: *mut f64,
            q: *mut f64,
            ldq: *const MKL_INT,
            z: *mut f64,
            ldz: *const MKL_INT,
            m: *mut MKL_INT,
            pl: *mut f64,
            pr: *mut f64,
            dif: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtgsja_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            tola: *const f64,
            tolb: *const f64,
            alpha: *mut f64,
            beta: *mut f64,
            u: *mut f64,
            ldu: *const MKL_INT,
            v: *mut f64,
            ldv: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            work: *mut f64,
            ncycle: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtgsna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            vl: *const f64,
            ldvl: *const MKL_INT,
            vr: *const f64,
            ldvr: *const MKL_INT,
            s: *mut f64,
            dif: *mut f64,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtgsy2_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            ijob: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            d: *const f64,
            ldd: *const MKL_INT,
            e: *const f64,
            lde: *const MKL_INT,
            f: *mut f64,
            ldf: *const MKL_INT,
            scale: *mut f64,
            rdsum: *mut f64,
            rdscal: *mut f64,
            iwork: *mut MKL_INT,
            pq: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtgsyl_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            ijob: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            d: *const f64,
            ldd: *const MKL_INT,
            e: *const f64,
            lde: *const MKL_INT,
            f: *mut f64,
            ldf: *const MKL_INT,
            scale: *mut f64,
            dif: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtpcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *const f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtpttf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            arf: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtpttr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            rcond: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrevc_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *mut MKL_INT,
            n: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            vl: *mut f64,
            ldvl: *const MKL_INT,
            vr: *mut f64,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrexc_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            n: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            ifst: *mut MKL_INT,
            ilst: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            x: *const f64,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrsen_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compq: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            q: *mut f64,
            ldq: *const MKL_INT,
            wr: *mut f64,
            wi: *mut f64,
            m: *mut MKL_INT,
            s: *mut f64,
            sep: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrsna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            vl: *const f64,
            ldvl: *const MKL_INT,
            vr: *const f64,
            ldvr: *const MKL_INT,
            s: *mut f64,
            sep: *mut f64,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f64,
            ldwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrsyl_: Option<
        unsafe extern "C" fn(
            trana: *const c_char,
            tranb: *const c_char,
            isgn: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            scale: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrsyl3_: Option<
        unsafe extern "C" fn(
            trana: *const c_char,
            tranb: *const c_char,
            isgn: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            scale: *mut f64,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            swork: *mut f64,
            ldswork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrti2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrtri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrttf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            arf: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtrttp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            ap: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtzrqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub dtzrzf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            tau: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dzsum1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cx: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> f64,
    >,
    pub icmax1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cx: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ieeeck_: Option<
        unsafe extern "C" fn(ispec: *const MKL_INT, zero: *const f32, one: *const f32) -> MKL_INT,
    >,
    pub ilaclc_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ilaclr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub iladiag_: Option<unsafe extern "C" fn(diag: *const c_char) -> MKL_INT>,
    pub iladlc_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub iladlr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ilaenv_: Option<
        unsafe extern "C" fn(
            ispec: *const MKL_INT,
            name: *const c_char,
            opts: *const c_char,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            n3: *const MKL_INT,
            n4: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ilaenv2stage_: Option<
        unsafe extern "C" fn(
            ispec: *const MKL_INT,
            name: *const c_char,
            opts: *const c_char,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            n3: *const MKL_INT,
            n4: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ilaprec_: Option<unsafe extern "C" fn(prec: *const c_char) -> MKL_INT>,
    pub ilaslc_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ilaslr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ilatrans_: Option<unsafe extern "C" fn(trans: *const c_char) -> MKL_INT>,
    pub ilauplo_: Option<unsafe extern "C" fn(uplo: *const c_char) -> MKL_INT>,
    pub ilaver_: Option<
        unsafe extern "C" fn(
            vers_major: *mut MKL_INT,
            vers_minor: *mut MKL_INT,
            vers_patch: *mut MKL_INT,
        ),
    >,
    pub ilazlc_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub ilazlr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub iparmq_: Option<
        unsafe extern "C" fn(
            ispec: *const MKL_INT,
            name: *const c_char,
            opts: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            lwork: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub izmax1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cx: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub lsamen_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, ca: *const c_char, cb: *const c_char) -> MKL_INT,
    >,
    pub sbdsdc_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            compq: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            q: *mut f32,
            iq: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sbdsqr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ncvt: *const MKL_INT,
            nru: *const MKL_INT,
            ncc: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            u: *mut f32,
            ldu: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub scsum1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cx: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> f32,
    >,
    pub sdisna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f32,
            sep: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub second_: Option<unsafe extern "C" fn() -> f32>,
    pub sgbbrd_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ncc: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            pt: *mut f32,
            ldpt: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbequb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            rowcnd: *mut f32,
            colcnd: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbequ_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            rowcnd: *mut f32,
            colcnd: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbrfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            afb: *const f32,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbrfsx_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            afb: *const f32,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            afb: *mut f32,
            ldafb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f32,
            c: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbsvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            afb: *mut f32,
            ldafb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f32,
            c: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbtf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbtrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgbtrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgebak_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            side: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            scale: *const f32,
            m: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgebal_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            scale: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgebd2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tauq: *mut f32,
            taup: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgebrd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tauq: *mut f32,
            taup: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgecon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgedmd_: Option<
        unsafe extern "C" fn(
            jobs: *const c_char,
            jobz: *const c_char,
            jobr: *const c_char,
            jobf: *const c_char,
            whtsvd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
            nrnk: *const MKL_INT,
            tol: *const f32,
            k: *mut MKL_INT,
            reig: *mut f32,
            imeig: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            res: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            w: *mut f32,
            ldw: *const MKL_INT,
            s: *mut f32,
            lds: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgedmdq_: Option<
        unsafe extern "C" fn(
            jobs: *const c_char,
            jobz: *const c_char,
            jobr: *const c_char,
            jobq: *const c_char,
            jobt: *const c_char,
            jobf: *const c_char,
            whtsvd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            f: *mut f32,
            ldf: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
            nrnk: *const MKL_INT,
            tol: *const f32,
            k: *mut MKL_INT,
            reigs: *mut f32,
            imeig: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            res: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            s: *mut f32,
            lds: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeequb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            rowcnd: *mut f32,
            colcnd: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeequ_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            r: *mut f32,
            c: *mut f32,
            rowcnd: *mut f32,
            colcnd: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgees_: Option<
        unsafe extern "C" fn(
            jobvs: *const c_char,
            sort: *const c_char,
            select: MKL_S_SELECT_FUNCTION_2,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            sdim: *mut MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            vs: *mut f32,
            ldvs: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeesx_: Option<
        unsafe extern "C" fn(
            jobvs: *const c_char,
            sort: *const c_char,
            select: MKL_S_SELECT_FUNCTION_2,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            sdim: *mut MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            vs: *mut f32,
            ldvs: *const MKL_INT,
            rconde: *mut f32,
            rcondv: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeev_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeevx_: Option<
        unsafe extern "C" fn(
            balanc: *const c_char,
            jobvl: *const c_char,
            jobvr: *const c_char,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            scale: *mut f32,
            abnrm: *mut f32,
            rconde: *mut f32,
            rcondv: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgegs_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            vsl: *mut f32,
            ldvsl: *const MKL_INT,
            vsr: *mut f32,
            ldvsr: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgegv_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgehd2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgehrd_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgejsv_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            jobr: *const c_char,
            jobt: *const c_char,
            jobp: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            sva: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelq2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelsd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            s: *mut f32,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgels_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelst_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelss_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            s: *mut f32,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelsx_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            jpvt: *mut MKL_INT,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgelsy_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            jpvt: *mut MKL_INT,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeql2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqlf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqp3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqp3rk_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            kmax: *const MKL_INT,
            abstol: *const f32,
            reltol: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
            k: *mut MKL_INT,
            maxc2nrmk: *mut f32,
            relmaxc2nrmk: *mut f32,
            jpiv: *mut MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqpf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqr2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqr2p_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgeqrfp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgerfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgerfsx_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            r: *const f32,
            c: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgerq2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgerqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesc2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            rhs: *mut f32,
            ipiv: *const MKL_INT,
            jpiv: *const MKL_INT,
            scale: *mut f32,
        ),
    >,
    pub sgesdd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            s: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesvd_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobvt: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            s: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesvj_: Option<
        unsafe extern "C" fn(
            joba: *const c_char,
            jobu: *const c_char,
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            sva: *mut f32,
            mv: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            af: *mut f32,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f32,
            c: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgesvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            af: *mut f32,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f32,
            c: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetc2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            jpiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_sgetrfnpi_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nfact: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetri_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgetrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggbak_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            side: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            lscale: *const f32,
            rscale: *const f32,
            m: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggbal_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            lscale: *mut f32,
            rscale: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgges_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_S_SELECT_FUNCTION_3,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            vsl: *mut f32,
            ldvsl: *const MKL_INT,
            vsr: *mut f32,
            ldvsr: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggesx_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_S_SELECT_FUNCTION_3,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            vsl: *mut f32,
            ldvsl: *const MKL_INT,
            vsr: *mut f32,
            ldvsr: *const MKL_INT,
            rconde: *mut f32,
            rcondv: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggev_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggevx_: Option<
        unsafe extern "C" fn(
            balanc: *const c_char,
            jobvl: *const c_char,
            jobvr: *const c_char,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            lscale: *mut f32,
            rscale: *mut f32,
            abnrm: *mut f32,
            bbnrm: *mut f32,
            rconde: *mut f32,
            rcondv: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggglm_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            m: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            d: *mut f32,
            x: *mut f32,
            y: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgghrd_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgglse_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            c: *mut f32,
            d: *mut f32,
            x: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggqrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            m: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            taua: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            taub: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggrqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            taua: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            taub: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggsvd_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alpha: *mut f32,
            beta: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sggsvp_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            tola: *const f32,
            tolb: *const f32,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            u: *mut f32,
            ldu: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            iwork: *mut MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sgsvj0_: Option<
        unsafe extern "C" fn(
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            sva: *mut f32,
            mv: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            eps: *const f32,
            sfmin: *const f32,
            tol: *const f32,
            nsweep: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgsvj1_: Option<
        unsafe extern "C" fn(
            jobv: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            sva: *mut f32,
            mv: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            eps: *const f32,
            sfmin: *const f32,
            tol: *const f32,
            nsweep: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgtcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            dl: *const f32,
            d: *const f32,
            du: *const f32,
            du2: *const f32,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgtrfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f32,
            d: *const f32,
            du: *const f32,
            dlf: *const f32,
            df: *const f32,
            duf: *const f32,
            du2: *const f32,
            ipiv: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgtsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *mut f32,
            d: *mut f32,
            du: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgtsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f32,
            d: *const f32,
            du: *const f32,
            dlf: *mut f32,
            df: *mut f32,
            duf: *mut f32,
            du2: *mut f32,
            ipiv: *mut MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgttrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dl: *mut f32,
            d: *mut f32,
            du: *mut f32,
            du2: *mut f32,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgttrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f32,
            d: *const f32,
            du: *const f32,
            du2: *const f32,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sgtts2_: Option<
        unsafe extern "C" fn(
            itrans: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f32,
            d: *const f32,
            du: *const f32,
            du2: *const f32,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub shgeqz_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f32,
            ldh: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub shsein_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            eigsrc: *const c_char,
            initv: *const c_char,
            select: *mut MKL_INT,
            n: *const MKL_INT,
            h: *const f32,
            ldh: *const MKL_INT,
            wr: *mut f32,
            wi: *const f32,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f32,
            ifaill: *mut MKL_INT,
            ifailr: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub shseqr_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f32,
            ldh: *const MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sisnan_: Option<unsafe extern "C" fn(sin: *const f32) -> MKL_INT>,
    pub slabad_: Option<unsafe extern "C" fn(smallx: *mut f32, large: *mut f32)>,
    pub slabrd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tauq: *mut f32,
            taup: *mut f32,
            x: *mut f32,
            ldx: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
        ),
    >,
    pub slacn2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            v: *mut f32,
            x: *mut f32,
            isgn: *mut MKL_INT,
            est: *mut f32,
            kase: *mut MKL_INT,
            isave: *mut MKL_INT,
        ),
    >,
    pub slacon_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            v: *mut f32,
            x: *mut f32,
            isgn: *mut MKL_INT,
            est: *mut f32,
            kase: *mut MKL_INT,
        ),
    >,
    pub slacpy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub sladiv_: Option<
        unsafe extern "C" fn(
            a: *const f32,
            b: *const f32,
            c: *const f32,
            d: *const f32,
            p: *mut f32,
            q: *mut f32,
        ),
    >,
    pub slae2_: Option<
        unsafe extern "C" fn(
            a: *const f32,
            b: *const f32,
            c: *const f32,
            rt1: *mut f32,
            rt2: *mut f32,
        ),
    >,
    pub slaebz_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            nitmax: *const MKL_INT,
            n: *const MKL_INT,
            mmax: *const MKL_INT,
            minp: *const MKL_INT,
            nbmin: *const MKL_INT,
            abstol: *const f32,
            reltol: *const f32,
            pivmin: *const f32,
            d: *const f32,
            e: *const f32,
            e2: *const f32,
            nval: *mut MKL_INT,
            ab: *mut f32,
            c: *mut f32,
            mout: *mut MKL_INT,
            nab: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed0_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            qsiz: *const MKL_INT,
            n: *const MKL_INT,
            d: *mut f32,
            e: *const f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            qstore: *mut f32,
            ldqs: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            indxq: *mut MKL_INT,
            rho: *const f32,
            cutpnt: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed2_: Option<
        unsafe extern "C" fn(
            k: *mut MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            d: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            indxq: *mut MKL_INT,
            rho: *mut f32,
            z: *const f32,
            dlamda: *mut f32,
            w: *mut f32,
            q2: *mut f32,
            indx: *mut MKL_INT,
            indxc: *mut MKL_INT,
            indxp: *mut MKL_INT,
            coltyp: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed3_: Option<
        unsafe extern "C" fn(
            k: *const MKL_INT,
            n: *const MKL_INT,
            n1: *const MKL_INT,
            d: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            rho: *const f32,
            dlamda: *mut f32,
            q2: *const f32,
            indx: *const MKL_INT,
            ctot: *const MKL_INT,
            w: *mut f32,
            s: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed4_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            i: *const MKL_INT,
            d: *const f32,
            z: *const f32,
            delta: *mut f32,
            rho: *const f32,
            dlam: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed5_: Option<
        unsafe extern "C" fn(
            i: *const MKL_INT,
            d: *const f32,
            z: *const f32,
            delta: *mut f32,
            rho: *const f32,
            dlam: *mut f32,
        ),
    >,
    pub slaed6_: Option<
        unsafe extern "C" fn(
            kniter: *const MKL_INT,
            orgati: *const MKL_INT,
            rho: *const f32,
            d: *const f32,
            z: *const f32,
            finit: *const f32,
            tau: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed7_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            n: *const MKL_INT,
            qsiz: *const MKL_INT,
            tlvls: *const MKL_INT,
            curlvl: *const MKL_INT,
            curpbm: *const MKL_INT,
            d: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            indxq: *mut MKL_INT,
            rho: *const f32,
            cutpnt: *const MKL_INT,
            qstore: *mut f32,
            qptr: *mut MKL_INT,
            prmptr: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            givnum: *const f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed8_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            k: *mut MKL_INT,
            n: *const MKL_INT,
            qsiz: *const MKL_INT,
            d: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            indxq: *const MKL_INT,
            rho: *mut f32,
            cutpnt: *const MKL_INT,
            z: *const f32,
            dlamda: *mut f32,
            q2: *mut f32,
            ldq2: *const MKL_INT,
            w: *mut f32,
            perm: *mut MKL_INT,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            givnum: *mut f32,
            indxp: *mut MKL_INT,
            indx: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaed9_: Option<
        unsafe extern "C" fn(
            k: *const MKL_INT,
            kstart: *const MKL_INT,
            kstop: *const MKL_INT,
            n: *const MKL_INT,
            d: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            rho: *const f32,
            dlamda: *const f32,
            w: *const f32,
            s: *mut f32,
            lds: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaeda_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            tlvls: *const MKL_INT,
            curlvl: *const MKL_INT,
            curpbm: *const MKL_INT,
            prmptr: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            givnum: *const f32,
            q: *const f32,
            qptr: *const MKL_INT,
            z: *mut f32,
            ztemp: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slaein_: Option<
        unsafe extern "C" fn(
            rightv: *const MKL_INT,
            noinit: *const MKL_INT,
            n: *const MKL_INT,
            h: *const f32,
            ldh: *const MKL_INT,
            wr: *const f32,
            wi: *const f32,
            vr: *mut f32,
            vi: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            eps3: *const f32,
            smlnum: *const f32,
            bignum: *const f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slaev2_: Option<
        unsafe extern "C" fn(
            a: *const f32,
            b: *const f32,
            c: *const f32,
            rt1: *mut f32,
            rt2: *mut f32,
            cs1: *mut f32,
            sn1: *mut f32,
        ),
    >,
    pub slaexc_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            j1: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slag2d_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            sa: *const f32,
            ldsa: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slag2_: Option<
        unsafe extern "C" fn(
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            safmin: *const f32,
            scale1: *mut f32,
            scale2: *mut f32,
            wr1: *mut f32,
            wr2: *mut f32,
            wi: *mut f32,
        ),
    >,
    pub slags2_: Option<
        unsafe extern "C" fn(
            upper: *const MKL_INT,
            a1: *const f32,
            a2: *const f32,
            a3: *const f32,
            b1: *const f32,
            b2: *const f32,
            b3: *const f32,
            csu: *mut f32,
            snu: *mut f32,
            csv: *mut f32,
            snv: *mut f32,
            csq: *mut f32,
            snq: *mut f32,
        ),
    >,
    pub slagtf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f32,
            lambda: *const f32,
            b: *mut f32,
            c: *mut f32,
            tol: *const f32,
            d: *mut f32,
            in_: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slagtm_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            alpha: *const f32,
            dl: *const f32,
            d: *const f32,
            du: *const f32,
            x: *const f32,
            ldx: *const MKL_INT,
            beta: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub slagts_: Option<
        unsafe extern "C" fn(
            job: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            b: *const f32,
            c: *const f32,
            d: *const f32,
            in_: *const MKL_INT,
            y: *mut f32,
            tol: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slagv2_: Option<
        unsafe extern "C" fn(
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            csl: *mut f32,
            snl: *mut f32,
            csr: *mut f32,
            snr: *mut f32,
        ),
    >,
    pub slahqr_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f32,
            ldh: *const MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slahr2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            t: *mut f32,
            ldt: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
        ),
    >,
    pub slahrd_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            t: *mut f32,
            ldt: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
        ),
    >,
    pub slaic1_: Option<
        unsafe extern "C" fn(
            job: *const MKL_INT,
            j: *const MKL_INT,
            x: *const f32,
            sest: *const f32,
            w: *const f32,
            gamma: *const f32,
            sestpr: *mut f32,
            s: *mut f32,
            c: *mut f32,
        ),
    >,
    pub slaisnan_: Option<unsafe extern "C" fn(sin1: *const f32, sin2: *const f32) -> MKL_INT>,
    pub slaln2_: Option<
        unsafe extern "C" fn(
            ltrans: *const MKL_INT,
            na: *const MKL_INT,
            nw: *const MKL_INT,
            smin: *const f32,
            ca: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            d1: *const f32,
            d2: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            wr: *const f32,
            wi: *const f32,
            x: *mut f32,
            ldx: *const MKL_INT,
            scale: *mut f32,
            xnorm: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slals0_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            nrhs: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            bx: *mut f32,
            ldbx: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            ldgcol: *const MKL_INT,
            givnum: *const f32,
            ldgnum: *const MKL_INT,
            poles: *const f32,
            difl: *const f32,
            difr: *const f32,
            z: *const f32,
            k: *const MKL_INT,
            c: *const f32,
            s: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slalsa_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            bx: *mut f32,
            ldbx: *const MKL_INT,
            u: *const f32,
            ldu: *const MKL_INT,
            vt: *const f32,
            k: *const MKL_INT,
            difl: *const f32,
            difr: *const f32,
            z: *const f32,
            poles: *const f32,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            ldgcol: *const MKL_INT,
            perm: *const MKL_INT,
            givnum: *const f32,
            c: *const f32,
            s: *const f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slalsd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            rcond: *const f32,
            rank: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slamch_: Option<unsafe extern "C" fn(cmach: *const c_char) -> f32>,
    pub slamc1_: Option<
        unsafe extern "C" fn(
            beta: *mut MKL_INT,
            t: *mut MKL_INT,
            rnd: *mut MKL_INT,
            ieee1: *mut MKL_INT,
        ),
    >,
    pub slamc2_: Option<
        unsafe extern "C" fn(
            beta: *mut MKL_INT,
            t: *mut MKL_INT,
            rnd: *mut MKL_INT,
            eps: *mut f32,
            emin: *mut MKL_INT,
            rmin: *mut f32,
            emax: *mut MKL_INT,
            rmax: *mut f32,
        ),
    >,
    pub slamc3_: Option<unsafe extern "C" fn(a: *const f32, b: *const f32) -> f32>,
    pub slamc4_:
        Option<unsafe extern "C" fn(emin: *mut MKL_INT, start: *const f32, base: *const MKL_INT)>,
    pub slamc5_: Option<
        unsafe extern "C" fn(
            beta: *const MKL_INT,
            p: *const MKL_INT,
            emin: *const MKL_INT,
            ieee: *const MKL_INT,
            emax: *mut MKL_INT,
            rmax: *mut f32,
        ),
    >,
    pub slamrg_: Option<
        unsafe extern "C" fn(
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            a: *const f32,
            strd1: *const MKL_INT,
            strd2: *const MKL_INT,
            index: *mut MKL_INT,
        ),
    >,
    pub slaneg_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            lld: *const f32,
            sigma: *const f32,
            pivmin: *const f32,
            r: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub slangb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub slange_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub slangt_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            dl: *const f32,
            d: *const f32,
            du: *const f32,
        ) -> f32,
    >,
    pub slanhs_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub slansb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub slansf_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            work: *mut f32,
        ) -> f32,
    >,
    pub slansp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            work: *mut f32,
        ) -> f32,
    >,
    pub slanst_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            d: *const f32,
            e: *const f32,
        ) -> f32,
    >,
    pub slansy_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub slantb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub slantp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            work: *mut f32,
        ) -> f32,
    >,
    pub slantr_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub slanv2_: Option<
        unsafe extern "C" fn(
            a: *mut f32,
            b: *mut f32,
            c: *mut f32,
            d: *mut f32,
            rt1r: *mut f32,
            rt1i: *mut f32,
            rt2r: *mut f32,
            rt2i: *mut f32,
            cs: *mut f32,
            sn: *mut f32,
        ),
    >,
    pub slapll_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            ssmin: *mut f32,
        ),
    >,
    pub slapmt_: Option<
        unsafe extern "C" fn(
            forwrd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            k: *mut MKL_INT,
        ),
    >,
    pub slapy2_: Option<unsafe extern "C" fn(x: *const f32, y: *const f32) -> f32>,
    pub slapy3_: Option<unsafe extern "C" fn(x: *const f32, y: *const f32, z: *const f32) -> f32>,
    pub slaqgb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            r: *const f32,
            c: *const f32,
            rowcnd: *const f32,
            colcnd: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub slaqge_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            r: *const f32,
            c: *const f32,
            rowcnd: *const f32,
            colcnd: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub slaqp2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            offset: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut f32,
            vn1: *mut f32,
            vn2: *mut f32,
            work: *mut f32,
        ),
    >,
    pub slaqps_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            offset: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut f32,
            vn1: *mut f32,
            vn2: *mut f32,
            auxv: *mut f32,
            f: *mut f32,
            ldf: *const MKL_INT,
        ),
    >,
    pub slaqr0_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f32,
            ldh: *const MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaqr1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            h: *const f32,
            ldh: *const MKL_INT,
            sr1: *const f32,
            si1: *mut f32,
            sr2: *mut f32,
            si2: *mut f32,
            v: *mut f32,
        ),
    >,
    pub slaqr2_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nw: *const MKL_INT,
            h: *mut f32,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            sr: *mut f32,
            si: *mut f32,
            v: *mut f32,
            ldv: *const MKL_INT,
            nh: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut f32,
            ldwv: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
        ),
    >,
    pub slaqr3_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nw: *const MKL_INT,
            h: *mut f32,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            sr: *mut f32,
            si: *mut f32,
            v: *mut f32,
            ldv: *const MKL_INT,
            nh: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut f32,
            ldwv: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
        ),
    >,
    pub slaqr4_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut f32,
            ldh: *const MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaqr5_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            kacc22: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nshfts: *const MKL_INT,
            sr: *mut f32,
            si: *mut f32,
            h: *mut f32,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            u: *mut f32,
            ldu: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut f32,
            ldwv: *const MKL_INT,
            nh: *const MKL_INT,
            wh: *mut f32,
            ldwh: *const MKL_INT,
        ),
    >,
    pub slaqsb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            s: *const f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub slaqsp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            s: *const f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub slaqsy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            s: *const f32,
            scond: *const f32,
            amax: *const f32,
            equed: *mut c_char,
        ),
    >,
    pub slaqtr_: Option<
        unsafe extern "C" fn(
            ltran: *const MKL_INT,
            lreal: *const MKL_INT,
            n: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            b: *const f32,
            w: *const f32,
            scale: *mut f32,
            x: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slaqz0_: Option<
        unsafe extern "C" fn(
            wants: *const MKL_INT,
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            rec: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaqz1_: Option<
        unsafe extern "C" fn(
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            sr1: *const f32,
            sr2: *const f32,
            si: *const f32,
            beta1: *const f32,
            beta2: *const f32,
            v: *mut f32,
        ),
    >,
    pub slaqz2_: Option<
        unsafe extern "C" fn(
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            k: *const MKL_INT,
            istartm: *const MKL_INT,
            istopm: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            nq: *const MKL_INT,
            qstart: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            nz: *const MKL_INT,
            zstart: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
        ),
    >,
    pub slaqz3_: Option<
        unsafe extern "C" fn(
            ilschur: *const MKL_INT,
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            nw: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            qc: *mut f32,
            ldqc: *const MKL_INT,
            zc: *mut f32,
            ldzc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            rec: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slaqz4_: Option<
        unsafe extern "C" fn(
            ilschur: *const MKL_INT,
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            nshifts: *const MKL_INT,
            nb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            qc: *mut f32,
            ldqc: *const MKL_INT,
            zc: *mut f32,
            ldzc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slar1v_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            b1: *const MKL_INT,
            bn: *const MKL_INT,
            lambda: *const f32,
            d: *const f32,
            l: *const f32,
            ld: *const f32,
            lld: *const f32,
            pivmin: *const f32,
            gaptol: *const f32,
            z: *mut f32,
            wantnc: *const MKL_INT,
            negcnt: *mut MKL_INT,
            ztz: *mut f32,
            mingma: *mut f32,
            r: *mut MKL_INT,
            isuppz: *mut MKL_INT,
            nrminv: *mut f32,
            resid: *mut f32,
            rqcorr: *mut f32,
            work: *mut f32,
        ),
    >,
    pub slar2v_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            y: *mut f32,
            z: *mut f32,
            incx: *const MKL_INT,
            c: *const f32,
            s: *const f32,
            incc: *const MKL_INT,
        ),
    >,
    pub slarfb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *const f32,
            ldv: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            ldwork: *const MKL_INT,
        ),
    >,
    pub slarf_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f32,
            incv: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
        ),
    >,
    pub slarf1f_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f32,
            incv: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
        ),
    >,
    pub slarf1l_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f32,
            incv: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
        ),
    >,
    pub slarfg_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut f32,
            x: *mut f32,
            incx: *const MKL_INT,
            tau: *mut f32,
        ),
    >,
    pub slarfgp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut f32,
            x: *mut f32,
            incx: *const MKL_INT,
            tau: *mut f32,
        ),
    >,
    pub slarfp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut f32,
            x: *mut f32,
            incx: *const MKL_INT,
            tau: *mut f32,
        ),
    >,
    pub slarft_: Option<
        unsafe extern "C" fn(
            direct: *const c_char,
            storev: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *const f32,
            ldv: *const MKL_INT,
            tau: *const f32,
            t: *mut f32,
            ldt: *const MKL_INT,
        ),
    >,
    pub slarfx_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f32,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
        ),
    >,
    pub slargv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            c: *mut f32,
            incc: *const MKL_INT,
        ),
    >,
    pub slarnv_: Option<
        unsafe extern "C" fn(
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            n: *const MKL_INT,
            x: *mut f32,
        ),
    >,
    pub slarra_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            e: *mut f32,
            e2: *mut f32,
            spltol: *const f32,
            tnrm: *const f32,
            nsplit: *mut MKL_INT,
            isplit: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slarrb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            lld: *const f32,
            ifirst: *const MKL_INT,
            ilast: *const MKL_INT,
            rtol1: *const f32,
            rtol2: *const f32,
            offset: *const MKL_INT,
            w: *mut f32,
            wgap: *mut f32,
            werr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            pivmin: *const f32,
            spdiam: *const f32,
            twist: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slarrc_: Option<
        unsafe extern "C" fn(
            jobt: *const c_char,
            n: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            d: *const f32,
            e: *const f32,
            pivmin: *const f32,
            eigcnt: *mut MKL_INT,
            lcnt: *mut MKL_INT,
            rcnt: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slarrd_: Option<
        unsafe extern "C" fn(
            range: *const c_char,
            order: *const c_char,
            n: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            gers: *const f32,
            reltol: *const f32,
            d: *const f32,
            e: *const f32,
            e2: *const f32,
            pivmin: *const f32,
            nsplit: *const MKL_INT,
            isplit: *const MKL_INT,
            m: *mut MKL_INT,
            w: *mut f32,
            werr: *mut f32,
            wl: *mut f32,
            wu: *mut f32,
            iblock: *mut MKL_INT,
            indexw: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slarre_: Option<
        unsafe extern "C" fn(
            range: *const c_char,
            n: *const MKL_INT,
            vl: *mut f32,
            vu: *mut f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            e2: *mut f32,
            rtol1: *const f32,
            rtol2: *const f32,
            spltol: *const f32,
            nsplit: *mut MKL_INT,
            isplit: *mut MKL_INT,
            m: *mut MKL_INT,
            w: *mut f32,
            werr: *mut f32,
            wgap: *mut f32,
            iblock: *mut MKL_INT,
            indexw: *mut MKL_INT,
            gers: *mut f32,
            pivmin: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slarrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            l: *const f32,
            ld: *const f32,
            clstrt: *const MKL_INT,
            clend: *const MKL_INT,
            w: *const f32,
            wgap: *mut f32,
            werr: *const f32,
            spdiam: *const f32,
            clgapl: *const f32,
            clgapr: *mut f32,
            pivmin: *const f32,
            sigma: *mut f32,
            dplus: *mut f32,
            lplus: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slarrj_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            e2: *const f32,
            ifirst: *const MKL_INT,
            ilast: *const MKL_INT,
            rtol: *const f32,
            offset: *const MKL_INT,
            w: *mut f32,
            werr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            pivmin: *const f32,
            spdiam: *const f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slarrk_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            iw: *const MKL_INT,
            gl: *const f32,
            gu: *const f32,
            d: *const f32,
            e2: *const f32,
            pivmin: *const f32,
            reltol: *const f32,
            w: *mut f32,
            werr: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slarrr_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, d: *const f32, e: *mut f32, info: *mut MKL_INT),
    >,
    pub slarrv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            d: *mut f32,
            l: *mut f32,
            pivmin: *mut f32,
            isplit: *const MKL_INT,
            m: *const MKL_INT,
            dol: *const MKL_INT,
            dou: *const MKL_INT,
            minrgp: *const f32,
            rtol1: *const f32,
            rtol2: *const f32,
            w: *mut f32,
            werr: *mut f32,
            wgap: *mut f32,
            iblock: *const MKL_INT,
            indexw: *const MKL_INT,
            gers: *const f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slarscl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f32,
            x: *mut f32,
            ldx: *const MKL_INT,
        ),
    >,
    pub slartg_: Option<
        unsafe extern "C" fn(f: *const f32, g: *const f32, cs: *mut f32, sn: *mut f32, r: *mut f32),
    >,
    pub slartv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const f32,
            incc: *const MKL_INT,
        ),
    >,
    pub slaruv_: Option<unsafe extern "C" fn(iseed: *mut MKL_INT, n: *const MKL_INT, x: *mut f32)>,
    pub slarzb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            v: *const f32,
            ldv: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            ldwork: *const MKL_INT,
        ),
    >,
    pub slarz_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            v: *const f32,
            incv: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
        ),
    >,
    pub slarzt_: Option<
        unsafe extern "C" fn(
            direct: *const c_char,
            storev: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            tau: *const f32,
            t: *mut f32,
            ldt: *const MKL_INT,
        ),
    >,
    pub slas2_: Option<
        unsafe extern "C" fn(
            f: *const f32,
            g: *const f32,
            h: *const f32,
            ssmin: *mut f32,
            ssmax: *mut f32,
        ),
    >,
    pub slascl_: Option<
        unsafe extern "C" fn(
            type_: *const c_char,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            cfrom: *const f32,
            cto: *const f32,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slascl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f32,
            x: *mut f32,
            ldx: *const MKL_INT,
        ),
    >,
    pub slasd0_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            sqre: *const MKL_INT,
            d: *mut f32,
            e: *const f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            smlsiz: *const MKL_INT,
            iwork: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasd1_: Option<
        unsafe extern "C" fn(
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            d: *mut f32,
            alpha: *mut f32,
            beta: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            idxq: *mut MKL_INT,
            iwork: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasd2_: Option<
        unsafe extern "C" fn(
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            k: *mut MKL_INT,
            d: *mut f32,
            z: *mut f32,
            alpha: *const f32,
            beta: *const f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            dsigma: *mut f32,
            u2: *mut f32,
            ldu2: *const MKL_INT,
            vt2: *mut f32,
            ldvt2: *const MKL_INT,
            idxp: *mut MKL_INT,
            idx: *mut MKL_INT,
            idxc: *mut MKL_INT,
            idxq: *mut MKL_INT,
            coltyp: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slasd3_: Option<
        unsafe extern "C" fn(
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            k: *const MKL_INT,
            d: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            dsigma: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            u2: *const f32,
            ldu2: *const MKL_INT,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            vt2: *mut f32,
            ldvt2: *const MKL_INT,
            idxc: *const MKL_INT,
            ctot: *const MKL_INT,
            z: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasd4_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            i: *const MKL_INT,
            d: *const f32,
            z: *const f32,
            delta: *mut f32,
            rho: *const f32,
            sigma: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasd5_: Option<
        unsafe extern "C" fn(
            i: *const MKL_INT,
            d: *const f32,
            z: *const f32,
            delta: *mut f32,
            rho: *const f32,
            dsigma: *mut f32,
            work: *mut f32,
        ),
    >,
    pub slasd6_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            d: *mut f32,
            vf: *mut f32,
            vl: *mut f32,
            alpha: *mut f32,
            beta: *mut f32,
            idxq: *mut MKL_INT,
            perm: *mut MKL_INT,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            ldgcol: *const MKL_INT,
            givnum: *mut f32,
            ldgnum: *const MKL_INT,
            poles: *mut f32,
            difl: *mut f32,
            difr: *mut f32,
            z: *mut f32,
            k: *mut MKL_INT,
            c: *mut f32,
            s: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slasd7_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            k: *mut MKL_INT,
            d: *mut f32,
            z: *mut f32,
            zw: *mut f32,
            vf: *mut f32,
            vfw: *mut f32,
            vl: *mut f32,
            vlw: *mut f32,
            alpha: *const f32,
            beta: *const f32,
            dsigma: *mut f32,
            idx: *mut MKL_INT,
            idxp: *mut MKL_INT,
            idxq: *const MKL_INT,
            perm: *mut MKL_INT,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            ldgcol: *const MKL_INT,
            givnum: *mut f32,
            ldgnum: *const MKL_INT,
            c: *mut f32,
            s: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasd8_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            k: *const MKL_INT,
            d: *mut f32,
            z: *mut f32,
            vf: *mut f32,
            vl: *mut f32,
            difl: *mut f32,
            difr: *mut f32,
            lddifr: *const MKL_INT,
            dsigma: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasda_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            sqre: *const MKL_INT,
            d: *mut f32,
            e: *const f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            vt: *mut f32,
            k: *mut MKL_INT,
            difl: *mut f32,
            difr: *mut f32,
            z: *mut f32,
            poles: *mut f32,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            ldgcol: *const MKL_INT,
            perm: *mut MKL_INT,
            givnum: *mut f32,
            c: *mut f32,
            s: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slasdq_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            sqre: *const MKL_INT,
            n: *const MKL_INT,
            ncvt: *const MKL_INT,
            nru: *const MKL_INT,
            ncc: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vt: *mut f32,
            ldvt: *const MKL_INT,
            u: *mut f32,
            ldu: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasdt_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            lvl: *mut MKL_INT,
            nd: *mut MKL_INT,
            inode: *mut MKL_INT,
            ndiml: *mut MKL_INT,
            ndimr: *mut MKL_INT,
            msub: *const MKL_INT,
        ),
    >,
    pub slaset_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            beta: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
        ),
    >,
    pub slasq1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasq2_: Option<unsafe extern "C" fn(n: *const MKL_INT, z: *mut f32, info: *mut MKL_INT)>,
    pub slasq3_: Option<
        unsafe extern "C" fn(
            i0: *const MKL_INT,
            n0: *const MKL_INT,
            z: *const f32,
            pp: *mut MKL_INT,
            dmin: *mut f32,
            sigma: *mut f32,
            desig: *mut f32,
            qmax: *const f32,
            nfail: *mut MKL_INT,
            iter: *mut MKL_INT,
            ndiv: *mut MKL_INT,
            ieee: *const MKL_INT,
            ttype: *mut MKL_INT,
            dmin1: *mut f32,
            dmin2: *mut f32,
            dn: *mut f32,
            dn1: *mut f32,
            dn2: *mut f32,
            g: *mut f32,
            tau: *mut f32,
        ),
    >,
    pub slasq4_: Option<
        unsafe extern "C" fn(
            i0: *const MKL_INT,
            n0: *const MKL_INT,
            z: *const f32,
            pp: *const MKL_INT,
            n0in: *mut MKL_INT,
            dmin: *const f32,
            dmin1: *const f32,
            dmin2: *const f32,
            dn: *const f32,
            dn1: *const f32,
            dn2: *const f32,
            tau: *mut f32,
            ttype: *mut MKL_INT,
            g: *mut f32,
        ),
    >,
    pub slasq5_: Option<
        unsafe extern "C" fn(
            i0: *const MKL_INT,
            n0: *const MKL_INT,
            z: *const f32,
            pp: *const MKL_INT,
            tau: *const f32,
            sigma: *const f32,
            dmin: *mut f32,
            dmin1: *mut f32,
            dmin2: *mut f32,
            dn: *mut f32,
            dnm1: *mut f32,
            dnm2: *mut f32,
            ieee: *const MKL_INT,
            eps: *const f32,
        ),
    >,
    pub slasq6_: Option<
        unsafe extern "C" fn(
            i0: *const MKL_INT,
            n0: *const MKL_INT,
            z: *const f32,
            pp: *const MKL_INT,
            dmin: *mut f32,
            dmin1: *mut f32,
            dmin2: *mut f32,
            dn: *mut f32,
            dnm1: *mut f32,
            dnm2: *mut f32,
        ),
    >,
    pub slasr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            pivot: *const c_char,
            direct: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            c: *const f32,
            s: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
        ),
    >,
    pub slasrt_: Option<
        unsafe extern "C" fn(id: *const c_char, n: *const MKL_INT, d: *mut f32, info: *mut MKL_INT),
    >,
    pub slassq_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            scale: *mut f32,
            sumsq: *mut f32,
        ),
    >,
    pub slasv2_: Option<
        unsafe extern "C" fn(
            f: *const f32,
            g: *const f32,
            h: *const f32,
            ssmin: *mut f32,
            ssmax: *mut f32,
            snr: *mut f32,
            csr: *mut f32,
            snl: *mut f32,
            csl: *mut f32,
        ),
    >,
    pub slaswp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            k1: *const MKL_INT,
            k2: *const MKL_INT,
            ipiv: *const MKL_INT,
            incx: *const MKL_INT,
        ),
    >,
    pub slasy2_: Option<
        unsafe extern "C" fn(
            ltranl: *const MKL_INT,
            ltranr: *const MKL_INT,
            isgn: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            tl: *const f32,
            ldtl: *const MKL_INT,
            tr: *const f32,
            ldtr: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            scale: *mut f32,
            x: *mut f32,
            ldx: *const MKL_INT,
            xnorm: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slasyf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut f32,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slatbs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            x: *mut f32,
            scale: *mut f32,
            cnorm: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slatdf_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            n: *const MKL_INT,
            z: *const f32,
            ldz: *const MKL_INT,
            rhs: *mut f32,
            rdsum: *mut f32,
            rdscal: *mut f32,
            ipiv: *const MKL_INT,
            jpiv: *const MKL_INT,
        ),
    >,
    pub slatps_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            x: *mut f32,
            scale: *mut f32,
            cnorm: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slatrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            e: *mut f32,
            tau: *mut f32,
            w: *mut f32,
            ldw: *const MKL_INT,
        ),
    >,
    pub slatrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            x: *mut f32,
            scale: *mut f32,
            cnorm: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub slatrs3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            scale: *mut f32,
            cnorm: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slatrz_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
        ),
    >,
    pub slatzm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const f32,
            incv: *const MKL_INT,
            tau: *const f32,
            c1: *mut f32,
            c2: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
        ),
    >,
    pub slauu2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slauum_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sopgtr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            tau: *const f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sopmtr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ap: *const f32,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sorg2l_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sorg2r_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sorgbr_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorghr_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorgl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sorglq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorgql_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorgqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorgr2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sorgrq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorgtr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *const f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorm2l_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sorm2r_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sormbr_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sormhr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sorml2_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sormlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sormql_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sormqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sormr2_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sormr3_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sormrq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sormrz_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sormtr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            tau: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spbcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spbequ_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spbrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            afb: *const f32,
            ldafb: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spbstf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spbsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spbsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            afb: *mut f32,
            ldafb: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spbtf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spbtrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spbtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spftrf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spftri_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spftrs_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spocon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spoequb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spoequ_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sporfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sporfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            s: *mut f32,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sposv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sposvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            af: *mut f32,
            ldaf: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sposvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            af: *mut f32,
            ldaf: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spotf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spotrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spotri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spotrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sppcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sppequ_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f32,
            afp: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sppsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sppsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut f32,
            afp: *mut f32,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub spstf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            piv: *mut MKL_INT,
            rank: *mut MKL_INT,
            tol: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spstrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            piv: *mut MKL_INT,
            rank: *mut MKL_INT,
            tol: *const f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sptcon_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            e: *const f32,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spteqr_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sptrfs_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f32,
            e: *const f32,
            df: *const f32,
            ef: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sptsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sptsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f32,
            e: *const f32,
            df: *mut f32,
            ef: *mut f32,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub spttrf_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, d: *mut f32, e: *mut f32, info: *mut MKL_INT),
    >,
    pub spttrs_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f32,
            e: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sptts2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f32,
            e: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub srscl_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, sa: *const f32, sx: *mut f32, incx: *const MKL_INT),
    >,
    pub ssbevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbgst_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            bb: *const f32,
            ldbb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbgvd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            bb: *mut f32,
            ldbb: *const MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbgv_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            bb: *mut f32,
            ldbb: *const MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbgvx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            bb: *mut f32,
            ldbb: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssbtrd_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut f32,
            ldab: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssfrk_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
        ),
    >,
    pub sspcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sspevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sspev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sspevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sspgst_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            bp: *const f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sspgvd_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            bp: *mut f32,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sspgv_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            bp: *mut f32,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sspgvx_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            bp: *mut f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f32,
            afp: *const f32,
            ipiv: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sspsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut f32,
            ipiv: *mut MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sspsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f32,
            afp: *mut f32,
            ipiv: *mut MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssptrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            d: *mut f32,
            e: *mut f32,
            tau: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            ipiv: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f32,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sstebz_: Option<
        unsafe extern "C" fn(
            range: *const c_char,
            order: *const c_char,
            n: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            d: *const f32,
            e: *const f32,
            m: *mut MKL_INT,
            nsplit: *mut MKL_INT,
            w: *mut f32,
            iblock: *mut MKL_INT,
            isplit: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sstedc_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sstegr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sstein_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f32,
            e: *const f32,
            m: *const MKL_INT,
            w: *const f32,
            iblock: *const MKL_INT,
            isplit: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sstemr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            nzc: *const MKL_INT,
            isuppz: *mut MKL_INT,
            tryrac: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssteqr_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssterf_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, d: *mut f32, e: *mut f32, info: *mut MKL_INT),
    >,
    pub sstevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sstev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sstevr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sstevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssycon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyequb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            s: *mut f32,
            scond: *mut f32,
            amax: *mut f32,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            w: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            w: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyevr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssygs2_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssygst_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssygvd_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            w: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssygv_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            w: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssygvx_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            vl: *const f32,
            vu: *const f32,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f32,
            m: *mut MKL_INT,
            w: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyrfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            s: *mut f32,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssysv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssysvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *mut f32,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssysvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            af: *mut f32,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            s: *mut f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            x: *mut f32,
            ldx: *const MKL_INT,
            rcond: *mut f32,
            rpvgrw: *mut f32,
            berr: *mut f32,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            nparams: *const MKL_INT,
            params: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytd2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tau: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub ssytrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stbcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stbrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *const f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stbtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stfsm_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub stftri_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub stfttp_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            arf: *const f32,
            ap: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub stfttr_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            arf: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stgevc_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            s: *const f32,
            lds: *const MKL_INT,
            p: *const f32,
            ldp: *const MKL_INT,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub stgex2_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            j1: *const MKL_INT,
            n1: *const MKL_INT,
            n2: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stgexc_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            ifst: *mut MKL_INT,
            ilst: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stgsen_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            select: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            alphar: *mut f32,
            alphai: *mut f32,
            beta: *mut f32,
            q: *mut f32,
            ldq: *const MKL_INT,
            z: *mut f32,
            ldz: *const MKL_INT,
            m: *mut MKL_INT,
            pl: *mut f32,
            pr: *mut f32,
            dif: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stgsja_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            tola: *const f32,
            tolb: *const f32,
            alpha: *mut f32,
            beta: *mut f32,
            u: *mut f32,
            ldu: *const MKL_INT,
            v: *mut f32,
            ldv: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            work: *mut f32,
            ncycle: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stgsna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            vl: *const f32,
            ldvl: *const MKL_INT,
            vr: *const f32,
            ldvr: *const MKL_INT,
            s: *mut f32,
            dif: *mut f32,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stgsy2_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            ijob: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            d: *const f32,
            ldd: *const MKL_INT,
            e: *const f32,
            lde: *const MKL_INT,
            f: *mut f32,
            ldf: *const MKL_INT,
            scale: *mut f32,
            rdsum: *mut f32,
            rdscal: *mut f32,
            iwork: *mut MKL_INT,
            pq: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stgsyl_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            ijob: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            d: *const f32,
            ldd: *const MKL_INT,
            e: *const f32,
            lde: *const MKL_INT,
            f: *mut f32,
            ldf: *const MKL_INT,
            scale: *mut f32,
            dif: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stpcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *const f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub stptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub stpttf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            arf: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub stpttr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            rcond: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strevc_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *mut MKL_INT,
            n: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            vl: *mut f32,
            ldvl: *const MKL_INT,
            vr: *mut f32,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub strexc_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            n: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            ifst: *mut MKL_INT,
            ilst: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub strrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            x: *const f32,
            ldx: *const MKL_INT,
            ferr: *mut f32,
            berr: *mut f32,
            work: *mut f32,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strsen_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compq: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            q: *mut f32,
            ldq: *const MKL_INT,
            wr: *mut f32,
            wi: *mut f32,
            m: *mut MKL_INT,
            s: *mut f32,
            sep: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strsna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            vl: *const f32,
            ldvl: *const MKL_INT,
            vr: *const f32,
            ldvr: *const MKL_INT,
            s: *mut f32,
            sep: *mut f32,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut f32,
            ldwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strsyl_: Option<
        unsafe extern "C" fn(
            trana: *const c_char,
            tranb: *const c_char,
            isgn: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            scale: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub strsyl3_: Option<
        unsafe extern "C" fn(
            trana: *const c_char,
            tranb: *const c_char,
            isgn: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            swork: *mut f32,
            ldswork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strti2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strtri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub strttf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            arf: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub strttp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            ap: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub stzrqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub stzrzf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            tau: *mut f32,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub xerbla_array_: Option<
        unsafe extern "C" fn(
            srname_array: *const c_char,
            srname_len: *const MKL_INT,
            info: *const MKL_INT,
        ),
    >,
    pub zbdsqr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ncvt: *const MKL_INT,
            nru: *const MKL_INT,
            ncc: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vt: *mut MKL_Complex16,
            ldvt: *const MKL_INT,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zcgesv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            work: *mut MKL_Complex16,
            swork: *mut MKL_Complex8,
            rwork: *mut f64,
            iter: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zcposv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            work: *mut MKL_Complex16,
            swork: *mut MKL_Complex8,
            rwork: *mut f64,
            iter: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zdrscl_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            sa: *const f64,
            sx: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub zgbbrd_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ncc: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            pt: *mut MKL_Complex16,
            ldpt: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbequb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            rowcnd: *mut f64,
            colcnd: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbequ_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            rowcnd: *mut f64,
            colcnd: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbrfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex16,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbrfsx_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex16,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *mut MKL_Complex16,
            ldafb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f64,
            c: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbsvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *mut MKL_Complex16,
            ldafb: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f64,
            c: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbtf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbtrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgbtrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgebak_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            side: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            scale: *const f64,
            m: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgebal_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            scale: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgebd2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tauq: *mut MKL_Complex16,
            taup: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgebrd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tauq: *mut MKL_Complex16,
            taup: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgecon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgedmd_: Option<
        unsafe extern "C" fn(
            jobs: *const c_char,
            jobz: *const c_char,
            jobr: *const c_char,
            jobf: *const c_char,
            whtsvd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
            nrnk: *const MKL_INT,
            tol: *const f64,
            k: *mut MKL_INT,
            eigs: *mut MKL_Complex16,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            res: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            w: *mut MKL_Complex16,
            ldw: *const MKL_INT,
            s: *mut MKL_Complex16,
            lds: *const MKL_INT,
            zwork: *mut MKL_Complex16,
            lzwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgedmdq_: Option<
        unsafe extern "C" fn(
            jobs: *const c_char,
            jobz: *const c_char,
            jobr: *const c_char,
            jobq: *const c_char,
            jobt: *const c_char,
            jobf: *const c_char,
            whtsvd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            f: *mut MKL_Complex16,
            ldf: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
            nrnk: *const MKL_INT,
            tol: *const f64,
            k: *mut MKL_INT,
            eigs: *mut MKL_Complex16,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            res: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            s: *mut MKL_Complex16,
            lds: *const MKL_INT,
            zwork: *mut MKL_Complex16,
            lzwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeequb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            rowcnd: *mut f64,
            colcnd: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeequ_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            r: *mut f64,
            c: *mut f64,
            rowcnd: *mut f64,
            colcnd: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgees_: Option<
        unsafe extern "C" fn(
            jobvs: *const c_char,
            sort: *const c_char,
            select: MKL_Z_SELECT_FUNCTION_1,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            sdim: *mut MKL_INT,
            w: *mut MKL_Complex16,
            vs: *mut MKL_Complex16,
            ldvs: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeesx_: Option<
        unsafe extern "C" fn(
            jobvs: *const c_char,
            sort: *const c_char,
            select: MKL_Z_SELECT_FUNCTION_1,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            sdim: *mut MKL_INT,
            w: *mut MKL_Complex16,
            vs: *mut MKL_Complex16,
            ldvs: *const MKL_INT,
            rconde: *mut f64,
            rcondv: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeev_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            w: *mut MKL_Complex16,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeevx_: Option<
        unsafe extern "C" fn(
            balanc: *const c_char,
            jobvl: *const c_char,
            jobvr: *const c_char,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            w: *mut MKL_Complex16,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            scale: *mut f64,
            abnrm: *mut f64,
            rconde: *mut f64,
            rcondv: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgegs_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            vsl: *mut MKL_Complex16,
            ldvsl: *const MKL_INT,
            vsr: *mut MKL_Complex16,
            ldvsr: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgegv_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgehd2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgehrd_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelq2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelsd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            s: *mut f64,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgels_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelst_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelss_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            s: *mut f64,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelsx_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            jpvt: *mut MKL_INT,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgelsy_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            jpvt: *mut MKL_INT,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeql2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqlf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqp3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqp3rk_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            kmax: *const MKL_INT,
            abstol: *const f64,
            reltol: *const f64,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            k: *mut MKL_INT,
            maxc2nrmk: *mut f64,
            relmaxc2nrmk: *mut f64,
            jpiv: *mut MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqpf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqr2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqr2p_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgeqrfp_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgerfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgerfsx_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            r: *const f64,
            c: *const f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgerq2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgerqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesc2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            rhs: *mut MKL_Complex16,
            ipiv: *const MKL_INT,
            jpiv: *const MKL_INT,
            scale: *mut f64,
        ),
    >,
    pub zgesdd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            s: *mut f64,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            vt: *mut MKL_Complex16,
            ldvt: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesvd_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobvt: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            s: *mut f64,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            vt: *mut MKL_Complex16,
            ldvt: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            af: *mut MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f64,
            c: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgesvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            af: *mut MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            r: *mut f64,
            c: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetc2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            jpiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_zgetrfnpi_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nfact: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetri_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgetrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggbak_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            side: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            lscale: *const f64,
            rscale: *const f64,
            m: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggbal_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            lscale: *mut f64,
            rscale: *mut f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgges_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_Z_SELECT_FUNCTION_2,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            vsl: *mut MKL_Complex16,
            ldvsl: *const MKL_INT,
            vsr: *mut MKL_Complex16,
            ldvsr: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggesx_: Option<
        unsafe extern "C" fn(
            jobvsl: *const c_char,
            jobvsr: *const c_char,
            sort: *const c_char,
            selctg: MKL_Z_SELECT_FUNCTION_2,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            sdim: *mut MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            vsl: *mut MKL_Complex16,
            ldvsl: *const MKL_INT,
            vsr: *mut MKL_Complex16,
            ldvsr: *const MKL_INT,
            rconde: *mut f64,
            rcondv: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggev_: Option<
        unsafe extern "C" fn(
            jobvl: *const c_char,
            jobvr: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zggevx_: Option<
        unsafe extern "C" fn(
            balanc: *const c_char,
            jobvl: *const c_char,
            jobvr: *const c_char,
            sense: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            ilo: *mut MKL_INT,
            ihi: *mut MKL_INT,
            lscale: *mut f64,
            rscale: *mut f64,
            abnrm: *mut f64,
            bbnrm: *mut f64,
            rconde: *mut f64,
            rcondv: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            bwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggglm_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            m: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            d: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            y: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgghrd_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgglse_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex16,
            d: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggqrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            m: *const MKL_INT,
            p: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            taua: *mut MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            taub: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggrqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            taua: *mut MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            taub: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggsvd_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            p: *const MKL_INT,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut f64,
            beta: *mut f64,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zggsvp_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            tola: *const f64,
            tolb: *const f64,
            k: *mut MKL_INT,
            l: *mut MKL_INT,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            iwork: *mut MKL_INT,
            rwork: *mut f64,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgtcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            dl: *const MKL_Complex16,
            d: *const MKL_Complex16,
            du: *const MKL_Complex16,
            du2: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zgtrfs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex16,
            d: *const MKL_Complex16,
            du: *const MKL_Complex16,
            dlf: *const MKL_Complex16,
            df: *const MKL_Complex16,
            duf: *const MKL_Complex16,
            du2: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgtsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *mut MKL_Complex16,
            d: *mut MKL_Complex16,
            du: *mut MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgtsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex16,
            d: *const MKL_Complex16,
            du: *const MKL_Complex16,
            dlf: *mut MKL_Complex16,
            df: *mut MKL_Complex16,
            duf: *mut MKL_Complex16,
            du2: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zgttrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dl: *mut MKL_Complex16,
            d: *mut MKL_Complex16,
            du: *mut MKL_Complex16,
            du2: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgttrs_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex16,
            d: *const MKL_Complex16,
            du: *const MKL_Complex16,
            du2: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zgtts2_: Option<
        unsafe extern "C" fn(
            itrans: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex16,
            d: *const MKL_Complex16,
            du: *const MKL_Complex16,
            du2: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub zhbevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbgst_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            bb: *const MKL_Complex16,
            ldbb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbgvd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            bb: *mut MKL_Complex16,
            ldbb: *const MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbgv_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            bb: *mut MKL_Complex16,
            ldbb: *const MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbgvx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ka: *const MKL_INT,
            kb: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            bb: *mut MKL_Complex16,
            ldbb: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhbtrd_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhecon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zheequb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zheevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            w: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zheev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            w: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zheevr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zheevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhegs2_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhegst_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhegvd_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            w: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhegv_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            w: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhegvx_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zherfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zherfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            s: *mut f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhesv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhesvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *mut MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhesvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            af: *mut MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetd2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tau: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhfrk_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            beta: *const f64,
            c: *mut MKL_Complex16,
        ),
    >,
    pub zhgeqz_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compq: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpevd_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpev_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpevx_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpgst_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            bp: *const MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpgvd_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            bp: *mut MKL_Complex16,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpgv_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            bp: *mut MKL_Complex16,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpgvx_: Option<
        unsafe extern "C" fn(
            itype: *const MKL_INT,
            jobz: *const c_char,
            range: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            bp: *mut MKL_Complex16,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            afp: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhpsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            afp: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zhptrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            d: *mut f64,
            e: *mut f64,
            tau: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zhptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhsein_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            eigsrc: *const c_char,
            initv: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            h: *const MKL_Complex16,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex16,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            ifaill: *mut MKL_INT,
            ifailr: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhseqr_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex16,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlabrd_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tauq: *mut MKL_Complex16,
            taup: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
        ),
    >,
    pub zlacgv_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *mut MKL_Complex16, incx: *const MKL_INT),
    >,
    pub zlacn2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            v: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            est: *mut f64,
            kase: *mut MKL_INT,
            isave: *mut MKL_INT,
        ),
    >,
    pub zlacon_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            v: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            est: *mut f64,
            kase: *mut MKL_INT,
        ),
    >,
    pub zlacp2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub zlacpy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub zlacrm_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            rwork: *mut f64,
        ),
    >,
    pub zlacrt_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cx: *mut MKL_Complex16,
            incx: *const MKL_INT,
            cy: *mut MKL_Complex16,
            incy: *const MKL_INT,
            c: *const MKL_Complex16,
            s: *const MKL_Complex16,
        ),
    >,
    pub zladiv_: Option<
        unsafe extern "C" fn(
            ret_value: *mut MKL_Complex16,
            x: *const MKL_Complex16,
            y: *const MKL_Complex16,
        ),
    >,
    pub zlaed0_: Option<
        unsafe extern "C" fn(
            qsiz: *const MKL_INT,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            qstore: *mut MKL_Complex16,
            ldqs: *const MKL_INT,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaed7_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cutpnt: *const MKL_INT,
            qsiz: *const MKL_INT,
            tlvls: *const MKL_INT,
            curlvl: *const MKL_INT,
            curpbm: *const MKL_INT,
            d: *mut f64,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            rho: *const f64,
            indxq: *mut MKL_INT,
            qstore: *mut f64,
            qptr: *mut MKL_INT,
            prmptr: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            givnum: *const f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaed8_: Option<
        unsafe extern "C" fn(
            k: *mut MKL_INT,
            n: *const MKL_INT,
            qsiz: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            d: *mut f64,
            rho: *mut f64,
            cutpnt: *const MKL_INT,
            z: *const f64,
            dlamda: *mut f64,
            q2: *mut MKL_Complex16,
            ldq2: *const MKL_INT,
            w: *mut f64,
            indxp: *mut MKL_INT,
            indx: *mut MKL_INT,
            indxq: *const MKL_INT,
            perm: *mut MKL_INT,
            givptr: *mut MKL_INT,
            givcol: *mut MKL_INT,
            givnum: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaein_: Option<
        unsafe extern "C" fn(
            rightv: *const MKL_INT,
            noinit: *const MKL_INT,
            n: *const MKL_INT,
            h: *const MKL_Complex16,
            ldh: *const MKL_INT,
            w: *const MKL_Complex16,
            v: *mut MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            rwork: *mut f64,
            eps3: *const f64,
            smlnum: *const f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaesy_: Option<
        unsafe extern "C" fn(
            a: *const MKL_Complex16,
            b: *const MKL_Complex16,
            c: *const MKL_Complex16,
            rt1: *mut MKL_Complex16,
            rt2: *mut MKL_Complex16,
            evscal: *mut MKL_Complex16,
            cs1: *mut MKL_Complex16,
            sn1: *mut MKL_Complex16,
        ),
    >,
    pub zlaev2_: Option<
        unsafe extern "C" fn(
            a: *const MKL_Complex16,
            b: *const MKL_Complex16,
            c: *const MKL_Complex16,
            rt1: *mut f64,
            rt2: *mut f64,
            cs1: *mut f64,
            sn1: *mut MKL_Complex16,
        ),
    >,
    pub zlag2c_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            sa: *mut MKL_Complex8,
            ldsa: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlags2_: Option<
        unsafe extern "C" fn(
            upper: *const MKL_INT,
            a1: *const f64,
            a2: *const MKL_Complex16,
            a3: *const f64,
            b1: *const f64,
            b2: *const MKL_Complex16,
            b3: *const f64,
            csu: *mut f64,
            snu: *mut MKL_Complex16,
            csv: *mut f64,
            snv: *mut MKL_Complex16,
            csq: *mut f64,
            snq: *mut MKL_Complex16,
        ),
    >,
    pub zlagtm_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            alpha: *const f64,
            dl: *const MKL_Complex16,
            d: *const MKL_Complex16,
            du: *const MKL_Complex16,
            x: *const MKL_Complex16,
            ldx: *const MKL_INT,
            beta: *const f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub zlahef_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex16,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlahqr_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex16,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlahr2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
        ),
    >,
    pub zlahrd_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
        ),
    >,
    pub zlaic1_: Option<
        unsafe extern "C" fn(
            job: *const MKL_INT,
            j: *const MKL_INT,
            x: *const MKL_Complex16,
            sest: *const f64,
            w: *const MKL_Complex16,
            gamma: *const MKL_Complex16,
            sestpr: *mut f64,
            s: *mut MKL_Complex16,
            c: *mut MKL_Complex16,
        ),
    >,
    pub zlals0_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            nl: *const MKL_INT,
            nr: *const MKL_INT,
            sqre: *const MKL_INT,
            nrhs: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            bx: *mut MKL_Complex16,
            ldbx: *const MKL_INT,
            perm: *const MKL_INT,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            ldgcol: *const MKL_INT,
            givnum: *const f64,
            ldgnum: *const MKL_INT,
            poles: *const f64,
            difl: *const f64,
            difr: *const f64,
            z: *const f64,
            k: *const MKL_INT,
            c: *const f64,
            s: *const f64,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zlalsa_: Option<
        unsafe extern "C" fn(
            icompq: *const MKL_INT,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            bx: *mut MKL_Complex16,
            ldbx: *const MKL_INT,
            u: *const f64,
            ldu: *const MKL_INT,
            vt: *const f64,
            k: *const MKL_INT,
            difl: *const f64,
            difr: *const f64,
            z: *const f64,
            poles: *const f64,
            givptr: *const MKL_INT,
            givcol: *const MKL_INT,
            ldgcol: *const MKL_INT,
            perm: *const MKL_INT,
            givnum: *const f64,
            c: *const f64,
            s: *const f64,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlalsd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            smlsiz: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            rcond: *const f64,
            rank: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlangb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlange_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlangt_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            dl: *const MKL_Complex16,
            d: *const MKL_Complex16,
            du: *const MKL_Complex16,
        ) -> f64,
    >,
    pub zlanhb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlanhe_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlanhf_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlanhp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlanhs_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlanht_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            n: *const MKL_INT,
            d: *const f64,
            e: *const MKL_Complex16,
        ) -> f64,
    >,
    pub zlansb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlansp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlansy_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlantb_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlantp_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlantr_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zlapll_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            ssmin: *mut f64,
        ),
    >,
    pub zlapmt_: Option<
        unsafe extern "C" fn(
            forwrd: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            k: *mut MKL_INT,
        ),
    >,
    pub zlaqgb_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            r: *const f64,
            c: *const f64,
            rowcnd: *const f64,
            colcnd: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub zlaqge_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            r: *const f64,
            c: *const f64,
            rowcnd: *const f64,
            colcnd: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub zlaqhb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            s: *mut f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub zlaqhe_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            s: *const f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub zlaqhp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            s: *const f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub zlaqp2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            offset: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut MKL_Complex16,
            vn1: *mut f64,
            vn2: *mut f64,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlaqps_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            offset: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            jpvt: *mut MKL_INT,
            tau: *mut MKL_Complex16,
            vn1: *mut f64,
            vn2: *mut f64,
            auxv: *mut MKL_Complex16,
            f: *mut MKL_Complex16,
            ldf: *const MKL_INT,
        ),
    >,
    pub zlaqr0_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex16,
            iloz: *mut MKL_INT,
            ihiz: *mut MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaqr1_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            h: *const MKL_Complex16,
            ldh: *const MKL_INT,
            s1: *const MKL_Complex16,
            s2: *mut MKL_Complex16,
            v: *mut MKL_Complex16,
        ),
    >,
    pub zlaqr2_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nw: *const MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            sh: *mut MKL_Complex16,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            nh: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut MKL_Complex16,
            ldwv: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
        ),
    >,
    pub zlaqr3_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nw: *const MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            sh: *mut MKL_Complex16,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            nh: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut MKL_Complex16,
            ldwv: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
        ),
    >,
    pub zlaqr4_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            w: *mut MKL_Complex16,
            iloz: *mut MKL_INT,
            ihiz: *mut MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaqr5_: Option<
        unsafe extern "C" fn(
            wantt: *const MKL_INT,
            wantz: *const MKL_INT,
            kacc22: *const MKL_INT,
            n: *const MKL_INT,
            ktop: *const MKL_INT,
            kbot: *const MKL_INT,
            nshfts: *const MKL_INT,
            s: *mut MKL_Complex16,
            h: *mut MKL_Complex16,
            ldh: *const MKL_INT,
            iloz: *const MKL_INT,
            ihiz: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            nv: *const MKL_INT,
            wv: *mut MKL_Complex16,
            ldwv: *const MKL_INT,
            nh: *const MKL_INT,
            wh: *mut MKL_Complex16,
            ldwh: *const MKL_INT,
        ),
    >,
    pub zlaqsb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            s: *const f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub zlaqsp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            s: *const f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub zlaqsy_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            s: *const f64,
            scond: *const f64,
            amax: *const f64,
            equed: *mut c_char,
        ),
    >,
    pub zlaqz0_: Option<
        unsafe extern "C" fn(
            wants: *const c_char,
            wantq: *const c_char,
            wantz: *const c_char,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f32,
            rec: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaqz1_: Option<
        unsafe extern "C" fn(
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            k: *const MKL_INT,
            istartm: *const MKL_INT,
            istopm: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            nq: *const MKL_INT,
            qstart: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            nz: *const MKL_INT,
            zstart: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
        ),
    >,
    pub zlaqz2_: Option<
        unsafe extern "C" fn(
            ilschur: *const MKL_INT,
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            nw: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            ns: *mut MKL_INT,
            nd: *mut MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            qc: *mut MKL_Complex16,
            ldqc: *const MKL_INT,
            zc: *mut MKL_Complex16,
            ldzc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            rec: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaqz3_: Option<
        unsafe extern "C" fn(
            ilschur: *const MKL_INT,
            ilq: *const MKL_INT,
            ilz: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            nshifts: *const MKL_INT,
            nb: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            qc: *mut MKL_Complex16,
            ldqc: *const MKL_INT,
            zc: *mut MKL_Complex16,
            ldzc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlar1v_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            b1: *const MKL_INT,
            bn: *const MKL_INT,
            lambda: *const f64,
            d: *const f64,
            l: *const f64,
            ld: *const f64,
            lld: *const f64,
            pivmin: *const f64,
            gaptol: *const f64,
            z: *mut MKL_Complex16,
            wantnc: *const MKL_INT,
            negcnt: *mut MKL_INT,
            ztz: *mut f64,
            mingma: *mut f64,
            r: *mut MKL_INT,
            isuppz: *mut MKL_INT,
            nrminv: *mut f64,
            resid: *mut f64,
            rqcorr: *mut f64,
            work: *mut f64,
        ),
    >,
    pub zlar2v_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            y: *mut MKL_Complex16,
            z: *mut MKL_Complex16,
            incx: *const MKL_INT,
            c: *const f64,
            s: *const MKL_Complex16,
            incc: *const MKL_INT,
        ),
    >,
    pub zlarcm_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            rwork: *mut f64,
        ),
    >,
    pub zlarfb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *const MKL_Complex16,
            ldv: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            ldwork: *const MKL_INT,
        ),
    >,
    pub zlarf_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex16,
            incv: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlarf1f_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex16,
            incv: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlarf1l_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex16,
            incv: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlarfg_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            tau: *mut MKL_Complex16,
        ),
    >,
    pub zlarfgp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            tau: *mut MKL_Complex16,
        ),
    >,
    pub zlarfp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            tau: *mut MKL_Complex16,
        ),
    >,
    pub zlarft_: Option<
        unsafe extern "C" fn(
            direct: *const c_char,
            storev: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *const MKL_Complex16,
            ldv: *const MKL_INT,
            tau: *const MKL_Complex16,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
        ),
    >,
    pub zlarfx_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex16,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlargv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            c: *mut f64,
            incc: *const MKL_INT,
        ),
    >,
    pub zlarnv_: Option<
        unsafe extern "C" fn(
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
        ),
    >,
    pub zlarrv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            vl: *const f64,
            vu: *const f64,
            d: *mut f64,
            l: *mut f64,
            pivmin: *mut f64,
            isplit: *const MKL_INT,
            m: *const MKL_INT,
            dol: *const MKL_INT,
            dou: *const MKL_INT,
            minrgp: *const f64,
            rtol1: *const f64,
            rtol2: *const f64,
            w: *mut f64,
            werr: *mut f64,
            wgap: *mut f64,
            iblock: *const MKL_INT,
            indexw: *const MKL_INT,
            gers: *const f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlarscl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f64,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
        ),
    >,
    pub zlartg_: Option<
        unsafe extern "C" fn(
            f: *const MKL_Complex16,
            g: *const MKL_Complex16,
            cs: *mut f64,
            sn: *mut MKL_Complex16,
            r: *mut MKL_Complex16,
        ),
    >,
    pub zlartv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const MKL_Complex16,
            incc: *const MKL_INT,
        ),
    >,
    pub zlarzb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            v: *const MKL_Complex16,
            ldv: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            ldwork: *const MKL_INT,
        ),
    >,
    pub zlarz_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            v: *const MKL_Complex16,
            incv: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlarzt_: Option<
        unsafe extern "C" fn(
            direct: *const c_char,
            storev: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            tau: *const MKL_Complex16,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
        ),
    >,
    pub zlascl_: Option<
        unsafe extern "C" fn(
            type_: *const c_char,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            cfrom: *const f64,
            cto: *const f64,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlascl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            d: *const f64,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
        ),
    >,
    pub zlaset_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            beta: *const MKL_Complex16,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zlasr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            pivot: *const c_char,
            direct: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            c: *const f64,
            s: *const f64,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zlassq_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            scale: *mut f64,
            sumsq: *mut f64,
        ),
    >,
    pub zlaswp_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            k1: *const MKL_INT,
            k2: *const MKL_INT,
            ipiv: *const MKL_INT,
            incx: *const MKL_INT,
        ),
    >,
    pub zlasyf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            kb: *mut MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            w: *mut MKL_Complex16,
            ldw: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlat2c_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            sa: *mut MKL_Complex8,
            ldsa: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatbs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            x: *mut MKL_Complex16,
            scale: *mut f64,
            cnorm: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatdf_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            n: *const MKL_INT,
            z: *const MKL_Complex16,
            ldz: *const MKL_INT,
            rhs: *mut MKL_Complex16,
            rdsum: *mut f64,
            rdscal: *mut f64,
            ipiv: *const MKL_INT,
            jpiv: *const MKL_INT,
        ),
    >,
    pub zlatps_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            scale: *mut f64,
            cnorm: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatrd_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nb: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            e: *mut f64,
            tau: *mut MKL_Complex16,
            w: *mut MKL_Complex16,
            ldw: *const MKL_INT,
        ),
    >,
    pub zlatrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut MKL_Complex16,
            scale: *mut f64,
            cnorm: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatrs3_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            normin: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            scale: *mut f64,
            cnorm: *mut f64,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatrz_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlatzm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            v: *const MKL_Complex16,
            incv: *const MKL_INT,
            tau: *const MKL_Complex16,
            c1: *mut MKL_Complex16,
            c2: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
        ),
    >,
    pub zlauu2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlauum_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbequ_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex16,
            ldafb: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbstf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *mut MKL_Complex16,
            ldafb: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbtf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbtrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *mut MKL_Complex16,
            ldab: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpbtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpftrf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zpftri_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zpftrs_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpocon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpoequb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpoequ_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zporfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zporfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            s: *mut f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zposv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zposvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            af: *mut MKL_Complex16,
            ldaf: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zposvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            af: *mut MKL_Complex16,
            ldaf: *const MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpotf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpotrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpotri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpotrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zppcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zppequ_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            afp: *const MKL_Complex16,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zppsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zppsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut MKL_Complex16,
            afp: *mut MKL_Complex16,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zpptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zpptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zpstf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            piv: *mut MKL_INT,
            rank: *mut MKL_INT,
            tol: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpstrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            piv: *mut MKL_INT,
            rank: *mut MKL_INT,
            tol: *const f64,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zptcon_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            e: *const MKL_Complex16,
            anorm: *const f64,
            rcond: *mut f64,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpteqr_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zptrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f64,
            e: *const MKL_Complex16,
            df: *const f64,
            ef: *const MKL_Complex16,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zptsv_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *mut f64,
            e: *mut MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zptsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f64,
            e: *const MKL_Complex16,
            df: *mut f64,
            ef: *mut MKL_Complex16,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zpttrf_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zpttrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f64,
            e: *const MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zptts2_: Option<
        unsafe extern "C" fn(
            iuplo: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            d: *const f64,
            e: *const MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub zrot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            cx: *mut MKL_Complex16,
            incx: *const MKL_INT,
            cy: *mut MKL_Complex16,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const MKL_Complex16,
        ),
    >,
    pub zspcon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zspmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            ap: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zspr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            ap: *mut MKL_Complex16,
        ),
    >,
    pub zsprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            afp: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zspsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zspsvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            afp: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zsptrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zsptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zstedc_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            lrwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zstegr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            abstol: *const f64,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            isuppz: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zstein_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            d: *const f64,
            e: *const f64,
            m: *const MKL_INT,
            w: *const f64,
            iblock: *const MKL_INT,
            isplit: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
            ifail: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zstemr_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            range: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            vl: *const f64,
            vu: *const f64,
            il: *const MKL_INT,
            iu: *const MKL_INT,
            m: *mut MKL_INT,
            w: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            nzc: *const MKL_INT,
            isuppz: *mut MKL_INT,
            tryrac: *mut MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsteqr_: Option<
        unsafe extern "C" fn(
            compz: *const c_char,
            n: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zsycon_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            anorm: *const f64,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zsyequb_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            s: *mut f64,
            scond: *mut f64,
            amax: *mut f64,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zsymv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zsyr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zsyrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zsyrfsx_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            equed: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            s: *mut f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zsysv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsysvx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *mut MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zsysvxx_: Option<
        unsafe extern "C" fn(
            fact: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            af: *mut MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *mut MKL_INT,
            equed: *mut c_char,
            s: *mut f64,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            rcond: *mut f64,
            rpvgrw: *mut f64,
            berr: *mut f64,
            n_err_bnds: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            nparams: *const MKL_INT,
            params: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytf2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrf_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zsytrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztbcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztbrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *const MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztbtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztfsm_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub ztftri_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ztfttp_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            arf: *const MKL_Complex16,
            ap: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ztfttr_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            arf: *const MKL_Complex16,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztgevc_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            s: *const MKL_Complex16,
            lds: *const MKL_INT,
            p: *const MKL_Complex16,
            ldp: *const MKL_INT,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztgex2_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            j1: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztgexc_: Option<
        unsafe extern "C" fn(
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            ifst: *const MKL_INT,
            ilst: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztgsen_: Option<
        unsafe extern "C" fn(
            ijob: *const MKL_INT,
            wantq: *const MKL_INT,
            wantz: *const MKL_INT,
            select: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            alpha: *mut MKL_Complex16,
            beta: *mut MKL_Complex16,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            m: *mut MKL_INT,
            pl: *mut f64,
            pr: *mut f64,
            dif: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            liwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztgsja_: Option<
        unsafe extern "C" fn(
            jobu: *const c_char,
            jobv: *const c_char,
            jobq: *const c_char,
            m: *const MKL_INT,
            p: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            tola: *const f64,
            tolb: *const f64,
            alpha: *mut f64,
            beta: *mut f64,
            u: *mut MKL_Complex16,
            ldu: *const MKL_INT,
            v: *mut MKL_Complex16,
            ldv: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex16,
            ncycle: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztgsna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            vl: *const MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *const MKL_Complex16,
            ldvr: *const MKL_INT,
            s: *mut f64,
            dif: *mut f64,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztgsy2_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            ijob: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            d: *const MKL_Complex16,
            ldd: *const MKL_INT,
            e: *const MKL_Complex16,
            lde: *const MKL_INT,
            f: *mut MKL_Complex16,
            ldf: *const MKL_INT,
            scale: *mut f64,
            rdsum: *mut f64,
            rdscal: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztgsyl_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            ijob: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            d: *const MKL_Complex16,
            ldd: *const MKL_INT,
            e: *const MKL_Complex16,
            lde: *const MKL_INT,
            f: *mut MKL_Complex16,
            ldf: *const MKL_INT,
            scale: *mut f64,
            dif: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztpcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztprfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *const MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztptri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ztptrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            ap: *const MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztpttf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            arf: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ztpttr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrcon_: Option<
        unsafe extern "C" fn(
            norm: *const c_char,
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            rcond: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrevc_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            vl: *mut MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *mut MKL_Complex16,
            ldvr: *const MKL_INT,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrexc_: Option<
        unsafe extern "C" fn(
            compq: *const c_char,
            n: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            ifst: *const MKL_INT,
            ilst: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrrfs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            x: *const MKL_Complex16,
            ldx: *const MKL_INT,
            ferr: *mut f64,
            berr: *mut f64,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrsen_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            compq: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            w: *mut MKL_Complex16,
            m: *mut MKL_INT,
            s: *mut f64,
            sep: *mut f64,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrsna_: Option<
        unsafe extern "C" fn(
            job: *const c_char,
            howmny: *const c_char,
            select: *const MKL_INT,
            n: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            vl: *const MKL_Complex16,
            ldvl: *const MKL_INT,
            vr: *const MKL_Complex16,
            ldvr: *const MKL_INT,
            s: *mut f64,
            sep: *mut f64,
            mm: *const MKL_INT,
            m: *mut MKL_INT,
            work: *mut MKL_Complex16,
            ldwork: *const MKL_INT,
            rwork: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrsyl_: Option<
        unsafe extern "C" fn(
            trana: *const c_char,
            tranb: *const c_char,
            isgn: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            scale: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrsyl3_: Option<
        unsafe extern "C" fn(
            trana: *const c_char,
            tranb: *const c_char,
            isgn: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            scale: *mut f64,
            swork: *mut f64,
            ldswork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrti2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrtri_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrtrs_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrttf_: Option<
        unsafe extern "C" fn(
            transr: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            arf: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ztrttp_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            ap: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ztzrqf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub ztzrzf_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *mut MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zung2l_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zung2r_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zungbr_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunghr_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zungl2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zunglq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zungql_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zungqr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zungr2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zungrq_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zungtr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunm2l_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zunm2r_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmbr_: Option<
        unsafe extern "C" fn(
            vect: *const c_char,
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmhr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ilo: *const MKL_INT,
            ihi: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunml2_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmlq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmql_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmqr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmr2_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmr3_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmrq_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmrz_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zunmtr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zupgtr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            tau: *const MKL_Complex16,
            q: *mut MKL_Complex16,
            ldq: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zupmtr_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            tau: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub cgeqrt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            t: *mut MKL_Complex8,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cheswapr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            i1: *const MKL_INT,
            i2: *const MKL_INT,
        ),
    >,
    pub chetri2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub chetri2x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex8,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cla_gbamv_: Option<
        unsafe extern "C" fn(
            trans: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const f32,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub cla_gbrcond_c_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex8,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            c: *const f32,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_gbrcond_x_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex8,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            x: *const MKL_Complex8,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_gbrfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            trans_type: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex8,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            res: *mut MKL_Complex8,
            ayb: *mut f32,
            dy: *mut MKL_Complex8,
            y_tail: *mut MKL_Complex8,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cla_gbrpvgrw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ncols: *const MKL_INT,
            ab: *const MKL_Complex8,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex8,
            ldafb: *const MKL_INT,
        ) -> f32,
    >,
    pub cla_geamv_: Option<
        unsafe extern "C" fn(
            trans: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub cla_gercond_c_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            c: *const f32,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_gercond_x_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            x: *const MKL_Complex8,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_gerfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            trans_type: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            errs_n: *mut f32,
            errs_c: *mut f32,
            res: *mut MKL_Complex8,
            ayb: *mut f32,
            dy: *mut MKL_Complex8,
            y_tail: *mut MKL_Complex8,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cla_gerpvgrw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ncols: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
        ) -> f32,
    >,
    pub cla_heamv_: Option<
        unsafe extern "C" fn(
            uplo: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub cla_hercond_c_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            c: *const f32,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_hercond_x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            x: *const MKL_Complex8,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_herfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            res: *mut MKL_Complex8,
            ayb: *mut f32,
            dy: *mut MKL_Complex8,
            y_tail: *mut MKL_Complex8,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cla_herpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            info: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub cla_lin_berr_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nz: *const MKL_INT,
            nrhs: *const MKL_INT,
            res: *const MKL_Complex8,
            ayb: *const f32,
            berr: *mut f32,
        ),
    >,
    pub cla_porcond_c_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            c: *const f32,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_porcond_x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            x: *const MKL_Complex8,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_porfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            res: *mut MKL_Complex8,
            ayb: *mut f32,
            dy: *mut MKL_Complex8,
            y_tail: *mut MKL_Complex8,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cla_porpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            ncols: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub cla_syamv_: Option<
        unsafe extern "C" fn(
            uplo: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub cla_syrcond_c_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            c: *const f32,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_syrcond_x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            x: *const MKL_Complex8,
            info: *mut MKL_INT,
            work: *mut MKL_Complex8,
            rwork: *mut f32,
        ) -> f32,
    >,
    pub cla_syrfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            res: *mut MKL_Complex8,
            ayb: *mut f32,
            dy: *mut MKL_Complex8,
            y_tail: *mut MKL_Complex8,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cla_syrpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            info: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            af: *const MKL_Complex8,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub cla_wwaddw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            y: *mut MKL_Complex8,
            w: *const MKL_Complex8,
        ),
    >,
    pub ctprfb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            v: *const MKL_Complex8,
            ldv: *const MKL_INT,
            t: *const MKL_Complex8,
            ldt: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex8,
            ldwork: *const MKL_INT,
        ),
    >,
    pub dgeqrt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            t: *mut f64,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dla_gbamv_: Option<
        unsafe extern "C" fn(
            trans: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const f64,
            ab: *const f64,
            ldab: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dla_gbrcond_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            afb: *const f64,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            cmode: *const MKL_INT,
            c: *const f64,
            info: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
        ) -> f64,
    >,
    pub dla_gbrfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            trans_type: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            afb: *const f64,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            res: *mut f64,
            ayb: *mut f64,
            dy: *mut f64,
            y_tail: *mut f64,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dla_gbrpvgrw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ncols: *const MKL_INT,
            ab: *const f64,
            ldab: *const MKL_INT,
            afb: *const f64,
            ldafb: *const MKL_INT,
        ) -> f64,
    >,
    pub dla_geamv_: Option<
        unsafe extern "C" fn(
            trans: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dla_gercond_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            cmode: *const MKL_INT,
            c: *const f64,
            info: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
        ) -> f64,
    >,
    pub dla_gerfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            trans_type: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            errs_n: *mut f64,
            errs_c: *mut f64,
            res: *mut f64,
            ayb: *mut f64,
            dy: *mut f64,
            y_tail: *mut f64,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dla_gerpvgrw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ncols: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
        ) -> f64,
    >,
    pub dla_lin_berr_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nz: *const MKL_INT,
            nrhs: *const MKL_INT,
            res: *const f64,
            ayb: *const f64,
            berr: *mut f64,
        ),
    >,
    pub dla_porcond_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            cmode: *const MKL_INT,
            c: *const f64,
            info: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
        ) -> f64,
    >,
    pub dla_porfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            res: *mut f64,
            ayb: *mut f64,
            dy: *mut f64,
            y_tail: *mut f64,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dla_porpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            ncols: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dla_syamv_: Option<
        unsafe extern "C" fn(
            uplo: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dla_syrcond_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            cmode: *const MKL_INT,
            c: *const f64,
            info: *mut MKL_INT,
            work: *mut f64,
            iwork: *mut MKL_INT,
        ) -> f64,
    >,
    pub dla_syrfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const f64,
            ldb: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            res: *mut f64,
            ayb: *mut f64,
            dy: *mut f64,
            y_tail: *mut f64,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dla_syrpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            info: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            af: *const f64,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub dla_wwaddw_:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *mut f64, y: *mut f64, w: *const f64)>,
    pub dtprfb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            v: *const f64,
            ldv: *const MKL_INT,
            t: *const f64,
            ldt: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            work: *mut f64,
            ldwork: *const MKL_INT,
        ),
    >,
    pub sgeqrt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            t: *mut f32,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sla_gbamv_: Option<
        unsafe extern "C" fn(
            trans: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const f32,
            ab: *const f32,
            ldab: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sla_gbrcond_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            afb: *const f32,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            cmode: *const MKL_INT,
            c: *const f32,
            info: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
        ) -> f32,
    >,
    pub sla_gbrfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            trans_type: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            afb: *const f32,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            res: *mut f32,
            ayb: *mut f32,
            dy: *mut f32,
            y_tail: *mut f32,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sla_gbrpvgrw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ncols: *const MKL_INT,
            ab: *const f32,
            ldab: *const MKL_INT,
            afb: *const f32,
            ldafb: *const MKL_INT,
        ) -> f32,
    >,
    pub sla_geamv_: Option<
        unsafe extern "C" fn(
            trans: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sla_gercond_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            cmode: *const MKL_INT,
            c: *const f32,
            info: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
        ) -> f32,
    >,
    pub sla_gerfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            trans_type: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            errs_n: *mut f32,
            errs_c: *mut f32,
            res: *mut f32,
            ayb: *mut f32,
            dy: *mut f32,
            y_tail: *mut f32,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sla_gerpvgrw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ncols: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
        ) -> f32,
    >,
    pub sla_lin_berr_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nz: *const MKL_INT,
            nrhs: *const MKL_INT,
            res: *const f32,
            ayb: *const f32,
            berr: *mut f32,
        ),
    >,
    pub sla_porcond_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            cmode: *const MKL_INT,
            c: *const f32,
            info: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
        ) -> f32,
    >,
    pub sla_porfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            res: *mut f32,
            ayb: *mut f32,
            dy: *mut f32,
            y_tail: *mut f32,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sla_porpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            ncols: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub sla_syamv_: Option<
        unsafe extern "C" fn(
            uplo: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sla_syrcond_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            cmode: *const MKL_INT,
            c: *const f32,
            info: *mut MKL_INT,
            work: *mut f32,
            iwork: *mut MKL_INT,
        ) -> f32,
    >,
    pub sla_syrfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f32,
            b: *const f32,
            ldb: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
            berr_out: *mut f32,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f32,
            err_bnds_comp: *mut f32,
            res: *mut f32,
            ayb: *mut f32,
            dy: *mut f32,
            y_tail: *mut f32,
            rcond: *const f32,
            ithresh: *const MKL_INT,
            rthresh: *const f32,
            dz_ub: *const f32,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sla_syrpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            info: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            af: *const f32,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f32,
        ) -> f32,
    >,
    pub sla_wwaddw_:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *mut f32, y: *mut f32, w: *const f32)>,
    pub stprfb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            v: *const f32,
            ldv: *const MKL_INT,
            t: *const f32,
            ldt: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            work: *mut f32,
            ldwork: *const MKL_INT,
        ),
    >,
    pub zgeqrt2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            t: *mut MKL_Complex16,
            ldt: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zheswapr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            i1: *const MKL_INT,
            i2: *const MKL_INT,
        ),
    >,
    pub zhetri2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zhetri2x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut MKL_Complex16,
            nb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zla_gbamv_: Option<
        unsafe extern "C" fn(
            trans: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const f64,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub zla_gbrcond_c_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex16,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            c: *const f64,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_gbrcond_x_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex16,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            x: *const MKL_Complex16,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_gbrfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            trans_type: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            nrhs: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex16,
            ldafb: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            res: *mut MKL_Complex16,
            ayb: *mut f64,
            dy: *mut MKL_Complex16,
            y_tail: *mut MKL_Complex16,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zla_gbrpvgrw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            ncols: *const MKL_INT,
            ab: *const MKL_Complex16,
            ldab: *const MKL_INT,
            afb: *const MKL_Complex16,
            ldafb: *const MKL_INT,
        ) -> f64,
    >,
    pub zla_geamv_: Option<
        unsafe extern "C" fn(
            trans: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub zla_gercond_c_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            c: *const f64,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_gercond_x_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            x: *const MKL_Complex16,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_gerfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            trans_type: *const MKL_INT,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            errs_n: *mut f64,
            errs_c: *mut f64,
            res: *mut MKL_Complex16,
            ayb: *mut f64,
            dy: *mut MKL_Complex16,
            y_tail: *mut MKL_Complex16,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zla_gerpvgrw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            ncols: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
        ) -> f64,
    >,
    pub zla_heamv_: Option<
        unsafe extern "C" fn(
            uplo: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub zla_hercond_c_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            c: *const f64,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_hercond_x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            x: *const MKL_Complex16,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_herfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            res: *mut MKL_Complex16,
            ayb: *mut f64,
            dy: *mut MKL_Complex16,
            y_tail: *mut MKL_Complex16,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zla_herpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            info: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zla_lin_berr_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nz: *const MKL_INT,
            nrhs: *const MKL_INT,
            res: *const MKL_Complex16,
            ayb: *const f64,
            berr: *mut f64,
        ),
    >,
    pub zla_porcond_c_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            c: *const f64,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_porcond_x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            x: *const MKL_Complex16,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_porfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            res: *mut MKL_Complex16,
            ayb: *mut f64,
            dy: *mut MKL_Complex16,
            y_tail: *mut MKL_Complex16,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zla_porpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            ncols: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zla_syamv_: Option<
        unsafe extern "C" fn(
            uplo: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub zla_syrcond_c_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            c: *const f64,
            capply: *const MKL_INT,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_syrcond_x_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            x: *const MKL_Complex16,
            info: *mut MKL_INT,
            work: *mut MKL_Complex16,
            rwork: *mut f64,
        ) -> f64,
    >,
    pub zla_syrfsx_extended_: Option<
        unsafe extern "C" fn(
            prec_type: *const MKL_INT,
            uplo: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            colequ: *const MKL_INT,
            c: *const f64,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
            berr_out: *mut f64,
            n_norms: *const MKL_INT,
            err_bnds_norm: *mut f64,
            err_bnds_comp: *mut f64,
            res: *mut MKL_Complex16,
            ayb: *mut f64,
            dy: *mut MKL_Complex16,
            y_tail: *mut MKL_Complex16,
            rcond: *const f64,
            ithresh: *const MKL_INT,
            rthresh: *const f64,
            dz_ub: *const f64,
            ignore_cwise: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zla_syrpvgrw_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            info: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            af: *const MKL_Complex16,
            ldaf: *const MKL_INT,
            ipiv: *const MKL_INT,
            work: *mut f64,
        ) -> f64,
    >,
    pub zla_wwaddw_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            y: *mut MKL_Complex16,
            w: *const MKL_Complex16,
        ),
    >,
    pub ztprfb_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            trans: *const c_char,
            direct: *const c_char,
            storev: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            l: *const MKL_INT,
            v: *const MKL_Complex16,
            ldv: *const MKL_INT,
            t: *const MKL_Complex16,
            ldt: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            work: *mut MKL_Complex16,
            ldwork: *const MKL_INT,
        ),
    >,
    pub cherdb_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tau: *mut MKL_Complex8,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex8,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dsyrdb_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tau: *mut f64,
            z: *mut f64,
            ldz: *const MKL_INT,
            work: *mut f64,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ssyrdb_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            d: *mut f32,
            e: *mut f32,
            tau: *mut f32,
            z: *mut f32,
            ldz: *const MKL_INT,
            work: *mut f32,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zherdb_: Option<
        unsafe extern "C" fn(
            jobz: *const c_char,
            uplo: *const c_char,
            n: *const MKL_INT,
            kd: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            d: *mut f64,
            e: *mut f64,
            tau: *mut MKL_Complex16,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
            work: *mut MKL_Complex16,
            lwork: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cdtsvb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *mut MKL_Complex8,
            d: *mut MKL_Complex8,
            du: *const MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub cdttrfb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dl: *mut MKL_Complex8,
            d: *mut MKL_Complex8,
            du: *const MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub cdttrsb_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex8,
            d: *const MKL_Complex8,
            du: *const MKL_Complex8,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ddtsvb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *mut f64,
            d: *mut f64,
            du: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub ddttrfb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dl: *mut f64,
            d: *mut f64,
            du: *const f64,
            info: *mut MKL_INT,
        ),
    >,
    pub ddttrsb_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f64,
            d: *const f64,
            du: *const f64,
            b: *mut f64,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sdtsvb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *mut f32,
            d: *mut f32,
            du: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub sdttrfb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dl: *mut f32,
            d: *mut f32,
            du: *const f32,
            info: *mut MKL_INT,
        ),
    >,
    pub sdttrsb_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const f32,
            d: *const f32,
            du: *const f32,
            b: *mut f32,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zdtsvb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *mut MKL_Complex16,
            d: *mut MKL_Complex16,
            du: *const MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zdttrfb_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dl: *mut MKL_Complex16,
            d: *mut MKL_Complex16,
            du: *const MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub zdttrsb_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            n: *const MKL_INT,
            nrhs: *const MKL_INT,
            dl: *const MKL_Complex16,
            d: *const MKL_Complex16,
            du: *const MKL_Complex16,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_ctppack_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex8,
            i: *const MKL_INT,
            j: *const MKL_INT,
            rows: *const MKL_INT,
            cols: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_dtppack_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            ap: *mut f64,
            i: *const MKL_INT,
            j: *const MKL_INT,
            rows: *const MKL_INT,
            cols: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_stppack_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            ap: *mut f32,
            i: *const MKL_INT,
            j: *const MKL_INT,
            rows: *const MKL_INT,
            cols: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_ztppack_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            ap: *mut MKL_Complex16,
            i: *const MKL_INT,
            j: *const MKL_INT,
            rows: *const MKL_INT,
            cols: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_ctpunpack_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            i: *const MKL_INT,
            j: *const MKL_INT,
            rows: *const MKL_INT,
            cols: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_dtpunpack_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            i: *const MKL_INT,
            j: *const MKL_INT,
            rows: *const MKL_INT,
            cols: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_stpunpack_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            i: *const MKL_INT,
            j: *const MKL_INT,
            rows: *const MKL_INT,
            cols: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_ztpunpack_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            i: *const MKL_INT,
            j: *const MKL_INT,
            rows: *const MKL_INT,
            cols: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatm1_: Option<
        unsafe extern "C" fn(
            mode: *const MKL_INT,
            cond: *const f64,
            irsign: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *mut f64,
            n: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slatm1_: Option<
        unsafe extern "C" fn(
            mode: *const MKL_INT,
            cond: *const f32,
            irsign: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *mut f32,
            n: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clatm1_: Option<
        unsafe extern "C" fn(
            mode: *const MKL_INT,
            cond: *const f32,
            irsign: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *mut MKL_Complex8,
            n: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatm1_: Option<
        unsafe extern "C" fn(
            mode: *const MKL_INT,
            cond: *const f64,
            irsign: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *mut MKL_Complex16,
            n: *const MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatm2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            ii: *mut MKL_INT,
            j: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *const f64,
            igrade: *const MKL_INT,
            dl: *const f64,
            dr: *const f64,
            ipvtng: *const MKL_INT,
            iwork: *mut MKL_INT,
            sparse: *const f64,
        ) -> f64,
    >,
    pub slatm2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            ii: *mut MKL_INT,
            j: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *const f32,
            igrade: *const MKL_INT,
            dl: *const f32,
            dr: *const f32,
            ipvtng: *const MKL_INT,
            iwork: *mut MKL_INT,
            sparse: *const f32,
        ) -> f32,
    >,
    pub clatm2_: Option<
        unsafe extern "C" fn(
            retval: *mut MKL_Complex8,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ii: *mut MKL_INT,
            j: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *const MKL_Complex8,
            igrade: *const MKL_INT,
            dl: *const MKL_Complex8,
            dr: *const MKL_Complex8,
            ipvtng: *const MKL_INT,
            iwork: *mut MKL_INT,
            sparse: *const f32,
        ),
    >,
    pub zlatm2_: Option<
        unsafe extern "C" fn(
            retval: *mut MKL_Complex16,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ii: *mut MKL_INT,
            j: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *const MKL_Complex16,
            igrade: *const MKL_INT,
            dl: *const MKL_Complex16,
            dr: *const MKL_Complex16,
            ipvtng: *const MKL_INT,
            iwork: *mut MKL_INT,
            sparse: *const f64,
        ),
    >,
    pub dlatm3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            ii: *mut MKL_INT,
            j: *const MKL_INT,
            isub: *mut MKL_INT,
            jsub: *mut MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *const f64,
            igrade: *const MKL_INT,
            dl: *const f64,
            dr: *const f64,
            ipvtng: *const MKL_INT,
            iwork: *const MKL_INT,
            sparse: *const f64,
        ) -> f64,
    >,
    pub slatm3_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            ii: *mut MKL_INT,
            j: *const MKL_INT,
            isub: *mut MKL_INT,
            jsub: *mut MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *const f32,
            igrade: *const MKL_INT,
            dl: *const f32,
            dr: *const f32,
            ipvtng: *const MKL_INT,
            iwork: *const MKL_INT,
            sparse: *const f32,
        ) -> f32,
    >,
    pub clatm3_: Option<
        unsafe extern "C" fn(
            retval: *mut MKL_Complex8,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ii: *mut MKL_INT,
            j: *const MKL_INT,
            isub: *mut MKL_INT,
            jsub: *mut MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *const MKL_Complex8,
            igrade: *const MKL_INT,
            dl: *const MKL_Complex8,
            dr: *const MKL_Complex8,
            ipvtng: *const MKL_INT,
            iwork: *const MKL_INT,
            sparse: *const f32,
        ),
    >,
    pub zlatm3_: Option<
        unsafe extern "C" fn(
            retval: *mut MKL_Complex16,
            m: *const MKL_INT,
            n: *const MKL_INT,
            ii: *mut MKL_INT,
            j: *const MKL_INT,
            isub: *mut MKL_INT,
            jsub: *mut MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
            d: *const MKL_Complex16,
            igrade: *const MKL_INT,
            dl: *const MKL_Complex16,
            dr: *const MKL_Complex16,
            ipvtng: *const MKL_INT,
            iwork: *const MKL_INT,
            sparse: *const f64,
        ),
    >,
    pub dlatm5_: Option<
        unsafe extern "C" fn(
            prtype: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            d: *mut f64,
            ldd: *const MKL_INT,
            e: *mut f64,
            lde: *const MKL_INT,
            f: *mut f64,
            ldf: *const MKL_INT,
            r: *mut f64,
            ldr: *const MKL_INT,
            l: *mut f64,
            ldl: *const MKL_INT,
            alpha: *const f64,
            qblcka: *const MKL_INT,
            qblckb: *const MKL_INT,
        ),
    >,
    pub slatm5_: Option<
        unsafe extern "C" fn(
            prtype: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            d: *mut f32,
            ldd: *const MKL_INT,
            e: *mut f32,
            lde: *const MKL_INT,
            f: *mut f32,
            ldf: *const MKL_INT,
            r: *mut f32,
            ldr: *const MKL_INT,
            l: *mut f32,
            ldl: *const MKL_INT,
            alpha: *const f32,
            qblcka: *const MKL_INT,
            qblckb: *const MKL_INT,
        ),
    >,
    pub clatm5_: Option<
        unsafe extern "C" fn(
            prtype: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            d: *mut MKL_Complex8,
            ldd: *const MKL_INT,
            e: *mut MKL_Complex8,
            lde: *const MKL_INT,
            f: *mut MKL_Complex8,
            ldf: *const MKL_INT,
            r: *mut MKL_Complex8,
            ldr: *const MKL_INT,
            l: *mut MKL_Complex8,
            ldl: *const MKL_INT,
            alpha: *const f32,
            qblcka: *const MKL_INT,
            qblckb: *const MKL_INT,
        ),
    >,
    pub zlatm5_: Option<
        unsafe extern "C" fn(
            prtype: *const MKL_INT,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            d: *mut MKL_Complex16,
            ldd: *const MKL_INT,
            e: *mut MKL_Complex16,
            lde: *const MKL_INT,
            f: *mut MKL_Complex16,
            ldf: *const MKL_INT,
            r: *mut MKL_Complex16,
            ldr: *const MKL_INT,
            l: *mut MKL_Complex16,
            ldl: *const MKL_INT,
            alpha: *const f64,
            qblcka: *const MKL_INT,
            qblckb: *const MKL_INT,
        ),
    >,
    pub dlatm6_: Option<
        unsafe extern "C" fn(
            type_: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            b: *mut f64,
            x: *mut f64,
            ldx: *const MKL_INT,
            y: *mut f64,
            ldy: *const MKL_INT,
            alpha: *const f64,
            beta: *const f64,
            wx: *const f64,
            wy: *const f64,
            s: *mut f64,
            dif: *mut f64,
        ),
    >,
    pub slatm6_: Option<
        unsafe extern "C" fn(
            type_: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            b: *mut f32,
            x: *mut f32,
            ldx: *const MKL_INT,
            y: *mut f32,
            ldy: *const MKL_INT,
            alpha: *const f32,
            beta: *const f32,
            wx: *const f32,
            wy: *const f32,
            s: *mut f32,
            dif: *mut f32,
        ),
    >,
    pub clatm6_: Option<
        unsafe extern "C" fn(
            type_: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            ldx: *const MKL_INT,
            y: *mut MKL_Complex8,
            ldy: *const MKL_INT,
            alpha: *const MKL_Complex8,
            beta: *const MKL_Complex8,
            wx: *const MKL_Complex8,
            wy: *const MKL_Complex8,
            s: *mut f32,
            dif: *mut f32,
        ),
    >,
    pub zlatm6_: Option<
        unsafe extern "C" fn(
            type_: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            ldx: *const MKL_INT,
            y: *mut MKL_Complex16,
            ldy: *const MKL_INT,
            alpha: *const MKL_Complex16,
            beta: *const MKL_Complex16,
            wx: *const MKL_Complex16,
            wy: *const MKL_Complex16,
            s: *mut f64,
            dif: *mut f64,
        ),
    >,
    pub dlatme_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            d: *mut f64,
            mode: *const MKL_INT,
            cond: *const f64,
            dmax: *const f64,
            ei: *const c_char,
            rsign: *const c_char,
            upper: *const c_char,
            sim: *const c_char,
            ds: *mut f64,
            modes: *const MKL_INT,
            conds: *const f64,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            anorm: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub slatme_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            d: *mut f32,
            mode: *const MKL_INT,
            cond: *const f32,
            dmax: *const f32,
            ei: *const c_char,
            rsign: *const c_char,
            upper: *const c_char,
            sim: *const c_char,
            ds: *mut f32,
            modes: *const MKL_INT,
            conds: *const f32,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            anorm: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub clatme_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            d: *mut MKL_Complex8,
            mode: *const MKL_INT,
            cond: *const f32,
            dmax: *const MKL_Complex8,
            rsign: *const c_char,
            upper: *const c_char,
            sim: *const c_char,
            ds: *mut f32,
            modes: *const MKL_INT,
            conds: *const f32,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            anorm: *const f32,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatme_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            d: *mut MKL_Complex16,
            mode: *const MKL_INT,
            cond: *const f64,
            dmax: *const MKL_Complex16,
            rsign: *const c_char,
            upper: *const c_char,
            sim: *const c_char,
            ds: *mut f64,
            modes: *const MKL_INT,
            conds: *const f64,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            anorm: *const f64,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatmr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            sym: *const c_char,
            d: *mut f64,
            mode: *const MKL_INT,
            cond: *const f64,
            dmax: *const f64,
            rsign: *const c_char,
            grade: *const c_char,
            dl: *mut f64,
            model: *const MKL_INT,
            condl: *const f64,
            dr: *mut f64,
            moder: *const MKL_INT,
            condr: *const f64,
            pivtng: *const c_char,
            ipivot: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            sparse: *const f64,
            anorm: *const f64,
            pack: *const c_char,
            a: *mut f64,
            lda: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub slatmr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            sym: *const c_char,
            d: *const f32,
            mode: *const MKL_INT,
            cond: *const f32,
            dmax: *const f32,
            rsign: *const c_char,
            grade: *const c_char,
            dl: *mut f32,
            model: *const MKL_INT,
            condl: *const f32,
            dr: *mut f32,
            moder: *const MKL_INT,
            condr: *const f32,
            pivtng: *const c_char,
            ipivot: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            sparse: *const f32,
            anorm: *const f32,
            pack: *const c_char,
            a: *mut f32,
            lda: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub clatmr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            sym: *const c_char,
            d: *mut MKL_Complex8,
            mode: *const MKL_INT,
            cond: *const f32,
            dmax: *const MKL_Complex8,
            rsign: *const c_char,
            grade: *const c_char,
            dl: *mut MKL_Complex8,
            model: *const MKL_INT,
            condl: *const f32,
            dr: *mut MKL_Complex8,
            moder: *const MKL_INT,
            condr: *const f32,
            pivtng: *const c_char,
            ipivot: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            sparse: *const f32,
            anorm: *const f32,
            pack: *const c_char,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatmr_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            sym: *const c_char,
            d: *mut MKL_Complex16,
            mode: *const MKL_INT,
            cond: *const f64,
            dmax: *const MKL_Complex16,
            rsign: *const c_char,
            grade: *const c_char,
            dl: *mut MKL_Complex16,
            model: *const MKL_INT,
            condl: *const f64,
            dr: *mut MKL_Complex16,
            moder: *const MKL_INT,
            condr: *const f64,
            pivtng: *const c_char,
            ipivot: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            sparse: *const f64,
            anorm: *const f64,
            pack: *const c_char,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            iwork: *mut MKL_INT,
            info: *mut MKL_INT,
        ),
    >,
    pub dlatms_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            sym: *const c_char,
            d: *mut f64,
            mode: *const MKL_INT,
            cond: *const f64,
            dmax: *const f64,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            pack: *const c_char,
            a: *mut f64,
            lda: *const MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub slatms_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            sym: *const c_char,
            d: *mut f32,
            mode: *const MKL_INT,
            cond: *const f32,
            dmax: *const f32,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            pack: *const c_char,
            a: *mut f32,
            lda: *const MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub clatms_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            sym: *const c_char,
            d: *mut f32,
            mode: *const MKL_INT,
            cond: *const f32,
            dmax: *const f32,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            pack: *const c_char,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zlatms_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            dist: *const c_char,
            iseed: *mut MKL_INT,
            sym: *const c_char,
            d: *mut f64,
            mode: *const MKL_INT,
            cond: *const f64,
            dmax: *const f64,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            pack: *const c_char,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub dlakf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            d: *const f64,
            e: *const f64,
            z: *mut f64,
            ldz: *const MKL_INT,
        ),
    >,
    pub slakf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            d: *const f32,
            e: *const f32,
            z: *mut f32,
            ldz: *const MKL_INT,
        ),
    >,
    pub clakf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            d: *const MKL_Complex8,
            e: *const MKL_Complex8,
            z: *mut MKL_Complex8,
            ldz: *const MKL_INT,
        ),
    >,
    pub zlakf2_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            d: *const MKL_Complex16,
            e: *const MKL_Complex16,
            z: *mut MKL_Complex16,
            ldz: *const MKL_INT,
        ),
    >,
    pub dlarge_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub slarge_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub clarge_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zlarge_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarnd_: Option<unsafe extern "C" fn(idist: *const MKL_INT, iseed: *mut MKL_INT) -> f64>,
    pub slarnd_: Option<unsafe extern "C" fn(idist: *const MKL_INT, iseed: *mut MKL_INT) -> f32>,
    pub clarnd_: Option<
        unsafe extern "C" fn(retval: *mut MKL_Complex8, idist: *const MKL_INT, iseed: *mut MKL_INT),
    >,
    pub zlarnd_: Option<
        unsafe extern "C" fn(
            retval: *mut MKL_Complex16,
            idist: *const MKL_INT,
            iseed: *mut MKL_INT,
        ),
    >,
    pub dlaror_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            init: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            x: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub slaror_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            init: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            x: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub claror_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            init: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            x: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaror_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            init: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            x: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub dlarot_: Option<
        unsafe extern "C" fn(
            lrows: *const MKL_INT,
            lleft: *const MKL_INT,
            lright: *const MKL_INT,
            nl: *const MKL_INT,
            c: *const f64,
            s: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
            xleft: *mut f64,
            xright: *mut f64,
        ),
    >,
    pub slarot_: Option<
        unsafe extern "C" fn(
            lrows: *const MKL_INT,
            lleft: *const MKL_INT,
            lright: *const MKL_INT,
            nl: *const MKL_INT,
            c: *const f32,
            s: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
            xleft: *mut f32,
            xright: *mut f32,
        ),
    >,
    pub clarot_: Option<
        unsafe extern "C" fn(
            lrows: *const MKL_INT,
            lleft: *const MKL_INT,
            lright: *mut MKL_INT,
            nl: *const MKL_INT,
            c: *const MKL_Complex8,
            s: *const MKL_Complex8,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            xleft: *mut MKL_Complex8,
            xright: *mut MKL_Complex8,
        ),
    >,
    pub zlarot_: Option<
        unsafe extern "C" fn(
            lrows: *const MKL_INT,
            lleft: *const MKL_INT,
            lright: *const MKL_INT,
            nl: *const MKL_INT,
            c: *const MKL_Complex16,
            s: *const MKL_Complex16,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            xleft: *mut MKL_Complex16,
            xright: *mut MKL_Complex16,
        ),
    >,
    pub dlaran_: Option<unsafe extern "C" fn(iseed: *mut MKL_INT) -> f64>,
    pub slaran_: Option<unsafe extern "C" fn(iseed: *mut MKL_INT) -> f32>,
    pub dlagge_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            d: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub slagge_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            d: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub clagge_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            d: *const f32,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zlagge_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            d: *const f64,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub clagsy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            d: *const f32,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub dlagsy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            d: *const f64,
            a: *mut f64,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut f64,
            info: *mut MKL_INT,
        ),
    >,
    pub slagsy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            d: *const f32,
            a: *mut f32,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut f32,
            info: *mut MKL_INT,
        ),
    >,
    pub zlagsy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            d: *const f64,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub claghe_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            d: *const f32,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut MKL_Complex8,
            info: *mut MKL_INT,
        ),
    >,
    pub zlaghe_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            k: *const MKL_INT,
            d: *const f64,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
            iseed: *mut MKL_INT,
            work: *mut MKL_Complex16,
            info: *mut MKL_INT,
        ),
    >,
    pub mkl_cspffrt2_: Option<
        unsafe extern "C" fn(
            ap: *mut MKL_Complex8,
            n: *const MKL_INT,
            ncolm: *const MKL_INT,
            work: *mut MKL_Complex8,
            work2: *mut MKL_Complex8,
        ),
    >,
    pub mkl_cspffrtx_: Option<
        unsafe extern "C" fn(
            ap: *mut MKL_Complex8,
            n: *const MKL_INT,
            ncolm: *const MKL_INT,
            work: *mut MKL_Complex8,
            work2: *mut MKL_Complex8,
        ),
    >,
    pub mkl_dspffrt2_: Option<
        unsafe extern "C" fn(
            ap: *mut f64,
            n: *const MKL_INT,
            ncolm: *const MKL_INT,
            work: *mut f64,
            work2: *mut f64,
        ),
    >,
    pub mkl_dspffrtx_: Option<
        unsafe extern "C" fn(
            ap: *mut f64,
            n: *const MKL_INT,
            ncolm: *const MKL_INT,
            work: *mut f64,
            work2: *mut f64,
        ),
    >,
    pub mkl_sspffrt2_: Option<
        unsafe extern "C" fn(
            ap: *mut f32,
            n: *const MKL_INT,
            ncolm: *const MKL_INT,
            work: *mut f32,
            work2: *mut f32,
        ),
    >,
    pub mkl_sspffrtx_: Option<
        unsafe extern "C" fn(
            ap: *mut f32,
            n: *const MKL_INT,
            ncolm: *const MKL_INT,
            work: *mut f32,
            work2: *mut f32,
        ),
    >,
    pub mkl_zspffrt2_: Option<
        unsafe extern "C" fn(
            ap: *mut MKL_Complex16,
            n: *const MKL_INT,
            ncolm: *const MKL_INT,
            work: *mut MKL_Complex16,
            work2: *mut MKL_Complex16,
        ),
    >,
    pub mkl_zspffrtx_: Option<
        unsafe extern "C" fn(
            ap: *mut MKL_Complex16,
            n: *const MKL_INT,
            ncolm: *const MKL_INT,
            work: *mut MKL_Complex16,
            work2: *mut MKL_Complex16,
        ),
    >,
    pub mkl_progress_: Option<
        unsafe extern "C" fn(
            thread: *mut c_int,
            step: *mut c_int,
            stage: *mut c_char,
            lstage: c_int,
        ) -> c_int,
    >,
}
