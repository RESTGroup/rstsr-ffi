//! Library struct definition for dynamic-loading.
//!
//! This file is generated automatically.

use super::*;

pub struct DyLoadLib {
    pub __libraries: Vec<libloading::Library>,
    pub __libraries_path: Vec<String>,
    pub xerbla_:
        Option<unsafe extern "C" fn(srname: *const c_char, info: *const c_int, lsrname: c_int)>,
    pub lsame_: Option<
        unsafe extern "C" fn(
            ca: *const c_char,
            cb: *const c_char,
            lca: MKL_INT,
            lcb: MKL_INT,
        ) -> c_int,
    >,
    pub scabs1_: Option<unsafe extern "C" fn(c: *const MKL_Complex8) -> f32>,
    pub sasum_:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *const f32, incx: *const MKL_INT) -> f32>,
    pub saxpy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub saxpby_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub saxpyi_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            a: *const f32,
            x: *const f32,
            indx: *const MKL_INT,
            y: *mut f32,
        ),
    >,
    pub scasum_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> f32,
    >,
    pub scnrm2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> f32,
    >,
    pub scopy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sdot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
        ) -> f32,
    >,
    pub sdoti_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *const f32,
            indx: *const MKL_INT,
            y: *const f32,
        ) -> f32,
    >,
    pub sdsdot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            sb: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
        ) -> f32,
    >,
    pub sgthr_: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, y: *const f32, x: *mut f32, indx: *const MKL_INT),
    >,
    pub sgthrz_: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, y: *mut f32, x: *mut f32, indx: *const MKL_INT),
    >,
    pub snrm2_:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *const f32, incx: *const MKL_INT) -> f32>,
    pub srot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const f32,
        ),
    >,
    pub srotg_: Option<unsafe extern "C" fn(a: *mut f32, b: *mut f32, c: *mut f32, s: *mut f32)>,
    pub sroti_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *mut f32,
            indx: *const MKL_INT,
            y: *mut f32,
            c: *const f32,
            s: *const f32,
        ),
    >,
    pub srotm_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            param: *const f32,
        ),
    >,
    pub srotmg_: Option<
        unsafe extern "C" fn(
            d1: *mut f32,
            d2: *mut f32,
            x1: *mut f32,
            y1: *const f32,
            param: *mut f32,
        ),
    >,
    pub sscal_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, a: *const f32, x: *mut f32, incx: *const MKL_INT),
    >,
    pub ssctr_: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, x: *const f32, indx: *const MKL_INT, y: *mut f32),
    >,
    pub sswap_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub isamax_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *const f32, incx: *const MKL_INT) -> MKL_INT,
    >,
    pub isamin_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *const f32, incx: *const MKL_INT) -> MKL_INT,
    >,
    pub caxpy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub caxpby_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub caxpyi_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            a: *const MKL_Complex8,
            x: *const MKL_Complex8,
            indx: *const MKL_INT,
            y: *mut MKL_Complex8,
        ),
    >,
    pub ccopy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cdotc_: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex8,
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cdotci_: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex8,
            nz: *const MKL_INT,
            x: *const MKL_Complex8,
            indx: *const MKL_INT,
            y: *const MKL_Complex8,
        ),
    >,
    pub cdotu_: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex8,
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cdotui_: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex8,
            nz: *const MKL_INT,
            x: *const MKL_Complex8,
            indx: *const MKL_INT,
            y: *const MKL_Complex8,
        ),
    >,
    pub cgthr_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            y: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            indx: *const MKL_INT,
        ),
    >,
    pub cgthrz_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            y: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            indx: *const MKL_INT,
        ),
    >,
    pub crot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const MKL_Complex8,
        ),
    >,
    pub crotg_: Option<
        unsafe extern "C" fn(
            a: *mut MKL_Complex8,
            b: *const MKL_Complex8,
            c: *mut f32,
            s: *mut MKL_Complex8,
        ),
    >,
    pub cscal_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub csctr_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *const MKL_Complex8,
            indx: *const MKL_INT,
            y: *mut MKL_Complex8,
        ),
    >,
    pub csrot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const f32,
        ),
    >,
    pub csscal_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f32,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub cswap_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub icamax_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub icamin_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub dcabs1_: Option<unsafe extern "C" fn(z: *const MKL_Complex16) -> f64>,
    pub dasum_:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *const f64, incx: *const MKL_INT) -> f64>,
    pub daxpy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub daxpby_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub daxpyi_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            a: *const f64,
            x: *const f64,
            indx: *const MKL_INT,
            y: *mut f64,
        ),
    >,
    pub dcopy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub ddot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            y: *const f64,
            incy: *const MKL_INT,
        ) -> f64,
    >,
    pub dsdot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
        ) -> f64,
    >,
    pub ddoti_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *const f64,
            indx: *const MKL_INT,
            y: *const f64,
        ) -> f64,
    >,
    pub dgthr_: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, y: *const f64, x: *mut f64, indx: *const MKL_INT),
    >,
    pub dgthrz_: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, y: *mut f64, x: *mut f64, indx: *const MKL_INT),
    >,
    pub dnrm2_:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *const f64, incx: *const MKL_INT) -> f64>,
    pub drot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const f64,
        ),
    >,
    pub drotg_: Option<unsafe extern "C" fn(a: *mut f64, b: *mut f64, c: *mut f64, s: *mut f64)>,
    pub droti_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *mut f64,
            indx: *const MKL_INT,
            y: *mut f64,
            c: *const f64,
            s: *const f64,
        ),
    >,
    pub drotm_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            param: *const f64,
        ),
    >,
    pub drotmg_: Option<
        unsafe extern "C" fn(
            d1: *mut f64,
            d2: *mut f64,
            x1: *mut f64,
            y1: *const f64,
            param: *mut f64,
        ),
    >,
    pub dscal_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, a: *const f64, x: *mut f64, incx: *const MKL_INT),
    >,
    pub dsctr_: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, x: *const f64, indx: *const MKL_INT, y: *mut f64),
    >,
    pub dswap_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dzasum_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> f64,
    >,
    pub dznrm2_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> f64,
    >,
    pub idamax_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *const f64, incx: *const MKL_INT) -> MKL_INT,
    >,
    pub idamin_: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *const f64, incx: *const MKL_INT) -> MKL_INT,
    >,
    pub zaxpy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zaxpby_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zaxpyi_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            a: *const MKL_Complex16,
            x: *const MKL_Complex16,
            indx: *const MKL_INT,
            y: *mut MKL_Complex16,
        ),
    >,
    pub zcopy_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zdotc_: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex16,
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zdotci_: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex16,
            nz: *const MKL_INT,
            x: *const MKL_Complex16,
            indx: *const MKL_INT,
            y: *const MKL_Complex16,
        ),
    >,
    pub zdotu_: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex16,
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zdotui_: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex16,
            nz: *const MKL_INT,
            x: *const MKL_Complex16,
            indx: *const MKL_INT,
            y: *const MKL_Complex16,
        ),
    >,
    pub zdrot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const f64,
        ),
    >,
    pub zdscal_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f64,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub zgthr_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            y: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            indx: *const MKL_INT,
        ),
    >,
    pub zgthrz_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            y: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            indx: *const MKL_INT,
        ),
    >,
    pub zrot_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const MKL_Complex16,
        ),
    >,
    pub zrotg_: Option<
        unsafe extern "C" fn(
            a: *mut MKL_Complex16,
            b: *const MKL_Complex16,
            c: *mut f64,
            s: *mut MKL_Complex16,
        ),
    >,
    pub zscal_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub zsctr_: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *const MKL_Complex16,
            indx: *const MKL_INT,
            y: *mut MKL_Complex16,
        ),
    >,
    pub zswap_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub izamax_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub izamin_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub sgbmv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sgemv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sger_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
        ),
    >,
    pub ssbmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sspmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            ap: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sspr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            ap: *mut f32,
        ),
    >,
    pub sspr2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
            ap: *mut f32,
        ),
    >,
    pub ssymv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub ssyr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
        ),
    >,
    pub ssyr2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
        ),
    >,
    pub stbmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub stbsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub stpmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub stpsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub strmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub strsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub sgem2vu_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x1: *const f32,
            incx1: *const MKL_INT,
            x2: *const f32,
            incx2: *const MKL_INT,
            beta: *const f32,
            y1: *mut f32,
            incy1: *const MKL_INT,
            y2: *mut f32,
            incy2: *const MKL_INT,
        ),
    >,
    pub cgbmv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cgemv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cgerc_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub cgeru_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub chbmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub chemv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cher_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub cher2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub chpmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            ap: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub chpr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            ap: *mut MKL_Complex8,
        ),
    >,
    pub chpr2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
            ap: *mut MKL_Complex8,
        ),
    >,
    pub ctbmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctbsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctpmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctpsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctrmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctrsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub cgem2vc_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x1: *const MKL_Complex8,
            incx1: *const MKL_INT,
            x2: *const MKL_Complex8,
            incx2: *const MKL_INT,
            beta: *const MKL_Complex8,
            y1: *mut MKL_Complex8,
            incy1: *const MKL_INT,
            y2: *mut MKL_Complex8,
            incy2: *const MKL_INT,
        ),
    >,
    pub scgemv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub dgbmv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dgemv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dger_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            y: *const f64,
            incy: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
        ),
    >,
    pub dsbmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dspmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            ap: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dspr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            ap: *mut f64,
        ),
    >,
    pub dspr2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            y: *const f64,
            incy: *const MKL_INT,
            ap: *mut f64,
        ),
    >,
    pub dsymv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dsyr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
        ),
    >,
    pub dsyr2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            y: *const f64,
            incy: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
        ),
    >,
    pub dtbmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtbsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtpmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtpsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtrmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtrsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dgem2vu_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x1: *const f64,
            incx1: *const MKL_INT,
            x2: *const f64,
            incx2: *const MKL_INT,
            beta: *const f64,
            y1: *mut f64,
            incy1: *const MKL_INT,
            y2: *mut f64,
            incy2: *const MKL_INT,
        ),
    >,
    pub zgbmv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zgemv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zgerc_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zgeru_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zhbmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zhemv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zher_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zher2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zhpmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            ap: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zhpr_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            ap: *mut MKL_Complex16,
        ),
    >,
    pub zhpr2_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
            ap: *mut MKL_Complex16,
        ),
    >,
    pub ztbmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztbsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztpmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztpsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztrmv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztrsv_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub zgem2vc_: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x1: *const MKL_Complex16,
            incx1: *const MKL_INT,
            x2: *const MKL_Complex16,
            incx2: *const MKL_INT,
            beta: *const MKL_Complex16,
            y1: *mut MKL_Complex16,
            incy1: *const MKL_INT,
            y2: *mut MKL_Complex16,
            incy2: *const MKL_INT,
        ),
    >,
    pub dzgemv_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub sgemm_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub sgemm_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub sgemm_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            src: *const f32,
            ld: *const MKL_INT,
            dest: *mut f32,
        ),
    >,
    pub sgemm_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub sgemm_batch_: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const f32,
            a_array: *mut *const f32,
            lda_array: *const MKL_INT,
            b_array: *mut *const f32,
            ldb_array: *const MKL_INT,
            beta_array: *const f32,
            c_array: *mut *mut f32,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub sgemm_batch_strided_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub sgemmt_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            transb: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub ssymm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub ssyr2k_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub ssyrk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub ssyrk_batch_: Option<
        unsafe extern "C" fn(
            uplo_array: *const c_char,
            trans_array: *const c_char,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const f32,
            a_array: *mut *const f32,
            lda_array: *const MKL_INT,
            beta_array: *const f32,
            c_array: *mut *mut f32,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ssyrk_batch_strided_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub strmm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub strmm_oop_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub strsm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub strsm_oop_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub strsm_batch_: Option<
        unsafe extern "C" fn(
            side_array: *const c_char,
            uplo_array: *const c_char,
            transa_array: *const c_char,
            diag_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            alpha_array: *const f32,
            a_array: *mut *const f32,
            lda_array: *const MKL_INT,
            b_array: *mut *mut f32,
            ldb: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub strsm_batch_strided_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub cgemm_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cgemm_batch_: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex8,
            a_array: *mut *const MKL_Complex8,
            lda_array: *const MKL_INT,
            b_array: *mut *const MKL_Complex8,
            ldb_array: *const MKL_INT,
            beta_array: *const MKL_Complex8,
            c_array: *mut *mut MKL_Complex8,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cgemm_batch_strided_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub scgemm_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cgemm3m_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cgemm3m_batch_: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex8,
            a_array: *mut *const MKL_Complex8,
            lda_array: *const MKL_INT,
            b_array: *mut *const MKL_Complex8,
            ldb_array: *const MKL_INT,
            beta_array: *const MKL_Complex8,
            c_array: *mut *mut MKL_Complex8,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cgemm3m_batch_strided_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub cgemmt_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            transb: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub chemm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cher2k_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cherk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            beta: *const f32,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub csymm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub csyr2k_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub csyrk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub csyrk_batch_: Option<
        unsafe extern "C" fn(
            uplo_array: *const c_char,
            trans_array: *const c_char,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex8,
            a_array: *mut *const MKL_Complex8,
            lda_array: *const MKL_INT,
            beta_array: *const MKL_Complex8,
            c_array: *mut *mut MKL_Complex8,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub csyrk_batch_strided_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub ctrmm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub ctrmm_oop_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub ctrsm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub ctrsm_oop_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub ctrsm_batch_: Option<
        unsafe extern "C" fn(
            side_array: *const c_char,
            uplo_array: *const c_char,
            transa_array: *const c_char,
            diag_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            alpha_array: *const MKL_Complex8,
            a_array: *mut *const MKL_Complex8,
            lda_array: *const MKL_INT,
            b_array: *mut *mut MKL_Complex8,
            ldb: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ctrsm_batch_strided_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dgemm_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dgemm_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub dgemm_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            src: *const f64,
            ld: *const MKL_INT,
            dest: *mut f64,
        ),
    >,
    pub dgemm_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dgemm_batch_: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const f64,
            a_array: *mut *const f64,
            lda_array: *const MKL_INT,
            b_array: *mut *const f64,
            ldb_array: *const MKL_INT,
            beta_array: *const f64,
            c_array: *mut *mut f64,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dgemm_batch_strided_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dgemmt_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            transb: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dsymm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dsyr2k_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dsyrk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dsyrk_batch_: Option<
        unsafe extern "C" fn(
            uplo_array: *const c_char,
            trans_array: *const c_char,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const f64,
            a_array: *mut *const f64,
            lda_array: *const MKL_INT,
            beta_array: *const f64,
            c_array: *mut *mut f64,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dsyrk_batch_strided_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dtrmm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub dtrmm_oop_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dtrsm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub dtrsm_oop_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dtrsm_batch_: Option<
        unsafe extern "C" fn(
            side_array: *const c_char,
            uplo_array: *const c_char,
            transa_array: *const c_char,
            diag_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            alpha_array: *const f64,
            a_array: *mut *const f64,
            lda_array: *const MKL_INT,
            b_array: *mut *mut f64,
            ldb: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dtrsm_batch_strided_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zgemm_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zgemm_batch_: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex16,
            a_array: *mut *const MKL_Complex16,
            lda_array: *const MKL_INT,
            b_array: *mut *const MKL_Complex16,
            ldb_array: *const MKL_INT,
            beta_array: *const MKL_Complex16,
            c_array: *mut *mut MKL_Complex16,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zgemm_batch_strided_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dzgemm_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zgemm3m_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zgemm3m_batch_: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex16,
            a_array: *mut *const MKL_Complex16,
            lda_array: *const MKL_INT,
            b_array: *mut *const MKL_Complex16,
            ldb_array: *const MKL_INT,
            beta_array: *const MKL_Complex16,
            c_array: *mut *mut MKL_Complex16,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zgemm3m_batch_strided_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zgemmt_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            transb: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zhemm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zher2k_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zherk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            beta: *const f64,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zsymm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zsyr2k_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zsyrk_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zsyrk_batch_: Option<
        unsafe extern "C" fn(
            uplo_array: *const c_char,
            trans_array: *const c_char,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex16,
            a_array: *mut *const MKL_Complex16,
            lda_array: *const MKL_INT,
            beta_array: *const MKL_Complex16,
            c_array: *mut *mut MKL_Complex16,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zsyrk_batch_strided_: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub ztrmm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub ztrmm_oop_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub ztrsm_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub ztrsm_oop_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub ztrsm_batch_: Option<
        unsafe extern "C" fn(
            side_array: *const c_char,
            uplo_array: *const c_char,
            transa_array: *const c_char,
            diag_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            alpha_array: *const MKL_Complex16,
            a_array: *mut *const MKL_Complex16,
            lda_array: *const MKL_INT,
            b_array: *mut *mut MKL_Complex16,
            ldb: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ztrsm_batch_strided_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub gemm_s16s16s32_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            offsetc: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_INT16,
            lda: *const MKL_INT,
            ao: *const MKL_INT16,
            b: *const MKL_INT16,
            ldb: *const MKL_INT,
            bo: *const MKL_INT16,
            beta: *const f32,
            c: *mut MKL_INT32,
            ldc: *const MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub gemm_s8u8s32_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            offsetc: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_INT8,
            lda: *const MKL_INT,
            ao: *const MKL_INT8,
            b: *const MKL_UINT8,
            ldb: *const MKL_INT,
            bo: *const MKL_INT8,
            beta: *const f32,
            c: *mut MKL_INT32,
            ldc: *const MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub gemm_bf16bf16f32_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_BF16,
            lda: *const MKL_INT,
            b: *const MKL_BF16,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_f16f16f32_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_F16,
            lda: *const MKL_INT,
            b: *const MKL_F16,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_e5m2e5m2f32_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_E5M2,
            lda: *const MKL_INT,
            b: *const MKL_E5M2,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_e4m3e4m3f32_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_E4M3,
            lda: *const MKL_INT,
            b: *const MKL_E4M3,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_s8u8s32_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_s16s16s32_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_bf16bf16f32_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_f16f16f32_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_e5m2e5m2f32_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_e4m3e4m3f32_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_s8u8s32_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const c_void,
            ld: *const MKL_INT,
            dest: *mut c_void,
        ),
    >,
    pub gemm_s16s16s32_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_INT16,
            ld: *const MKL_INT,
            dest: *mut MKL_INT16,
        ),
    >,
    pub gemm_bf16bf16f32_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_BF16,
            ld: *const MKL_INT,
            dest: *mut MKL_BF16,
        ),
    >,
    pub gemm_f16f16f32_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_F16,
            ld: *const MKL_INT,
            dest: *mut MKL_F16,
        ),
    >,
    pub gemm_e5m2e5m2f32_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_E5M2,
            ld: *const MKL_INT,
            dest: *mut MKL_E5M2,
        ),
    >,
    pub gemm_e4m3e4m3f32_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_E4M3,
            ld: *const MKL_INT,
            dest: *mut MKL_E4M3,
        ),
    >,
    pub gemm_s8u8s32_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            offsetc: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_INT8,
            lda: *const MKL_INT,
            ao: *const MKL_INT8,
            b: *const MKL_UINT8,
            ldb: *const MKL_INT,
            bo: *const MKL_INT8,
            beta: *const f32,
            c: *mut MKL_INT32,
            ldc: *const MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub gemm_s16s16s32_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            offsetc: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_INT16,
            lda: *const MKL_INT,
            ao: *const MKL_INT16,
            b: *const MKL_INT16,
            ldb: *const MKL_INT,
            bo: *const MKL_INT16,
            beta: *const f32,
            c: *mut MKL_INT32,
            ldc: *const MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub gemm_bf16bf16f32_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_BF16,
            lda: *const MKL_INT,
            b: *const MKL_BF16,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_f16f16f32_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_F16,
            lda: *const MKL_INT,
            b: *const MKL_F16,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_e5m2e5m2f32_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_E5M2,
            lda: *const MKL_INT,
            b: *const MKL_E5M2,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_e4m3e4m3f32_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_E4M3,
            lda: *const MKL_INT,
            b: *const MKL_E4M3,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub hgemm_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_F16,
            a: *const MKL_F16,
            lda: *const MKL_INT,
            b: *const MKL_F16,
            ldb: *const MKL_INT,
            beta: *const MKL_F16,
            c: *mut MKL_F16,
            ldc: *const MKL_INT,
        ),
    >,
    pub hgemm_pack_get_size_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub hgemm_pack_: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_F16,
            src: *const MKL_F16,
            ld: *const MKL_INT,
            dest: *mut MKL_F16,
        ),
    >,
    pub hgemm_compute_: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_F16,
            lda: *const MKL_INT,
            b: *const MKL_F16,
            ldb: *const MKL_INT,
            beta: *const MKL_F16,
            c: *mut MKL_F16,
            ldc: *const MKL_INT,
        ),
    >,
    pub mkl_cblas_jit_create_dgemm_: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: f64,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: f64,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_sgemm_: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: f32,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: f32,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_cgemm_: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: *const c_void,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: *const c_void,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_zgemm_: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: *const c_void,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: *const c_void,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_jit_get_dgemm_ptr_:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> dgemm_jit_kernel_t>,
    pub mkl_jit_get_sgemm_ptr_:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> sgemm_jit_kernel_t>,
    pub mkl_jit_get_cgemm_ptr_:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> cgemm_jit_kernel_t>,
    pub mkl_jit_get_zgemm_ptr_:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> zgemm_jit_kernel_t>,
    pub mkl_jit_destroy_: Option<unsafe extern "C" fn(jitter: *mut c_void) -> mkl_jit_status_t>,
    pub saxpy_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *mut *const f32,
            incx: *const MKL_INT,
            y: *mut *mut f32,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub daxpy_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *mut *const f64,
            incx: *const MKL_INT,
            y: *mut *mut f64,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub caxpy_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *mut *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut *mut MKL_Complex8,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zaxpy_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *mut *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut *mut MKL_Complex16,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub scopy_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const f32,
            incx: *const MKL_INT,
            y: *mut *mut f32,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dcopy_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const f64,
            incx: *const MKL_INT,
            y: *mut *mut f64,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ccopy_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut *mut MKL_Complex8,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zcopy_batch_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut *mut MKL_Complex16,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub saxpy_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub daxpy_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub caxpy_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zaxpy_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub scopy_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dcopy_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub ccopy_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zcopy_batch_strided_: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub sgemv_batch_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *mut *const f32,
            lda: *const MKL_INT,
            x: *mut *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut *mut f32,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub sgemv_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dgemv_batch_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *mut *const f64,
            lda: *const MKL_INT,
            x: *mut *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut *mut f64,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dgemv_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub cgemv_batch_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *mut *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut *mut MKL_Complex8,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cgemv_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zgemv_batch_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *mut *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut *mut MKL_Complex16,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zgemv_batch_strided_: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub sdgmm_batch_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const f32,
            lda: *const MKL_INT,
            x: *mut *const f32,
            incx: *const MKL_INT,
            c: *mut *mut f32,
            ldc: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub sdgmm_batch_strided_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub ddgmm_batch_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const f64,
            lda: *const MKL_INT,
            x: *mut *const f64,
            incx: *const MKL_INT,
            c: *mut *mut f64,
            ldc: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ddgmm_batch_strided_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub cdgmm_batch_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut *const MKL_Complex8,
            incx: *const MKL_INT,
            c: *mut *mut MKL_Complex8,
            ldc: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cdgmm_batch_strided_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zdgmm_batch_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut *const MKL_Complex16,
            incx: *const MKL_INT,
            c: *mut *mut MKL_Complex16,
            ldc: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zdgmm_batch_strided_: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
}
