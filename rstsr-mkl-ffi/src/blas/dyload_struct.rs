//! Library struct definition for dynamic-loading.
//!
//! This file is generated automatically.

use super::*;

pub struct DyLoadLib {
    pub __libraries: Vec<libloading::Library>,
    pub __libraries_path: Vec<String>,
    pub xerbla:
        Option<unsafe extern "C" fn(srname: *const c_char, info: *const c_int, lsrname: c_int)>,
    pub lsame: Option<
        unsafe extern "C" fn(
            ca: *const c_char,
            cb: *const c_char,
            lca: MKL_INT,
            lcb: MKL_INT,
        ) -> c_int,
    >,
    pub scabs1: Option<unsafe extern "C" fn(c: *const MKL_Complex8) -> f32>,
    pub sasum:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *const f32, incx: *const MKL_INT) -> f32>,
    pub saxpy: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub saxpby: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub saxpyi: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            a: *const f32,
            x: *const f32,
            indx: *const MKL_INT,
            y: *mut f32,
        ),
    >,
    pub scasum: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> f32,
    >,
    pub scnrm2: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> f32,
    >,
    pub scopy: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sdot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
        ) -> f32,
    >,
    pub sdoti: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *const f32,
            indx: *const MKL_INT,
            y: *const f32,
        ) -> f32,
    >,
    pub sdsdot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            sb: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
        ) -> f32,
    >,
    pub sgthr: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, y: *const f32, x: *mut f32, indx: *const MKL_INT),
    >,
    pub sgthrz: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, y: *mut f32, x: *mut f32, indx: *const MKL_INT),
    >,
    pub snrm2:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *const f32, incx: *const MKL_INT) -> f32>,
    pub srot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const f32,
        ),
    >,
    pub srotg: Option<unsafe extern "C" fn(a: *mut f32, b: *mut f32, c: *mut f32, s: *mut f32)>,
    pub sroti: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *mut f32,
            indx: *const MKL_INT,
            y: *mut f32,
            c: *const f32,
            s: *const f32,
        ),
    >,
    pub srotm: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            param: *const f32,
        ),
    >,
    pub srotmg: Option<
        unsafe extern "C" fn(
            d1: *mut f32,
            d2: *mut f32,
            x1: *mut f32,
            y1: *const f32,
            param: *mut f32,
        ),
    >,
    pub sscal: Option<
        unsafe extern "C" fn(n: *const MKL_INT, a: *const f32, x: *mut f32, incx: *const MKL_INT),
    >,
    pub ssctr: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, x: *const f32, indx: *const MKL_INT, y: *mut f32),
    >,
    pub sswap: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub isamax: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *const f32, incx: *const MKL_INT) -> MKL_INT,
    >,
    pub isamin: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *const f32, incx: *const MKL_INT) -> MKL_INT,
    >,
    pub caxpy: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub caxpby: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub caxpyi: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            a: *const MKL_Complex8,
            x: *const MKL_Complex8,
            indx: *const MKL_INT,
            y: *mut MKL_Complex8,
        ),
    >,
    pub ccopy: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cdotc: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex8,
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cdotci: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex8,
            nz: *const MKL_INT,
            x: *const MKL_Complex8,
            indx: *const MKL_INT,
            y: *const MKL_Complex8,
        ),
    >,
    pub cdotu: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex8,
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cdotui: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex8,
            nz: *const MKL_INT,
            x: *const MKL_Complex8,
            indx: *const MKL_INT,
            y: *const MKL_Complex8,
        ),
    >,
    pub cgthr: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            y: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            indx: *const MKL_INT,
        ),
    >,
    pub cgthrz: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            y: *mut MKL_Complex8,
            x: *mut MKL_Complex8,
            indx: *const MKL_INT,
        ),
    >,
    pub crot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const MKL_Complex8,
        ),
    >,
    pub crotg: Option<
        unsafe extern "C" fn(
            a: *mut MKL_Complex8,
            b: *const MKL_Complex8,
            c: *mut f32,
            s: *mut MKL_Complex8,
        ),
    >,
    pub cscal: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub csctr: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *const MKL_Complex8,
            indx: *const MKL_INT,
            y: *mut MKL_Complex8,
        ),
    >,
    pub csrot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            c: *const f32,
            s: *const f32,
        ),
    >,
    pub csscal: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f32,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub cswap: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub icamax: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub icamin: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub dcabs1: Option<unsafe extern "C" fn(z: *const MKL_Complex16) -> f64>,
    pub dasum:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *const f64, incx: *const MKL_INT) -> f64>,
    pub daxpy: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub daxpby: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub daxpyi: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            a: *const f64,
            x: *const f64,
            indx: *const MKL_INT,
            y: *mut f64,
        ),
    >,
    pub dcopy: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub ddot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            y: *const f64,
            incy: *const MKL_INT,
        ) -> f64,
    >,
    pub dsdot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
        ) -> f64,
    >,
    pub ddoti: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *const f64,
            indx: *const MKL_INT,
            y: *const f64,
        ) -> f64,
    >,
    pub dgthr: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, y: *const f64, x: *mut f64, indx: *const MKL_INT),
    >,
    pub dgthrz: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, y: *mut f64, x: *mut f64, indx: *const MKL_INT),
    >,
    pub dnrm2:
        Option<unsafe extern "C" fn(n: *const MKL_INT, x: *const f64, incx: *const MKL_INT) -> f64>,
    pub drot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const f64,
        ),
    >,
    pub drotg: Option<unsafe extern "C" fn(a: *mut f64, b: *mut f64, c: *mut f64, s: *mut f64)>,
    pub droti: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *mut f64,
            indx: *const MKL_INT,
            y: *mut f64,
            c: *const f64,
            s: *const f64,
        ),
    >,
    pub drotm: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            param: *const f64,
        ),
    >,
    pub drotmg: Option<
        unsafe extern "C" fn(
            d1: *mut f64,
            d2: *mut f64,
            x1: *mut f64,
            y1: *const f64,
            param: *mut f64,
        ),
    >,
    pub dscal: Option<
        unsafe extern "C" fn(n: *const MKL_INT, a: *const f64, x: *mut f64, incx: *const MKL_INT),
    >,
    pub dsctr: Option<
        unsafe extern "C" fn(nz: *const MKL_INT, x: *const f64, indx: *const MKL_INT, y: *mut f64),
    >,
    pub dswap: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dzasum: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> f64,
    >,
    pub dznrm2: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> f64,
    >,
    pub idamax: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *const f64, incx: *const MKL_INT) -> MKL_INT,
    >,
    pub idamin: Option<
        unsafe extern "C" fn(n: *const MKL_INT, x: *const f64, incx: *const MKL_INT) -> MKL_INT,
    >,
    pub zaxpy: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zaxpby: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zaxpyi: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            a: *const MKL_Complex16,
            x: *const MKL_Complex16,
            indx: *const MKL_INT,
            y: *mut MKL_Complex16,
        ),
    >,
    pub zcopy: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zdotc: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex16,
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zdotci: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex16,
            nz: *const MKL_INT,
            x: *const MKL_Complex16,
            indx: *const MKL_INT,
            y: *const MKL_Complex16,
        ),
    >,
    pub zdotu: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex16,
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zdotui: Option<
        unsafe extern "C" fn(
            pres: *mut MKL_Complex16,
            nz: *const MKL_INT,
            x: *const MKL_Complex16,
            indx: *const MKL_INT,
            y: *const MKL_Complex16,
        ),
    >,
    pub zdrot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const f64,
        ),
    >,
    pub zdscal: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const f64,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub zgthr: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            y: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            indx: *const MKL_INT,
        ),
    >,
    pub zgthrz: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            y: *mut MKL_Complex16,
            x: *mut MKL_Complex16,
            indx: *const MKL_INT,
        ),
    >,
    pub zrot: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            c: *const f64,
            s: *const MKL_Complex16,
        ),
    >,
    pub zrotg: Option<
        unsafe extern "C" fn(
            a: *mut MKL_Complex16,
            b: *const MKL_Complex16,
            c: *mut f64,
            s: *mut MKL_Complex16,
        ),
    >,
    pub zscal: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub zsctr: Option<
        unsafe extern "C" fn(
            nz: *const MKL_INT,
            x: *const MKL_Complex16,
            indx: *const MKL_INT,
            y: *mut MKL_Complex16,
        ),
    >,
    pub zswap: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub izamax: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub izamin: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
        ) -> MKL_INT,
    >,
    pub sgbmv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sgemv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sger: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
        ),
    >,
    pub ssbmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sspmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            ap: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub sspr: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            ap: *mut f32,
        ),
    >,
    pub sspr2: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
            ap: *mut f32,
        ),
    >,
    pub ssymv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
        ),
    >,
    pub ssyr: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
        ),
    >,
    pub ssyr2: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            y: *const f32,
            incy: *const MKL_INT,
            a: *mut f32,
            lda: *const MKL_INT,
        ),
    >,
    pub stbmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub stbsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub stpmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub stpsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f32,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub strmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub strsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            x: *mut f32,
            incx: *const MKL_INT,
        ),
    >,
    pub sgem2vu: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            x1: *const f32,
            incx1: *const MKL_INT,
            x2: *const f32,
            incx2: *const MKL_INT,
            beta: *const f32,
            y1: *mut f32,
            incy1: *const MKL_INT,
            y2: *mut f32,
            incy2: *const MKL_INT,
        ),
    >,
    pub cgbmv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cgemv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cgerc: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub cgeru: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub chbmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub chemv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub cher: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub cher2: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
            a: *mut MKL_Complex8,
            lda: *const MKL_INT,
        ),
    >,
    pub chpmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            ap: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub chpr: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            ap: *mut MKL_Complex8,
        ),
    >,
    pub chpr2: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *const MKL_Complex8,
            incy: *const MKL_INT,
            ap: *mut MKL_Complex8,
        ),
    >,
    pub ctbmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctbsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctpmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctpsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex8,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctrmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub ctrsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut MKL_Complex8,
            incx: *const MKL_INT,
        ),
    >,
    pub cgem2vc: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            x1: *const MKL_Complex8,
            incx1: *const MKL_INT,
            x2: *const MKL_Complex8,
            incx2: *const MKL_INT,
            beta: *const MKL_Complex8,
            y1: *mut MKL_Complex8,
            incy1: *const MKL_INT,
            y2: *mut MKL_Complex8,
            incy2: *const MKL_INT,
        ),
    >,
    pub scgemv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const f32,
            lda: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
        ),
    >,
    pub dgbmv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dgemv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dger: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            y: *const f64,
            incy: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
        ),
    >,
    pub dsbmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dspmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            ap: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dspr: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            ap: *mut f64,
        ),
    >,
    pub dspr2: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            y: *const f64,
            incy: *const MKL_INT,
            ap: *mut f64,
        ),
    >,
    pub dsymv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
        ),
    >,
    pub dsyr: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
        ),
    >,
    pub dsyr2: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            y: *const f64,
            incy: *const MKL_INT,
            a: *mut f64,
            lda: *const MKL_INT,
        ),
    >,
    pub dtbmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtbsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtpmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtpsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const f64,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtrmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dtrsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            x: *mut f64,
            incx: *const MKL_INT,
        ),
    >,
    pub dgem2vu: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            x1: *const f64,
            incx1: *const MKL_INT,
            x2: *const f64,
            incx2: *const MKL_INT,
            beta: *const f64,
            y1: *mut f64,
            incy1: *const MKL_INT,
            y2: *mut f64,
            incy2: *const MKL_INT,
        ),
    >,
    pub zgbmv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            kl: *const MKL_INT,
            ku: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zgemv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zgerc: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zgeru: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zhbmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zhemv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zher: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zher2: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
            a: *mut MKL_Complex16,
            lda: *const MKL_INT,
        ),
    >,
    pub zhpmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            ap: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub zhpr: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            ap: *mut MKL_Complex16,
        ),
    >,
    pub zhpr2: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *const MKL_Complex16,
            incy: *const MKL_INT,
            ap: *mut MKL_Complex16,
        ),
    >,
    pub ztbmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztbsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztpmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztpsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            ap: *const MKL_Complex16,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztrmv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub ztrsv: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            diag: *const c_char,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut MKL_Complex16,
            incx: *const MKL_INT,
        ),
    >,
    pub zgem2vc: Option<
        unsafe extern "C" fn(
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            x1: *const MKL_Complex16,
            incx1: *const MKL_INT,
            x2: *const MKL_Complex16,
            incx2: *const MKL_INT,
            beta: *const MKL_Complex16,
            y1: *mut MKL_Complex16,
            incy1: *const MKL_INT,
            y2: *mut MKL_Complex16,
            incy2: *const MKL_INT,
        ),
    >,
    pub dzgemv: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const f64,
            lda: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
        ),
    >,
    pub sgemm: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub sgemm_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub sgemm_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            src: *const f32,
            ld: *const MKL_INT,
            dest: *mut f32,
        ),
    >,
    pub sgemm_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub sgemm_batch: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const f32,
            a_array: *mut *const f32,
            lda_array: *const MKL_INT,
            b_array: *mut *const f32,
            ldb_array: *const MKL_INT,
            beta_array: *const f32,
            c_array: *mut *mut f32,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub sgemm_batch_strided: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub sgemmt: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            transb: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub ssymm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub ssyr2k: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub ssyrk: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub ssyrk_batch: Option<
        unsafe extern "C" fn(
            uplo_array: *const c_char,
            trans_array: *const c_char,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const f32,
            a_array: *mut *const f32,
            lda_array: *const MKL_INT,
            beta_array: *const f32,
            c_array: *mut *mut f32,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ssyrk_batch_strided: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub strmm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub strmm_oop: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub strsm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
        ),
    >,
    pub strsm_oop: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const f32,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub strsm_batch: Option<
        unsafe extern "C" fn(
            side_array: *const c_char,
            uplo_array: *const c_char,
            transa_array: *const c_char,
            diag_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            alpha_array: *const f32,
            a_array: *mut *const f32,
            lda_array: *const MKL_INT,
            b_array: *mut *mut f32,
            ldb: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub strsm_batch_strided: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *mut f32,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub cgemm: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cgemm_batch: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex8,
            a_array: *mut *const MKL_Complex8,
            lda_array: *const MKL_INT,
            b_array: *mut *const MKL_Complex8,
            ldb_array: *const MKL_INT,
            beta_array: *const MKL_Complex8,
            c_array: *mut *mut MKL_Complex8,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cgemm_batch_strided: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub scgemm: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const f32,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cgemm3m: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cgemm3m_batch: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex8,
            a_array: *mut *const MKL_Complex8,
            lda_array: *const MKL_INT,
            b_array: *mut *const MKL_Complex8,
            ldb_array: *const MKL_INT,
            beta_array: *const MKL_Complex8,
            c_array: *mut *mut MKL_Complex8,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cgemm3m_batch_strided: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub cgemmt: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            transb: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub chemm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cher2k: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub cherk: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            beta: *const f32,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub csymm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub csyr2k: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub csyrk: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub csyrk_batch: Option<
        unsafe extern "C" fn(
            uplo_array: *const c_char,
            trans_array: *const c_char,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex8,
            a_array: *mut *const MKL_Complex8,
            lda_array: *const MKL_INT,
            beta_array: *const MKL_Complex8,
            c_array: *mut *mut MKL_Complex8,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub csyrk_batch_strided: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub ctrmm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub ctrmm_oop: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub ctrsm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
        ),
    >,
    pub ctrsm_oop: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            b: *const MKL_Complex8,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex8,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
        ),
    >,
    pub ctrsm_batch: Option<
        unsafe extern "C" fn(
            side_array: *const c_char,
            uplo_array: *const c_char,
            transa_array: *const c_char,
            diag_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            alpha_array: *const MKL_Complex8,
            a_array: *mut *const MKL_Complex8,
            lda_array: *const MKL_INT,
            b_array: *mut *mut MKL_Complex8,
            ldb: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ctrsm_batch_strided: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *mut MKL_Complex8,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dgemm: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dgemm_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub dgemm_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            src: *const f64,
            ld: *const MKL_INT,
            dest: *mut f64,
        ),
    >,
    pub dgemm_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dgemm_batch: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const f64,
            a_array: *mut *const f64,
            lda_array: *const MKL_INT,
            b_array: *mut *const f64,
            ldb_array: *const MKL_INT,
            beta_array: *const f64,
            c_array: *mut *mut f64,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dgemm_batch_strided: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dgemmt: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            transb: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dsymm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dsyr2k: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dsyrk: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dsyrk_batch: Option<
        unsafe extern "C" fn(
            uplo_array: *const c_char,
            trans_array: *const c_char,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const f64,
            a_array: *mut *const f64,
            lda_array: *const MKL_INT,
            beta_array: *const f64,
            c_array: *mut *mut f64,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dsyrk_batch_strided: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dtrmm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub dtrmm_oop: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dtrsm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
        ),
    >,
    pub dtrsm_oop: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const f64,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut f64,
            ldc: *const MKL_INT,
        ),
    >,
    pub dtrsm_batch: Option<
        unsafe extern "C" fn(
            side_array: *const c_char,
            uplo_array: *const c_char,
            transa_array: *const c_char,
            diag_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            alpha_array: *const f64,
            a_array: *mut *const f64,
            lda_array: *const MKL_INT,
            b_array: *mut *mut f64,
            ldb: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dtrsm_batch_strided: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *mut f64,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zgemm: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zgemm_batch: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex16,
            a_array: *mut *const MKL_Complex16,
            lda_array: *const MKL_INT,
            b_array: *mut *const MKL_Complex16,
            ldb_array: *const MKL_INT,
            beta_array: *const MKL_Complex16,
            c_array: *mut *mut MKL_Complex16,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zgemm_batch_strided: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dzgemm: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const f64,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zgemm3m: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zgemm3m_batch: Option<
        unsafe extern "C" fn(
            transa_array: *const c_char,
            transb_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex16,
            a_array: *mut *const MKL_Complex16,
            lda_array: *const MKL_INT,
            b_array: *mut *const MKL_Complex16,
            ldb_array: *const MKL_INT,
            beta_array: *const MKL_Complex16,
            c_array: *mut *mut MKL_Complex16,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zgemm3m_batch_strided: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zgemmt: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            transa: *const c_char,
            transb: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zhemm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zher2k: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const f64,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zherk: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f64,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            beta: *const f64,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zsymm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zsyr2k: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zsyrk: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub zsyrk_batch: Option<
        unsafe extern "C" fn(
            uplo_array: *const c_char,
            trans_array: *const c_char,
            n_array: *const MKL_INT,
            k_array: *const MKL_INT,
            alpha_array: *const MKL_Complex16,
            a_array: *mut *const MKL_Complex16,
            lda_array: *const MKL_INT,
            beta_array: *const MKL_Complex16,
            c_array: *mut *mut MKL_Complex16,
            ldc_array: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zsyrk_batch_strided: Option<
        unsafe extern "C" fn(
            uplo: *const c_char,
            trans: *const c_char,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub ztrmm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub ztrmm_oop: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub ztrsm: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
        ),
    >,
    pub ztrsm_oop: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            b: *const MKL_Complex16,
            ldb: *const MKL_INT,
            beta: *const MKL_Complex16,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
        ),
    >,
    pub ztrsm_batch: Option<
        unsafe extern "C" fn(
            side_array: *const c_char,
            uplo_array: *const c_char,
            transa_array: *const c_char,
            diag_array: *const c_char,
            m_array: *const MKL_INT,
            n_array: *const MKL_INT,
            alpha_array: *const MKL_Complex16,
            a_array: *mut *const MKL_Complex16,
            lda_array: *const MKL_INT,
            b_array: *mut *mut MKL_Complex16,
            ldb: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ztrsm_batch_strided: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            uplo: *const c_char,
            transa: *const c_char,
            diag: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            b: *mut MKL_Complex16,
            ldb: *const MKL_INT,
            strideb: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub gemm_s16s16s32: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            offsetc: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_INT16,
            lda: *const MKL_INT,
            ao: *const MKL_INT16,
            b: *const MKL_INT16,
            ldb: *const MKL_INT,
            bo: *const MKL_INT16,
            beta: *const f32,
            c: *mut MKL_INT32,
            ldc: *const MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub gemm_s8u8s32: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            offsetc: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_INT8,
            lda: *const MKL_INT,
            ao: *const MKL_INT8,
            b: *const MKL_UINT8,
            ldb: *const MKL_INT,
            bo: *const MKL_INT8,
            beta: *const f32,
            c: *mut MKL_INT32,
            ldc: *const MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub gemm_bf16bf16f32: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_BF16,
            lda: *const MKL_INT,
            b: *const MKL_BF16,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_f16f16f32: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_F16,
            lda: *const MKL_INT,
            b: *const MKL_F16,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_e5m2e5m2f32: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_E5M2,
            lda: *const MKL_INT,
            b: *const MKL_E5M2,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_e4m3e4m3f32: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_E4M3,
            lda: *const MKL_INT,
            b: *const MKL_E4M3,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_s8u8s32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_s16s16s32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_bf16bf16f32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_f16f16f32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_e5m2e5m2f32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_e4m3e4m3f32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub gemm_s8u8s32_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const c_void,
            ld: *const MKL_INT,
            dest: *mut c_void,
        ),
    >,
    pub gemm_s16s16s32_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_INT16,
            ld: *const MKL_INT,
            dest: *mut MKL_INT16,
        ),
    >,
    pub gemm_bf16bf16f32_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_BF16,
            ld: *const MKL_INT,
            dest: *mut MKL_BF16,
        ),
    >,
    pub gemm_f16f16f32_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_F16,
            ld: *const MKL_INT,
            dest: *mut MKL_F16,
        ),
    >,
    pub gemm_e5m2e5m2f32_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_E5M2,
            ld: *const MKL_INT,
            dest: *mut MKL_E5M2,
        ),
    >,
    pub gemm_e4m3e4m3f32_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            src: *const MKL_E4M3,
            ld: *const MKL_INT,
            dest: *mut MKL_E4M3,
        ),
    >,
    pub gemm_s8u8s32_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            offsetc: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_INT8,
            lda: *const MKL_INT,
            ao: *const MKL_INT8,
            b: *const MKL_UINT8,
            ldb: *const MKL_INT,
            bo: *const MKL_INT8,
            beta: *const f32,
            c: *mut MKL_INT32,
            ldc: *const MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub gemm_s16s16s32_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            offsetc: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_INT16,
            lda: *const MKL_INT,
            ao: *const MKL_INT16,
            b: *const MKL_INT16,
            ldb: *const MKL_INT,
            bo: *const MKL_INT16,
            beta: *const f32,
            c: *mut MKL_INT32,
            ldc: *const MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub gemm_bf16bf16f32_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_BF16,
            lda: *const MKL_INT,
            b: *const MKL_BF16,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_f16f16f32_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_F16,
            lda: *const MKL_INT,
            b: *const MKL_F16,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_e5m2e5m2f32_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_E5M2,
            lda: *const MKL_INT,
            b: *const MKL_E5M2,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub gemm_e4m3e4m3f32_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const f32,
            a: *const MKL_E4M3,
            lda: *const MKL_INT,
            b: *const MKL_E4M3,
            ldb: *const MKL_INT,
            beta: *const f32,
            c: *mut f32,
            ldc: *const MKL_INT,
        ),
    >,
    pub hgemm: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_F16,
            a: *const MKL_F16,
            lda: *const MKL_INT,
            b: *const MKL_F16,
            ldb: *const MKL_INT,
            beta: *const MKL_F16,
            c: *mut MKL_F16,
            ldc: *const MKL_INT,
        ),
    >,
    pub hgemm_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
        ) -> usize,
    >,
    pub hgemm_pack: Option<
        unsafe extern "C" fn(
            identifier: *const c_char,
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            alpha: *const MKL_F16,
            src: *const MKL_F16,
            ld: *const MKL_INT,
            dest: *mut MKL_F16,
        ),
    >,
    pub hgemm_compute: Option<
        unsafe extern "C" fn(
            transa: *const c_char,
            transb: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            k: *const MKL_INT,
            a: *const MKL_F16,
            lda: *const MKL_INT,
            b: *const MKL_F16,
            ldb: *const MKL_INT,
            beta: *const MKL_F16,
            c: *mut MKL_F16,
            ldc: *const MKL_INT,
        ),
    >,
    pub mkl_cblas_jit_create_dgemm: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: f64,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: f64,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_sgemm: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: f32,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: f32,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_cgemm: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: *const c_void,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: *const c_void,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_zgemm: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: *const c_void,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: *const c_void,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_jit_get_dgemm_ptr:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> dgemm_jit_kernel_t>,
    pub mkl_jit_get_sgemm_ptr:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> sgemm_jit_kernel_t>,
    pub mkl_jit_get_cgemm_ptr:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> cgemm_jit_kernel_t>,
    pub mkl_jit_get_zgemm_ptr:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> zgemm_jit_kernel_t>,
    pub mkl_jit_destroy: Option<unsafe extern "C" fn(jitter: *mut c_void) -> mkl_jit_status_t>,
    pub saxpy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *mut *const f32,
            incx: *const MKL_INT,
            y: *mut *mut f32,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub daxpy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *mut *const f64,
            incx: *const MKL_INT,
            y: *mut *mut f64,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub caxpy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *mut *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut *mut MKL_Complex8,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zaxpy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *mut *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut *mut MKL_Complex16,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub scopy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const f32,
            incx: *const MKL_INT,
            y: *mut *mut f32,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dcopy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const f64,
            incx: *const MKL_INT,
            y: *mut *mut f64,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ccopy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const MKL_Complex8,
            incx: *const MKL_INT,
            y: *mut *mut MKL_Complex8,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zcopy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const MKL_Complex16,
            incx: *const MKL_INT,
            y: *mut *mut MKL_Complex16,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub saxpy_batch_strided: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *const f32,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub daxpy_batch_strided: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *const f64,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub caxpy_batch_strided: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zaxpy_batch_strided: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub scopy_batch_strided: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut f32,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dcopy_batch_strided: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut f64,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub ccopy_batch_strided: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zcopy_batch_strided: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub sgemv_batch: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *mut *const f32,
            lda: *const MKL_INT,
            x: *mut *const f32,
            incx: *const MKL_INT,
            beta: *const f32,
            y: *mut *mut f32,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub sgemv_batch_strided: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f32,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            beta: *const f32,
            y: *mut f32,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub dgemv_batch: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *mut *const f64,
            lda: *const MKL_INT,
            x: *mut *const f64,
            incx: *const MKL_INT,
            beta: *const f64,
            y: *mut *mut f64,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub dgemv_batch_strided: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const f64,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            beta: *const f64,
            y: *mut f64,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub cgemv_batch: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *mut *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut *const MKL_Complex8,
            incx: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut *mut MKL_Complex8,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cgemv_batch_strided: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex8,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            beta: *const MKL_Complex8,
            y: *mut MKL_Complex8,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zgemv_batch: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *mut *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut *const MKL_Complex16,
            incx: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut *mut MKL_Complex16,
            incy: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zgemv_batch_strided: Option<
        unsafe extern "C" fn(
            trans: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            alpha: *const MKL_Complex16,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            beta: *const MKL_Complex16,
            y: *mut MKL_Complex16,
            incy: *const MKL_INT,
            stridey: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub sdgmm_batch: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const f32,
            lda: *const MKL_INT,
            x: *mut *const f32,
            incx: *const MKL_INT,
            c: *mut *mut f32,
            ldc: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub sdgmm_batch_strided: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f32,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const f32,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            c: *mut f32,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub ddgmm_batch: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const f64,
            lda: *const MKL_INT,
            x: *mut *const f64,
            incx: *const MKL_INT,
            c: *mut *mut f64,
            ldc: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub ddgmm_batch_strided: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const f64,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const f64,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            c: *mut f64,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub cdgmm_batch: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const MKL_Complex8,
            lda: *const MKL_INT,
            x: *mut *const MKL_Complex8,
            incx: *const MKL_INT,
            c: *mut *mut MKL_Complex8,
            ldc: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cdgmm_batch_strided: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex8,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const MKL_Complex8,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            c: *mut MKL_Complex8,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
    pub zdgmm_batch: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const MKL_Complex16,
            lda: *const MKL_INT,
            x: *mut *const MKL_Complex16,
            incx: *const MKL_INT,
            c: *mut *mut MKL_Complex16,
            ldc: *const MKL_INT,
            group_count: *const MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub zdgmm_batch_strided: Option<
        unsafe extern "C" fn(
            side: *const c_char,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *const MKL_Complex16,
            lda: *const MKL_INT,
            stridea: *const MKL_INT,
            x: *const MKL_Complex16,
            incx: *const MKL_INT,
            stridex: *const MKL_INT,
            c: *mut MKL_Complex16,
            ldc: *const MKL_INT,
            stridec: *const MKL_INT,
            batch_size: *const MKL_INT,
        ),
    >,
}
