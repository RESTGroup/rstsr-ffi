//! Library struct definition for dynamic-loading.
//!
//! This file is generated automatically.

use super::*;

pub struct DyLoadLib {
    pub __libraries: Vec<libloading::Library>,
    pub __libraries_path: Vec<String>,
    pub cblas_dcabs1: Option<unsafe extern "C" fn(z: *const c_void) -> f64>,
    pub cblas_scabs1: Option<unsafe extern "C" fn(c: *const c_void) -> f32>,
    pub cblas_sdot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const f32,
            incX: MKL_INT,
            Y: *const f32,
            incY: MKL_INT,
        ) -> f32,
    >,
    pub cblas_sdoti: Option<
        unsafe extern "C" fn(N: MKL_INT, X: *const f32, indx: *const MKL_INT, Y: *const f32) -> f32,
    >,
    pub cblas_ddot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const f64,
            incX: MKL_INT,
            Y: *const f64,
            incY: MKL_INT,
        ) -> f64,
    >,
    pub cblas_ddoti: Option<
        unsafe extern "C" fn(N: MKL_INT, X: *const f64, indx: *const MKL_INT, Y: *const f64) -> f64,
    >,
    pub cblas_dsdot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const f32,
            incX: MKL_INT,
            Y: *const f32,
            incY: MKL_INT,
        ) -> f64,
    >,
    pub cblas_sdsdot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            sb: f32,
            X: *const f32,
            incX: MKL_INT,
            Y: *const f32,
            incY: MKL_INT,
        ) -> f32,
    >,
    pub cblas_cdotu_sub: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            dotu: *mut c_void,
        ),
    >,
    pub cblas_cdotui_sub: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            indx: *const MKL_INT,
            Y: *const c_void,
            dotui: *mut c_void,
        ),
    >,
    pub cblas_cdotc_sub: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            dotc: *mut c_void,
        ),
    >,
    pub cblas_cdotci_sub: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            indx: *const MKL_INT,
            Y: *const c_void,
            dotui: *mut c_void,
        ),
    >,
    pub cblas_zdotu_sub: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            dotu: *mut c_void,
        ),
    >,
    pub cblas_zdotui_sub: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            indx: *const MKL_INT,
            Y: *const c_void,
            dotui: *mut c_void,
        ),
    >,
    pub cblas_zdotc_sub: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            dotc: *mut c_void,
        ),
    >,
    pub cblas_zdotci_sub: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            indx: *const MKL_INT,
            Y: *const c_void,
            dotui: *mut c_void,
        ),
    >,
    pub cblas_snrm2: Option<unsafe extern "C" fn(N: MKL_INT, X: *const f32, incX: MKL_INT) -> f32>,
    pub cblas_sasum: Option<unsafe extern "C" fn(N: MKL_INT, X: *const f32, incX: MKL_INT) -> f32>,
    pub cblas_dnrm2: Option<unsafe extern "C" fn(N: MKL_INT, X: *const f64, incX: MKL_INT) -> f64>,
    pub cblas_dasum: Option<unsafe extern "C" fn(N: MKL_INT, X: *const f64, incX: MKL_INT) -> f64>,
    pub cblas_scnrm2:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const c_void, incX: MKL_INT) -> f32>,
    pub cblas_scasum:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const c_void, incX: MKL_INT) -> f32>,
    pub cblas_dznrm2:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const c_void, incX: MKL_INT) -> f64>,
    pub cblas_dzasum:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const c_void, incX: MKL_INT) -> f64>,
    pub cblas_isamax:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const f32, incX: MKL_INT) -> usize>,
    pub cblas_idamax:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const f64, incX: MKL_INT) -> usize>,
    pub cblas_icamax:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const c_void, incX: MKL_INT) -> usize>,
    pub cblas_izamax:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const c_void, incX: MKL_INT) -> usize>,
    pub cblas_isamin:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const f32, incX: MKL_INT) -> usize>,
    pub cblas_idamin:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const f64, incX: MKL_INT) -> usize>,
    pub cblas_icamin:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const c_void, incX: MKL_INT) -> usize>,
    pub cblas_izamin:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const c_void, incX: MKL_INT) -> usize>,
    pub cblas_sswap: Option<
        unsafe extern "C" fn(N: MKL_INT, X: *mut f32, incX: MKL_INT, Y: *mut f32, incY: MKL_INT),
    >,
    pub cblas_scopy: Option<
        unsafe extern "C" fn(N: MKL_INT, X: *const f32, incX: MKL_INT, Y: *mut f32, incY: MKL_INT),
    >,
    pub cblas_saxpy: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            incX: MKL_INT,
            Y: *mut f32,
            incY: MKL_INT,
        ),
    >,
    pub cblas_saxpby: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            incX: MKL_INT,
            beta: f32,
            Y: *mut f32,
            incY: MKL_INT,
        ),
    >,
    pub cblas_saxpyi: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            indx: *const MKL_INT,
            Y: *mut f32,
        ),
    >,
    pub cblas_sgthr:
        Option<unsafe extern "C" fn(N: MKL_INT, Y: *const f32, X: *mut f32, indx: *const MKL_INT)>,
    pub cblas_sgthrz:
        Option<unsafe extern "C" fn(N: MKL_INT, Y: *mut f32, X: *mut f32, indx: *const MKL_INT)>,
    pub cblas_ssctr:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const f32, indx: *const MKL_INT, Y: *mut f32)>,
    pub cblas_srotg:
        Option<unsafe extern "C" fn(a: *mut f32, b: *mut f32, c: *mut f32, s: *mut f32)>,
    pub cblas_dswap: Option<
        unsafe extern "C" fn(N: MKL_INT, X: *mut f64, incX: MKL_INT, Y: *mut f64, incY: MKL_INT),
    >,
    pub cblas_dcopy: Option<
        unsafe extern "C" fn(N: MKL_INT, X: *const f64, incX: MKL_INT, Y: *mut f64, incY: MKL_INT),
    >,
    pub cblas_daxpy: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            incX: MKL_INT,
            Y: *mut f64,
            incY: MKL_INT,
        ),
    >,
    pub cblas_daxpby: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            incX: MKL_INT,
            beta: f64,
            Y: *mut f64,
            incY: MKL_INT,
        ),
    >,
    pub cblas_daxpyi: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            indx: *const MKL_INT,
            Y: *mut f64,
        ),
    >,
    pub cblas_dgthr:
        Option<unsafe extern "C" fn(N: MKL_INT, Y: *const f64, X: *mut f64, indx: *const MKL_INT)>,
    pub cblas_dgthrz:
        Option<unsafe extern "C" fn(N: MKL_INT, Y: *mut f64, X: *mut f64, indx: *const MKL_INT)>,
    pub cblas_dsctr:
        Option<unsafe extern "C" fn(N: MKL_INT, X: *const f64, indx: *const MKL_INT, Y: *mut f64)>,
    pub cblas_drotg:
        Option<unsafe extern "C" fn(a: *mut f64, b: *mut f64, c: *mut f64, s: *mut f64)>,
    pub cblas_cswap: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_ccopy: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_caxpy: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_caxpby: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_caxpyi: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            indx: *const MKL_INT,
            Y: *mut c_void,
        ),
    >,
    pub cblas_cgthr: Option<
        unsafe extern "C" fn(N: MKL_INT, Y: *const c_void, X: *mut c_void, indx: *const MKL_INT),
    >,
    pub cblas_cgthrz: Option<
        unsafe extern "C" fn(N: MKL_INT, Y: *mut c_void, X: *mut c_void, indx: *const MKL_INT),
    >,
    pub cblas_csctr: Option<
        unsafe extern "C" fn(N: MKL_INT, X: *const c_void, indx: *const MKL_INT, Y: *mut c_void),
    >,
    pub cblas_crotg:
        Option<unsafe extern "C" fn(a: *mut c_void, b: *const c_void, c: *mut f32, s: *mut c_void)>,
    pub cblas_zswap: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_zcopy: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_zaxpy: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_zaxpby: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_zaxpyi: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            indx: *const MKL_INT,
            Y: *mut c_void,
        ),
    >,
    pub cblas_zgthr: Option<
        unsafe extern "C" fn(N: MKL_INT, Y: *const c_void, X: *mut c_void, indx: *const MKL_INT),
    >,
    pub cblas_zgthrz: Option<
        unsafe extern "C" fn(N: MKL_INT, Y: *mut c_void, X: *mut c_void, indx: *const MKL_INT),
    >,
    pub cblas_zsctr: Option<
        unsafe extern "C" fn(N: MKL_INT, X: *const c_void, indx: *const MKL_INT, Y: *mut c_void),
    >,
    pub cblas_zrotg:
        Option<unsafe extern "C" fn(a: *mut c_void, b: *const c_void, c: *mut f64, s: *mut c_void)>,
    pub cblas_srotmg: Option<
        unsafe extern "C" fn(d1: *mut f32, d2: *mut f32, b1: *mut f32, b2: f32, P: *mut f32),
    >,
    pub cblas_sroti: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut f32,
            indx: *const MKL_INT,
            Y: *mut f32,
            c: f32,
            s: f32,
        ),
    >,
    pub cblas_srotm: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut f32,
            incX: MKL_INT,
            Y: *mut f32,
            incY: MKL_INT,
            P: *const f32,
        ),
    >,
    pub cblas_drotmg: Option<
        unsafe extern "C" fn(d1: *mut f64, d2: *mut f64, b1: *mut f64, b2: f64, P: *mut f64),
    >,
    pub cblas_drotm: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut f64,
            incX: MKL_INT,
            Y: *mut f64,
            incY: MKL_INT,
            P: *const f64,
        ),
    >,
    pub cblas_droti: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut f64,
            indx: *const MKL_INT,
            Y: *mut f64,
            c: f64,
            s: f64,
        ),
    >,
    pub cblas_sscal:
        Option<unsafe extern "C" fn(N: MKL_INT, alpha: f32, X: *mut f32, incX: MKL_INT)>,
    pub cblas_dscal:
        Option<unsafe extern "C" fn(N: MKL_INT, alpha: f64, X: *mut f64, incX: MKL_INT)>,
    pub cblas_cscal: Option<
        unsafe extern "C" fn(N: MKL_INT, alpha: *const c_void, X: *mut c_void, incX: MKL_INT),
    >,
    pub cblas_zscal: Option<
        unsafe extern "C" fn(N: MKL_INT, alpha: *const c_void, X: *mut c_void, incX: MKL_INT),
    >,
    pub cblas_csscal:
        Option<unsafe extern "C" fn(N: MKL_INT, alpha: f32, X: *mut c_void, incX: MKL_INT)>,
    pub cblas_zdscal:
        Option<unsafe extern "C" fn(N: MKL_INT, alpha: f64, X: *mut c_void, incX: MKL_INT)>,
    pub cblas_srot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut f32,
            incX: MKL_INT,
            Y: *mut f32,
            incY: MKL_INT,
            c: f32,
            s: f32,
        ),
    >,
    pub cblas_drot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut f64,
            incX: MKL_INT,
            Y: *mut f64,
            incY: MKL_INT,
            c: f64,
            s: f64,
        ),
    >,
    pub cblas_crot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
            c: f32,
            s: *const c_void,
        ),
    >,
    pub cblas_zrot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
            c: f64,
            s: *const c_void,
        ),
    >,
    pub cblas_csrot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
            c: f32,
            s: f32,
        ),
    >,
    pub cblas_zdrot: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
            c: f64,
            s: f64,
        ),
    >,
    pub cblas_sgemv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            X: *const f32,
            incX: MKL_INT,
            beta: f32,
            Y: *mut f32,
            incY: MKL_INT,
        ),
    >,
    pub cblas_sgbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            KL: MKL_INT,
            KU: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            X: *const f32,
            incX: MKL_INT,
            beta: f32,
            Y: *mut f32,
            incY: MKL_INT,
        ),
    >,
    pub cblas_strmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            A: *const f32,
            lda: MKL_INT,
            X: *mut f32,
            incX: MKL_INT,
        ),
    >,
    pub cblas_stbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            K: MKL_INT,
            A: *const f32,
            lda: MKL_INT,
            X: *mut f32,
            incX: MKL_INT,
        ),
    >,
    pub cblas_stpmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            Ap: *const f32,
            X: *mut f32,
            incX: MKL_INT,
        ),
    >,
    pub cblas_strsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            A: *const f32,
            lda: MKL_INT,
            X: *mut f32,
            incX: MKL_INT,
        ),
    >,
    pub cblas_stbsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            K: MKL_INT,
            A: *const f32,
            lda: MKL_INT,
            X: *mut f32,
            incX: MKL_INT,
        ),
    >,
    pub cblas_stpsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            Ap: *const f32,
            X: *mut f32,
            incX: MKL_INT,
        ),
    >,
    pub cblas_dgemv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            X: *const f64,
            incX: MKL_INT,
            beta: f64,
            Y: *mut f64,
            incY: MKL_INT,
        ),
    >,
    pub cblas_dgbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            KL: MKL_INT,
            KU: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            X: *const f64,
            incX: MKL_INT,
            beta: f64,
            Y: *mut f64,
            incY: MKL_INT,
        ),
    >,
    pub cblas_dtrmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            A: *const f64,
            lda: MKL_INT,
            X: *mut f64,
            incX: MKL_INT,
        ),
    >,
    pub cblas_dtbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            K: MKL_INT,
            A: *const f64,
            lda: MKL_INT,
            X: *mut f64,
            incX: MKL_INT,
        ),
    >,
    pub cblas_dtpmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            Ap: *const f64,
            X: *mut f64,
            incX: MKL_INT,
        ),
    >,
    pub cblas_dtrsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            A: *const f64,
            lda: MKL_INT,
            X: *mut f64,
            incX: MKL_INT,
        ),
    >,
    pub cblas_dtbsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            K: MKL_INT,
            A: *const f64,
            lda: MKL_INT,
            X: *mut f64,
            incX: MKL_INT,
        ),
    >,
    pub cblas_dtpsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            Ap: *const f64,
            X: *mut f64,
            incX: MKL_INT,
        ),
    >,
    pub cblas_cgemv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_cgbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            KL: MKL_INT,
            KU: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_ctrmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            A: *const c_void,
            lda: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ctbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            K: MKL_INT,
            A: *const c_void,
            lda: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ctpmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            Ap: *const c_void,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ctrsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            A: *const c_void,
            lda: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ctbsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            K: MKL_INT,
            A: *const c_void,
            lda: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ctpsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            Ap: *const c_void,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_zgemv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_zgbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            KL: MKL_INT,
            KU: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_ztrmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            A: *const c_void,
            lda: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ztbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            K: MKL_INT,
            A: *const c_void,
            lda: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ztpmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            Ap: *const c_void,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ztrsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            A: *const c_void,
            lda: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ztbsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            K: MKL_INT,
            A: *const c_void,
            lda: MKL_INT,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ztpsv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            N: MKL_INT,
            Ap: *const c_void,
            X: *mut c_void,
            incX: MKL_INT,
        ),
    >,
    pub cblas_ssymv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            X: *const f32,
            incX: MKL_INT,
            beta: f32,
            Y: *mut f32,
            incY: MKL_INT,
        ),
    >,
    pub cblas_ssbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            X: *const f32,
            incX: MKL_INT,
            beta: f32,
            Y: *mut f32,
            incY: MKL_INT,
        ),
    >,
    pub cblas_sspmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f32,
            Ap: *const f32,
            X: *const f32,
            incX: MKL_INT,
            beta: f32,
            Y: *mut f32,
            incY: MKL_INT,
        ),
    >,
    pub cblas_sger: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            incX: MKL_INT,
            Y: *const f32,
            incY: MKL_INT,
            A: *mut f32,
            lda: MKL_INT,
        ),
    >,
    pub cblas_ssyr: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            incX: MKL_INT,
            A: *mut f32,
            lda: MKL_INT,
        ),
    >,
    pub cblas_sspr: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            incX: MKL_INT,
            Ap: *mut f32,
        ),
    >,
    pub cblas_ssyr2: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            incX: MKL_INT,
            Y: *const f32,
            incY: MKL_INT,
            A: *mut f32,
            lda: MKL_INT,
        ),
    >,
    pub cblas_sspr2: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            incX: MKL_INT,
            Y: *const f32,
            incY: MKL_INT,
            A: *mut f32,
        ),
    >,
    pub cblas_dsymv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            X: *const f64,
            incX: MKL_INT,
            beta: f64,
            Y: *mut f64,
            incY: MKL_INT,
        ),
    >,
    pub cblas_dsbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            X: *const f64,
            incX: MKL_INT,
            beta: f64,
            Y: *mut f64,
            incY: MKL_INT,
        ),
    >,
    pub cblas_dspmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f64,
            Ap: *const f64,
            X: *const f64,
            incX: MKL_INT,
            beta: f64,
            Y: *mut f64,
            incY: MKL_INT,
        ),
    >,
    pub cblas_dger: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            incX: MKL_INT,
            Y: *const f64,
            incY: MKL_INT,
            A: *mut f64,
            lda: MKL_INT,
        ),
    >,
    pub cblas_dsyr: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            incX: MKL_INT,
            A: *mut f64,
            lda: MKL_INT,
        ),
    >,
    pub cblas_dspr: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            incX: MKL_INT,
            Ap: *mut f64,
        ),
    >,
    pub cblas_dsyr2: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            incX: MKL_INT,
            Y: *const f64,
            incY: MKL_INT,
            A: *mut f64,
            lda: MKL_INT,
        ),
    >,
    pub cblas_dspr2: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            incX: MKL_INT,
            Y: *const f64,
            incY: MKL_INT,
            A: *mut f64,
        ),
    >,
    pub cblas_chemv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_chbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_chpmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: *const c_void,
            Ap: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_cgeru: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            A: *mut c_void,
            lda: MKL_INT,
        ),
    >,
    pub cblas_cgerc: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            A: *mut c_void,
            lda: MKL_INT,
        ),
    >,
    pub cblas_cher: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f32,
            X: *const c_void,
            incX: MKL_INT,
            A: *mut c_void,
            lda: MKL_INT,
        ),
    >,
    pub cblas_chpr: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f32,
            X: *const c_void,
            incX: MKL_INT,
            A: *mut c_void,
        ),
    >,
    pub cblas_cher2: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            A: *mut c_void,
            lda: MKL_INT,
        ),
    >,
    pub cblas_chpr2: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            Ap: *mut c_void,
        ),
    >,
    pub cblas_zhemv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_zhbmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_zhpmv: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: *const c_void,
            Ap: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
        ),
    >,
    pub cblas_zgeru: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            A: *mut c_void,
            lda: MKL_INT,
        ),
    >,
    pub cblas_zgerc: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            A: *mut c_void,
            lda: MKL_INT,
        ),
    >,
    pub cblas_zher: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f64,
            X: *const c_void,
            incX: MKL_INT,
            A: *mut c_void,
            lda: MKL_INT,
        ),
    >,
    pub cblas_zhpr: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: f64,
            X: *const c_void,
            incX: MKL_INT,
            A: *mut c_void,
        ),
    >,
    pub cblas_zher2: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            A: *mut c_void,
            lda: MKL_INT,
        ),
    >,
    pub cblas_zhpr2: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            Y: *const c_void,
            incY: MKL_INT,
            Ap: *mut c_void,
        ),
    >,
    pub cblas_sgemm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            B: *const f32,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_sgemm_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA_Array: *const CBLAS_TRANSPOSE,
            TransB_Array: *const CBLAS_TRANSPOSE,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            K_Array: *const MKL_INT,
            alpha_Array: *const f32,
            A_Array: *mut *const f32,
            lda_Array: *const MKL_INT,
            B_Array: *mut *const f32,
            ldb_Array: *const MKL_INT,
            beta_Array: *const f32,
            C_Array: *mut *mut f32,
            ldc_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_sgemm_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *const f32,
            ldb: MKL_INT,
            strideb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_sgemmt: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            B: *const f32,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ssymm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            B: *const f32,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ssyrk: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ssyrk_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            stridea: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_ssyrk_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo_array: *const CBLAS_UPLO,
            Trans_array: *const CBLAS_TRANSPOSE,
            N_array: *const MKL_INT,
            K_array: *const MKL_INT,
            alpha_array: *const f32,
            A_array: *mut *const f32,
            lda_array: *const MKL_INT,
            beta_array: *const f32,
            C_array: *mut *mut f32,
            ldc_array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_ssyr2k: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            B: *const f32,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_strmm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            B: *mut f32,
            ldb: MKL_INT,
        ),
    >,
    pub cblas_strmm_oop: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            B: *const f32,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_strsm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            B: *mut f32,
            ldb: MKL_INT,
        ),
    >,
    pub cblas_strsm_oop: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            B: *const f32,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_strsm_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side_Array: *const CBLAS_SIDE,
            Uplo_Array: *const CBLAS_UPLO,
            TransA_Array: *const CBLAS_TRANSPOSE,
            Diag_Array: *const CBLAS_DIAG,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            alpha_Array: *const f32,
            A_Array: *mut *const f32,
            lda_Array: *const MKL_INT,
            B_Array: *mut *mut f32,
            ldb_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_strsm_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *mut f32,
            ldb: MKL_INT,
            strideb: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_dgemm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            B: *const f64,
            ldb: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_dgemm_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA_Array: *const CBLAS_TRANSPOSE,
            TransB_Array: *const CBLAS_TRANSPOSE,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            K_Array: *const MKL_INT,
            alpha_Array: *const f64,
            A_Array: *mut *const f64,
            lda_Array: *const MKL_INT,
            B_Array: *mut *const f64,
            ldb_Array: *const MKL_INT,
            beta_Array: *const f64,
            C_Array: *mut *mut f64,
            ldc_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_dgemm_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *const f64,
            ldb: MKL_INT,
            strideb: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_dgemmt: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            B: *const f64,
            ldb: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_dsymm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            B: *const f64,
            ldb: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_dsyrk: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_dsyrk_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo_array: *const CBLAS_UPLO,
            Trans_array: *const CBLAS_TRANSPOSE,
            N_array: *const MKL_INT,
            K_array: *const MKL_INT,
            alpha_array: *const f64,
            A_array: *mut *const f64,
            lda_array: *const MKL_INT,
            beta_array: *const f64,
            C_array: *mut *mut f64,
            ldc_array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_dsyrk_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            stridea: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_dsyr2k: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            B: *const f64,
            ldb: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_dtrmm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            B: *mut f64,
            ldb: MKL_INT,
        ),
    >,
    pub cblas_dtrmm_oop: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            B: *const f64,
            ldb: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_dtrsm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            B: *mut f64,
            ldb: MKL_INT,
        ),
    >,
    pub cblas_dtrsm_oop: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            B: *const f64,
            ldb: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_dtrsm_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side_Array: *const CBLAS_SIDE,
            Uplo_Array: *const CBLAS_UPLO,
            Transa_Array: *const CBLAS_TRANSPOSE,
            Diag_Array: *const CBLAS_DIAG,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            alpha_Array: *const f64,
            A_Array: *mut *const f64,
            lda_Array: *const MKL_INT,
            B_Array: *mut *mut f64,
            ldb_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_dtrsm_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *mut f64,
            ldb: MKL_INT,
            strideb: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_cgemm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_cgemm3m: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_cgemm_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA_Array: *const CBLAS_TRANSPOSE,
            TransB_Array: *const CBLAS_TRANSPOSE,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            K_Array: *const MKL_INT,
            alpha_Array: *const c_void,
            A_Array: *mut *const c_void,
            lda_Array: *const MKL_INT,
            B_Array: *mut *const c_void,
            ldb_Array: *const MKL_INT,
            beta_Array: *const c_void,
            C_Array: *mut *mut c_void,
            ldc_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_cgemm_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            strideb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_cgemm3m_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA_Array: *const CBLAS_TRANSPOSE,
            TransB_Array: *const CBLAS_TRANSPOSE,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            K_Array: *const MKL_INT,
            alpha_Array: *const c_void,
            A_Array: *mut *const c_void,
            lda_Array: *const MKL_INT,
            B_Array: *mut *const c_void,
            ldb_Array: *const MKL_INT,
            beta_Array: *const c_void,
            C_Array: *mut *mut c_void,
            ldc_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_cgemm3m_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            strideb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_cgemmt: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_csymm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_csyrk: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_csyrk_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo_array: *const CBLAS_UPLO,
            Trans_array: *const CBLAS_TRANSPOSE,
            N_array: *const MKL_INT,
            K_array: *const MKL_INT,
            alpha_array: *const c_void,
            A_array: *mut *const c_void,
            lda_array: *const MKL_INT,
            beta_array: *const c_void,
            C_array: *mut *mut c_void,
            ldc_array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_csyrk_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_csyr2k: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ctrmm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *mut c_void,
            ldb: MKL_INT,
        ),
    >,
    pub cblas_ctrmm_oop: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ctrsm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *mut c_void,
            ldb: MKL_INT,
        ),
    >,
    pub cblas_ctrsm_oop: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ctrsm_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side_Array: *const CBLAS_SIDE,
            Uplo_Array: *const CBLAS_UPLO,
            Transa_Array: *const CBLAS_TRANSPOSE,
            Diag_Array: *const CBLAS_DIAG,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            alpha_Array: *const c_void,
            A_Array: *mut *const c_void,
            lda_Array: *const MKL_INT,
            B_Array: *mut *mut c_void,
            ldb_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_ctrsm_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *mut c_void,
            ldb: MKL_INT,
            strideb: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_zgemm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_zgemm3m: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_zgemm_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA_Array: *const CBLAS_TRANSPOSE,
            TransB_Array: *const CBLAS_TRANSPOSE,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            K_Array: *const MKL_INT,
            alpha_Array: *const c_void,
            A_Array: *mut *const c_void,
            lda_Array: *const MKL_INT,
            B_Array: *mut *const c_void,
            ldb_Array: *const MKL_INT,
            beta_Array: *const c_void,
            C_Array: *mut *mut c_void,
            ldc_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_zgemm_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            strideb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_zgemm3m_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA_Array: *const CBLAS_TRANSPOSE,
            TransB_Array: *const CBLAS_TRANSPOSE,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            K_Array: *const MKL_INT,
            alpha_Array: *const c_void,
            A_Array: *mut *const c_void,
            lda_Array: *const MKL_INT,
            B_Array: *mut *const c_void,
            ldb_Array: *const MKL_INT,
            beta_Array: *const c_void,
            C_Array: *mut *mut c_void,
            ldc_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_zgemm3m_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            strideb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_zgemmt: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_zsymm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_zsyrk: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_zsyrk_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo_array: *const CBLAS_UPLO,
            Trans_array: *const CBLAS_TRANSPOSE,
            N_array: *const MKL_INT,
            K_array: *const MKL_INT,
            alpha_array: *const c_void,
            A_array: *mut *const c_void,
            lda_array: *const MKL_INT,
            beta_array: *const c_void,
            C_array: *mut *mut c_void,
            ldc_array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_zsyrk_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_zsyr2k: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ztrmm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *mut c_void,
            ldb: MKL_INT,
        ),
    >,
    pub cblas_ztrmm_oop: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ztrsm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *mut c_void,
            ldb: MKL_INT,
        ),
    >,
    pub cblas_ztrsm_oop: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_ztrsm_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side_Array: *const CBLAS_SIDE,
            Uplo_Array: *const CBLAS_UPLO,
            Transa_Array: *const CBLAS_TRANSPOSE,
            Diag_Array: *const CBLAS_DIAG,
            M_Array: *const MKL_INT,
            N_Array: *const MKL_INT,
            alpha_Array: *const c_void,
            A_Array: *mut *const c_void,
            lda_Array: *const MKL_INT,
            B_Array: *mut *mut c_void,
            ldb_Array: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_ztrsm_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            TransA: CBLAS_TRANSPOSE,
            Diag: CBLAS_DIAG,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            B: *mut c_void,
            ldb: MKL_INT,
            strideb: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_chemm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_cherk: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const c_void,
            lda: MKL_INT,
            beta: f32,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_cher2k: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: f32,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_zhemm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Side: CBLAS_SIDE,
            Uplo: CBLAS_UPLO,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: *const c_void,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_zherk: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            A: *const c_void,
            lda: MKL_INT,
            beta: f64,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_zher2k: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            Uplo: CBLAS_UPLO,
            Trans: CBLAS_TRANSPOSE,
            N: MKL_INT,
            K: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            B: *const c_void,
            ldb: MKL_INT,
            beta: f64,
            C: *mut c_void,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_sgemm_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_sgemm_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            src: *const f32,
            ld: MKL_INT,
            dest: *mut f32,
        ),
    >,
    pub cblas_sgemm_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            A: *const f32,
            lda: MKL_INT,
            B: *const f32,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_dgemm_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_dgemm_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f64,
            src: *const f64,
            ld: MKL_INT,
            dest: *mut f64,
        ),
    >,
    pub cblas_dgemm_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            A: *const f64,
            lda: MKL_INT,
            B: *const f64,
            ldb: MKL_INT,
            beta: f64,
            C: *mut f64,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_hgemm: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: MKL_F16,
            A: *const MKL_F16,
            lda: MKL_INT,
            B: *const MKL_F16,
            ldb: MKL_INT,
            beta: MKL_F16,
            C: *mut MKL_F16,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_hgemm_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_hgemm_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: MKL_F16,
            src: *const MKL_F16,
            ld: MKL_INT,
            dest: *mut MKL_F16,
        ),
    >,
    pub cblas_hgemm_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            A: *const MKL_F16,
            lda: MKL_INT,
            B: *const MKL_F16,
            ldb: MKL_INT,
            beta: MKL_F16,
            C: *mut MKL_F16,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_gemm_s16s16s32: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            OffsetC: CBLAS_OFFSET,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_INT16,
            lda: MKL_INT,
            ao: MKL_INT16,
            B: *const MKL_INT16,
            ldb: MKL_INT,
            bo: MKL_INT16,
            beta: f32,
            C: *mut MKL_INT32,
            ldc: MKL_INT,
            cb: *const MKL_INT32,
        ),
    >,
    pub cblas_gemm_s8u8s32: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            OffsetC: CBLAS_OFFSET,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const c_void,
            lda: MKL_INT,
            ao: MKL_INT8,
            B: *const c_void,
            ldb: MKL_INT,
            bo: MKL_INT8,
            beta: f32,
            C: *mut MKL_INT32,
            ldc: MKL_INT,
            cb: *const MKL_INT32,
        ),
    >,
    pub cblas_gemm_bf16bf16f32: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_BF16,
            lda: MKL_INT,
            B: *const MKL_BF16,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_gemm_f16f16f32: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_F16,
            lda: MKL_INT,
            B: *const MKL_F16,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_gemm_e5m2e5m2f32: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_E5M2,
            lda: MKL_INT,
            B: *const MKL_E5M2,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_gemm_e4m3e4m3f32: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            TransB: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_E4M3,
            lda: MKL_INT,
            B: *const MKL_E4M3,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_gemm_s8u8s32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_gemm_s16s16s32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_gemm_bf16bf16f32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_gemm_f16f16f32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_gemm_e5m2e5m2f32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_gemm_e4m3e4m3f32_pack_get_size: Option<
        unsafe extern "C" fn(
            identifier: CBLAS_IDENTIFIER,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
        ) -> usize,
    >,
    pub cblas_gemm_s8u8s32_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            src: *const c_void,
            ld: MKL_INT,
            dest: *mut c_void,
        ),
    >,
    pub cblas_gemm_s16s16s32_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            src: *const MKL_INT16,
            ld: MKL_INT,
            dest: *mut MKL_INT16,
        ),
    >,
    pub cblas_gemm_bf16bf16f32_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            src: *const MKL_BF16,
            ld: MKL_INT,
            dest: *mut MKL_BF16,
        ),
    >,
    pub cblas_gemm_f16f16f32_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            src: *const MKL_F16,
            ld: MKL_INT,
            dest: *mut MKL_F16,
        ),
    >,
    pub cblas_gemm_e5m2e5m2f32_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            src: *const MKL_E5M2,
            ld: MKL_INT,
            dest: *mut MKL_E5M2,
        ),
    >,
    pub cblas_gemm_e4m3e4m3f32_pack: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            identifier: CBLAS_IDENTIFIER,
            Trans: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            src: *const MKL_E4M3,
            ld: MKL_INT,
            dest: *mut MKL_E4M3,
        ),
    >,
    pub cblas_gemm_s8u8s32_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            offsetc: CBLAS_OFFSET,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const c_void,
            lda: MKL_INT,
            ao: MKL_INT8,
            B: *const c_void,
            ldb: MKL_INT,
            bo: MKL_INT8,
            beta: f32,
            C: *mut MKL_INT32,
            ldc: MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub cblas_gemm_s16s16s32_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            offsetc: CBLAS_OFFSET,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_INT16,
            lda: MKL_INT,
            ao: MKL_INT16,
            B: *const MKL_INT16,
            ldb: MKL_INT,
            bo: MKL_INT16,
            beta: f32,
            C: *mut MKL_INT32,
            ldc: MKL_INT,
            co: *const MKL_INT32,
        ),
    >,
    pub cblas_gemm_bf16bf16f32_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_BF16,
            lda: MKL_INT,
            B: *const MKL_BF16,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_gemm_f16f16f32_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_F16,
            lda: MKL_INT,
            B: *const MKL_F16,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_gemm_e5m2e5m2f32_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_E5M2,
            lda: MKL_INT,
            B: *const MKL_E5M2,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub cblas_gemm_e4m3e4m3f32_compute: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: MKL_INT,
            TransB: MKL_INT,
            M: MKL_INT,
            N: MKL_INT,
            K: MKL_INT,
            alpha: f32,
            A: *const MKL_E4M3,
            lda: MKL_INT,
            B: *const MKL_E4M3,
            ldb: MKL_INT,
            beta: f32,
            C: *mut f32,
            ldc: MKL_INT,
        ),
    >,
    pub mkl_cblas_jit_create_dgemm: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: f64,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: f64,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_sgemm: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: f32,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: f32,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_cgemm: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: *const c_void,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: *const c_void,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_cblas_jit_create_zgemm: Option<
        unsafe extern "C" fn(
            jitter: *mut *mut c_void,
            layout: MKL_LAYOUT,
            transa: MKL_TRANSPOSE,
            transb: MKL_TRANSPOSE,
            m: MKL_INT,
            n: MKL_INT,
            k: MKL_INT,
            alpha: *const c_void,
            lda: MKL_INT,
            ldb: MKL_INT,
            beta: *const c_void,
            ldc: MKL_INT,
        ) -> mkl_jit_status_t,
    >,
    pub mkl_jit_get_dgemm_ptr:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> dgemm_jit_kernel_t>,
    pub mkl_jit_get_sgemm_ptr:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> sgemm_jit_kernel_t>,
    pub mkl_jit_get_cgemm_ptr:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> cgemm_jit_kernel_t>,
    pub mkl_jit_get_zgemm_ptr:
        Option<unsafe extern "C" fn(jitter: *const c_void) -> zgemm_jit_kernel_t>,
    pub mkl_jit_destroy: Option<unsafe extern "C" fn(jitter: *mut c_void) -> mkl_jit_status_t>,
    pub cblas_saxpy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f32,
            x: *mut *const f32,
            incx: *const MKL_INT,
            y: *mut *mut f32,
            incy: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_daxpy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const f64,
            x: *mut *const f64,
            incx: *const MKL_INT,
            y: *mut *mut f64,
            incy: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_caxpy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const c_void,
            x: *mut *const c_void,
            incx: *const MKL_INT,
            y: *mut *mut c_void,
            incy: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_zaxpy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            alpha: *const c_void,
            x: *mut *const c_void,
            incx: *const MKL_INT,
            y: *mut *mut c_void,
            incy: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_saxpy_batch_strided: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: f32,
            X: *const f32,
            incX: MKL_INT,
            stridex: MKL_INT,
            Y: *mut f32,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_daxpy_batch_strided: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: f64,
            X: *const f64,
            incX: MKL_INT,
            stridex: MKL_INT,
            Y: *mut f64,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_caxpy_batch_strided: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            stridex: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_zaxpy_batch_strided: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            alpha: *const c_void,
            X: *const c_void,
            incX: MKL_INT,
            stridex: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_scopy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const f32,
            incx: *const MKL_INT,
            y: *mut *mut f32,
            incy: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_dcopy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const f64,
            incx: *const MKL_INT,
            y: *mut *mut f64,
            incy: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_ccopy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const c_void,
            incx: *const MKL_INT,
            y: *mut *mut c_void,
            incy: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_zcopy_batch: Option<
        unsafe extern "C" fn(
            n: *const MKL_INT,
            x: *mut *const c_void,
            incx: *const MKL_INT,
            y: *mut *mut c_void,
            incy: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_scopy_batch_strided: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const f32,
            incX: MKL_INT,
            stridex: MKL_INT,
            Y: *mut f32,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_dcopy_batch_strided: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const f64,
            incX: MKL_INT,
            stridex: MKL_INT,
            Y: *mut f64,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_ccopy_batch_strided: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            stridex: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_zcopy_batch_strided: Option<
        unsafe extern "C" fn(
            N: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            stridex: MKL_INT,
            Y: *mut c_void,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_sgemv_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: *const CBLAS_TRANSPOSE,
            M: *const MKL_INT,
            N: *const MKL_INT,
            alpha: *const f32,
            A: *mut *const f32,
            lda: *const MKL_INT,
            X: *mut *const f32,
            incX: *const MKL_INT,
            beta: *const f32,
            Y: *mut *mut f32,
            incY: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_sgemv_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f32,
            A: *const f32,
            lda: MKL_INT,
            stridea: MKL_INT,
            X: *const f32,
            incX: MKL_INT,
            stridex: MKL_INT,
            beta: f32,
            Y: *mut f32,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_dgemv_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: *const CBLAS_TRANSPOSE,
            M: *const MKL_INT,
            N: *const MKL_INT,
            alpha: *const f64,
            A: *mut *const f64,
            lda: *const MKL_INT,
            X: *mut *const f64,
            incX: *const MKL_INT,
            beta: *const f64,
            Y: *mut *mut f64,
            incY: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_dgemv_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            alpha: f64,
            A: *const f64,
            lda: MKL_INT,
            stridea: MKL_INT,
            X: *const f64,
            incX: MKL_INT,
            stridex: MKL_INT,
            beta: f64,
            Y: *mut f64,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_cgemv_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: *const CBLAS_TRANSPOSE,
            M: *const MKL_INT,
            N: *const MKL_INT,
            alpha: *const c_void,
            A: *mut *const c_void,
            lda: *const MKL_INT,
            X: *mut *const c_void,
            incX: *const MKL_INT,
            beta: *const c_void,
            Y: *mut *mut c_void,
            incY: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_cgemv_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            stridex: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_zgemv_batch: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: *const CBLAS_TRANSPOSE,
            M: *const MKL_INT,
            N: *const MKL_INT,
            alpha: *const c_void,
            A: *mut *const c_void,
            lda: *const MKL_INT,
            X: *mut *const c_void,
            incX: *const MKL_INT,
            beta: *const c_void,
            Y: *mut *mut c_void,
            incY: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_zgemv_batch_strided: Option<
        unsafe extern "C" fn(
            Layout: CBLAS_LAYOUT,
            TransA: CBLAS_TRANSPOSE,
            M: MKL_INT,
            N: MKL_INT,
            alpha: *const c_void,
            A: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            X: *const c_void,
            incX: MKL_INT,
            stridex: MKL_INT,
            beta: *const c_void,
            Y: *mut c_void,
            incY: MKL_INT,
            stridey: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_sdgmm_batch: Option<
        unsafe extern "C" fn(
            layout: CBLAS_LAYOUT,
            side: *const CBLAS_SIDE,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const f32,
            lda: *const MKL_INT,
            x: *mut *const f32,
            incx: *const MKL_INT,
            c: *mut *mut f32,
            ldc: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_sdgmm_batch_strided: Option<
        unsafe extern "C" fn(
            layout: CBLAS_LAYOUT,
            side: CBLAS_SIDE,
            m: MKL_INT,
            n: MKL_INT,
            a: *const f32,
            lda: MKL_INT,
            stridea: MKL_INT,
            x: *const f32,
            incx: MKL_INT,
            stridex: MKL_INT,
            c: *mut f32,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_ddgmm_batch: Option<
        unsafe extern "C" fn(
            layout: CBLAS_LAYOUT,
            side: *const CBLAS_SIDE,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const f64,
            lda: *const MKL_INT,
            x: *mut *const f64,
            incx: *const MKL_INT,
            c: *mut *mut f64,
            ldc: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_ddgmm_batch_strided: Option<
        unsafe extern "C" fn(
            layout: CBLAS_LAYOUT,
            side: CBLAS_SIDE,
            m: MKL_INT,
            n: MKL_INT,
            a: *const f64,
            lda: MKL_INT,
            stridea: MKL_INT,
            x: *const f64,
            incx: MKL_INT,
            stridex: MKL_INT,
            c: *mut f64,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_cdgmm_batch: Option<
        unsafe extern "C" fn(
            layout: CBLAS_LAYOUT,
            side: *const CBLAS_SIDE,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const c_void,
            lda: *const MKL_INT,
            x: *mut *const c_void,
            incx: *const MKL_INT,
            c: *mut *mut c_void,
            ldc: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_cdgmm_batch_strided: Option<
        unsafe extern "C" fn(
            layout: CBLAS_LAYOUT,
            side: CBLAS_SIDE,
            m: MKL_INT,
            n: MKL_INT,
            a: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            x: *const c_void,
            incx: MKL_INT,
            stridex: MKL_INT,
            c: *mut c_void,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
    pub cblas_zdgmm_batch: Option<
        unsafe extern "C" fn(
            layout: CBLAS_LAYOUT,
            side: *const CBLAS_SIDE,
            m: *const MKL_INT,
            n: *const MKL_INT,
            a: *mut *const c_void,
            lda: *const MKL_INT,
            x: *mut *const c_void,
            incx: *const MKL_INT,
            c: *mut *mut c_void,
            ldc: *const MKL_INT,
            group_count: MKL_INT,
            group_size: *const MKL_INT,
        ),
    >,
    pub cblas_zdgmm_batch_strided: Option<
        unsafe extern "C" fn(
            layout: CBLAS_LAYOUT,
            side: CBLAS_SIDE,
            m: MKL_INT,
            n: MKL_INT,
            a: *const c_void,
            lda: MKL_INT,
            stridea: MKL_INT,
            x: *const c_void,
            incx: MKL_INT,
            stridex: MKL_INT,
            c: *mut c_void,
            ldc: MKL_INT,
            stridec: MKL_INT,
            batch_size: MKL_INT,
        ),
    >,
}
