//! Base of current FFI.
//!
//! Declaration of types, enums, cargo feature controls, etc.
//!
//! This file is generated automatically.

pub use crate::mkl_types::*;

/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _MKL_Complex8 {
    pub real: f32,
    pub imag: f32,
}
pub type MKL_Complex8 = _MKL_Complex8;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _MKL_Complex16 {
    pub real: f64,
    pub imag: f64,
}
pub type MKL_Complex16 = _MKL_Complex16;

pub type MKL_INT8 = c_char;
pub type MKL_E5M2 = c_uchar;
pub type MKL_E4M3 = c_uchar;
pub type MKL_INT16 = c_short;
pub type MKL_F16 = c_ushort;
pub type MKL_BF16 = c_ushort;
pub type MKL_INT32 = c_int;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum MKL_LAYOUT {
    MKL_ROW_MAJOR = 101,
    MKL_COL_MAJOR = 102,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum MKL_TRANSPOSE {
    MKL_NOTRANS = 111,
    MKL_TRANS = 112,
    MKL_CONJTRANS = 113,
    MKL_CONJ = 114,
}
pub type sgemm_jit_kernel_t =
    Option<extern "C" fn(arg1: *mut c_void, arg2: *mut f32, arg3: *mut f32, arg4: *mut f32)>;
pub type dgemm_jit_kernel_t =
    Option<extern "C" fn(arg1: *mut c_void, arg2: *mut f64, arg3: *mut f64, arg4: *mut f64)>;
pub type cgemm_jit_kernel_t = Option<
    extern "C" fn(
        arg1: *mut c_void,
        arg2: *mut MKL_Complex8,
        arg3: *mut MKL_Complex8,
        arg4: *mut MKL_Complex8,
    ),
>;
pub type zgemm_jit_kernel_t = Option<
    extern "C" fn(
        arg1: *mut c_void,
        arg2: *mut MKL_Complex16,
        arg3: *mut MKL_Complex16,
        arg4: *mut MKL_Complex16,
    ),
>;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum mkl_jit_status_t {
    MKL_JIT_SUCCESS = 0,
    MKL_NO_JIT = 1,
    MKL_JIT_ERROR = 2,
}

#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum CBLAS_STORAGE {
    CblasPacked = 151,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum CBLAS_IDENTIFIER {
    CblasAMatrix = 161,
    CblasBMatrix = 162,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum CBLAS_OFFSET {
    CblasRowOffset = 171,
    CblasColOffset = 172,
    CblasFixOffset = 173,
}
